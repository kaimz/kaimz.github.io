<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>喃声细语</title>
  <subtitle>开始</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.wuwii.com/"/>
  <updated>2017-10-13T08:06:30.219Z</updated>
  <id>http://blog.wuwii.com/</id>
  
  <author>
    <name>一棵树站在原野上</name>
    <email>k@wuwii.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java客户端使用Jedis操作Redis</title>
    <link href="http://blog.wuwii.com/catch-jedis.html"/>
    <id>http://blog.wuwii.com/catch-jedis.html</id>
    <published>2017-10-13T07:38:03.000Z</published>
    <updated>2017-10-13T08:06:30.219Z</updated>
    
    <content type="html"><![CDATA[<h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p>搭建好redis ，这是我们需要在java中操作它，在这里我使用<code>jedis</code>  ，这次主要使用redis，存储信息，到时间超时，并且自动删除超时信息，累计数据List，达到一定数量，入库，删除，所以这个时候为了数据安全，删除完，才去写入新数据，需要写一个简单的分布式锁。</p>
<a id="more"></a>
<h3 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h3><h4 id="准备，导入Jar包"><a href="#准备，导入Jar包" class="headerlink" title="准备，导入Jar包"></a>准备，导入Jar包</h4><p>首先在pox.xml加入所需要的Jar 包：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">jedis.version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">jedis.version</span>&gt;</span></div><div class="line"></div><div class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">	    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>redis.clients<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">	    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jedis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">	    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jedis.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="编写连接工具类"><a href="#编写连接工具类" class="headerlink" title="编写连接工具类"></a>编写连接工具类</h4><p>首先编写工具类去连接redis：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</div><div class="line"><span class="keyword">import</span> redis.clients.jedis.JedisPool;</div><div class="line"><span class="keyword">import</span> redis.clients.jedis.JedisPoolConfig;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.Serializable;</div><div class="line"></div><div class="line"><span class="comment">/** </span></div><div class="line"><span class="comment">* <span class="doctag">@ClassName</span>: RedisUtil </span></div><div class="line"><span class="comment">* <span class="doctag">@Description</span>: redis工具类 </span></div><div class="line"><span class="comment">* <span class="doctag">@author</span> zhangkai </span></div><div class="line"><span class="comment">* <span class="doctag">@date</span> 2017年9月26日 下午3:20:29 </span></div><div class="line"><span class="comment">*  </span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisUtil</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span>&#123;</div><div class="line">    </div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">1149678082569464779L</span>;</div><div class="line"></div><div class="line">    <span class="comment">//Redis服务器IP</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span>  String addr;</div><div class="line">    </div><div class="line">    <span class="comment">//Redis的端口号</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> port;</div><div class="line">    </div><div class="line">    <span class="comment">//访问密码</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String auth;</div><div class="line">    </div><div class="line">    <span class="comment">//可用连接实例的最大数目，默认值为8；</span></div><div class="line">    <span class="comment">//如果赋值为-1，则表示不限制；如果pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)。</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> maxActive;</div><div class="line">    </div><div class="line">    <span class="comment">//控制一个pool最多有多少个状态为idle(空闲的)的jedis实例，默认值也是8。</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> maxIdle;</div><div class="line">    </div><div class="line">    <span class="comment">//等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时。如果超过等待时间，则直接抛出JedisConnectionException；</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> maxWait;</div><div class="line">    </div><div class="line">    <span class="meta">@SuppressWarnings</span>(<span class="string">"unused"</span>)</div><div class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> timeOut;</div><div class="line">    </div><div class="line">    <span class="comment">//在borrow一个jedis实例时，是否提前进行validate操作；如果为true，则得到的jedis实例均是可用的；</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> testOnBorrow;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Jedis jedis;<span class="comment">//非切片额客户端连接</span></div><div class="line">    </div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JedisPool jedisPool;<span class="comment">//非切片连接池</span></div><div class="line">    </div><div class="line">   <span class="comment">// public static ShardedJedis shardedJedis;//切片额客户端连接</span></div><div class="line">    </div><div class="line">   <span class="comment">// public static ShardedJedisPool shardedJedisPool;//切片连接池</span></div><div class="line">    </div><div class="line">    <span class="keyword">static</span> &#123;</div><div class="line">    	addr = PropertyUtil.get(<span class="string">"redis.addr"</span>);</div><div class="line">    	auth = PropertyUtil.get(<span class="string">"redis.auth"</span>);</div><div class="line">    	port = Integer.parseInt(PropertyUtil.get(<span class="string">"redis.port"</span>));</div><div class="line">    	maxIdle = Integer.parseInt(PropertyUtil.get(<span class="string">"redis.maxIdle"</span>));</div><div class="line">    	maxActive = Integer.parseInt(PropertyUtil.get(<span class="string">"redis.maxActive"</span>));</div><div class="line">    	maxWait = Integer.parseInt(PropertyUtil.get(<span class="string">"redis.maxWait"</span>));</div><div class="line">    	timeOut = Integer.parseInt(PropertyUtil.get(<span class="string">"redis.timeOut"</span>));</div><div class="line">    	testOnBorrow = PropertyUtil.get(<span class="string">"redis.testOnBorrow"</span>).equals(<span class="string">"true"</span>) ? <span class="keyword">true</span> :<span class="keyword">false</span>;</div><div class="line">    	initialPool();</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RedisUtil</span><span class="params">()</span></span>&#123;</div><div class="line">    	initialPool(); </div><div class="line">        jedis = getJedis();</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 初始化非切片池</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">initialPool</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">// 池基本配置 </span></div><div class="line">        JedisPoolConfig config = <span class="keyword">new</span> JedisPoolConfig();</div><div class="line">        config.setMaxTotal(maxActive); </div><div class="line">        config.setMaxIdle(maxIdle); </div><div class="line">        config.setMaxWaitMillis(maxWait); </div><div class="line">        config.setTestOnBorrow(testOnBorrow);</div><div class="line">        jedisPool = <span class="keyword">new</span> JedisPool(config, addr, port);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 获取Jedis实例</span></div><div class="line"><span class="comment">     * <span class="doctag">@return</span></span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">static</span> Jedis <span class="title">getJedis</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">if</span> (jedisPool != <span class="keyword">null</span>) &#123;</div><div class="line">               jedis = jedisPool.getResource();</div><div class="line">               jedis.auth(auth);<span class="comment">//认证</span></div><div class="line">               <span class="keyword">return</span> jedis;</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            Log.error(e);</div><div class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 释放jedis资源</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> jedis</span></div><div class="line"><span class="comment">     */</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">returnResource</span><span class="params">(<span class="keyword">final</span> Jedis jedis)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (jedis != <span class="keyword">null</span>) &#123;</div><div class="line">        	jedis.close();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>连接上redis我们就可以使用jedis操作我们的redis，直接写业务</p>
<h5 id="登陆，保存会话"><a href="#登陆，保存会话" class="headerlink" title="登陆，保存会话"></a>登陆，保存会话</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">login</span><span class="params">(String ucid)</span> </span>&#123;</div><div class="line">        Jedis jedisindex = getJedis();</div><div class="line">        String key = <span class="string">"login"</span> + ucid;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="comment">//设置登陆时常保存到30m，每次操作都会过来重新存下，重新刷新时间;</span></div><div class="line">            jedisindex.expire(key,  <span class="number">1800</span>);</div><div class="line">            </div><div class="line">            <span class="comment">//TODO code </span></div><div class="line">            </div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            LOGGER.error(e.getMessage(), e);</div><div class="line">        &#125; <span class="keyword">finally</span> &#123;</div><div class="line">            returnResource(jedisindex);</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h5 id="使用redis完成分布式锁"><a href="#使用redis完成分布式锁" class="headerlink" title="使用redis完成分布式锁"></a>使用redis完成分布式锁</h5><p>当一个用户满60条数据，进行数据入库，使用分布式锁<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment">  * xxxxxxx</span></div><div class="line"><span class="comment">  *</span></div><div class="line"><span class="comment">  * <span class="doctag">@param</span> key</span></div><div class="line"><span class="comment">  * <span class="doctag">@param</span> track</span></div><div class="line"><span class="comment">  * 满到60个 TIDD add</span></div><div class="line"><span class="comment">  */</span></div><div class="line"> <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addTrack</span><span class="params">(String ucid, String track, Jedis jedisindex)</span> </span>&#123;</div><div class="line">     <span class="keyword">try</span> &#123;</div><div class="line">         Boolean lockFlag = <span class="keyword">false</span>;</div><div class="line">         <span class="keyword">while</span> (!lockFlag) &#123;</div><div class="line">             lockFlag = lock(<span class="string">"lock"</span> + ucid, jedisindex); <span class="comment">//上锁</span></div><div class="line">             jedisindex.lpush(ucid, track); <span class="comment">//添加数据</span></div><div class="line">             unlock(<span class="string">"lock"</span> + ucid, jedisindex); <span class="comment">//释放锁</span></div><div class="line">         &#125;</div><div class="line">         <span class="keyword">long</span> len = jedisindex.llen(ucid);</div><div class="line">         lockFlag = <span class="keyword">false</span>;</div><div class="line">         <span class="keyword">if</span> (len &gt;= <span class="number">60</span>) &#123;</div><div class="line">             <span class="keyword">while</span> (!lockFlag) &#123;</div><div class="line">                 lockFlag = lock(<span class="string">"lock"</span> + ucid, jedisindex); <span class="comment">//上锁</span></div><div class="line">                  <span class="comment">//满了60条数据 去数据入库，并且删除redis中的value,</span></div><div class="line">               <span class="comment">// 我的下个业务 addHistoryTrack(ucid, jedisindex.lrange(ucid, 0, 59), jedisindex);</span></div><div class="line">                 unlock(<span class="string">"lock"</span> + ucid, jedisindex); <span class="comment">//释放锁</span></div><div class="line">             &#125;</div><div class="line">         &#125;</div><div class="line">     &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">         LOGGER.error(e.getMessage(), e);</div><div class="line">     &#125;</div><div class="line"> &#125;</div><div class="line"> </div><div class="line"> <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> LOCK_TIMEOUT = <span class="number">1</span>; <span class="comment">//加锁超时时间 单位秒  意味着加锁期间内执行完操作 如果未完成会有并发现象</span></div><div class="line"> </div><div class="line"> </div><div class="line">  <span class="comment">/**</span></div><div class="line"><span class="comment">  * 上锁</span></div><div class="line"><span class="comment">  */</span></div><div class="line"> <span class="meta">@Override</span></div><div class="line"> <span class="function"><span class="keyword">public</span> Boolean <span class="title">lock</span><span class="params">(String lock, Jedis jedisindex)</span> </span>&#123;</div><div class="line">     <span class="comment">// 1. 通过SETNX试图获取一个lock</span></div><div class="line">     <span class="keyword">boolean</span> success = <span class="keyword">false</span>;</div><div class="line">     <span class="keyword">long</span> value = System.currentTimeMillis() + LOCK_TIMEOUT * <span class="number">1000</span> + <span class="number">1</span>;</div><div class="line">     <span class="keyword">long</span> acquired = jedis.setnx(lock, String.valueOf(value));</div><div class="line">     jedisindex.expire(lock, LOCK_TIMEOUT);<span class="comment">//设置1秒超时 ,到时候自动释放锁</span></div><div class="line">     <span class="comment">//SETNX成功，则成功获取一个锁  </span></div><div class="line">     <span class="keyword">if</span> (acquired == <span class="number">1</span>) success = <span class="keyword">true</span>;</div><div class="line">     <span class="keyword">return</span> success;</div><div class="line"> &#125;</div><div class="line"></div><div class="line"> <span class="comment">/**</span></div><div class="line"><span class="comment">  * 解锁</span></div><div class="line"><span class="comment">  */</span></div><div class="line"> <span class="meta">@Override</span></div><div class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">unlock</span><span class="params">(String lock, Jedis jedisindex)</span> </span>&#123;</div><div class="line">     jedisindex.del(lock);</div><div class="line"> &#125;</div></pre></td></tr></table></figure></p>
<h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><ol>
<li>使用jedis操作redis，使用的是spring 框架，可以使用<code>Spring Data Redis</code> ,更符合java spring框架依赖注入的特性，使用上大同小异。</li>
<li>使用多线程操作redis 不要把 jedis 存入到<code>ThreadLocal</code> 或各种全局变量中， 可能出现冲突。需要重新从<code>jedisPool</code>获取<code>jedis</code>，然后用完关闭连接就行。</li>
</ol>
<h4 id="学习："><a href="#学习：" class="headerlink" title="学习："></a>学习：</h4><ol>
<li>以后了解对jedis关于事务、管道和分布式的使用。</li>
</ol>
<h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div></pre></td><td class="code"><pre><div class="line">1）连接操作命令</div><div class="line">   quit：关闭连接（connection）</div><div class="line">   auth：简单密码认证</div><div class="line">   help cmd： 查看cmd帮助，例如：help quit</div><div class="line">   </div><div class="line">   2）持久化</div><div class="line">   save：将数据同步保存到磁盘</div><div class="line">   bgsave：将数据异步保存到磁盘</div><div class="line">   lastsave：返回上次成功将数据保存到磁盘的Unix时戳</div><div class="line">   shundown：将数据同步保存到磁盘，然后关闭服务</div><div class="line">   </div><div class="line">   3）远程服务控制</div><div class="line">   info：提供服务器的信息和统计</div><div class="line">   monitor：实时转储收到的请求</div><div class="line">   slaveof：改变复制策略设置</div><div class="line">   config：在运行时配置Redis服务器</div><div class="line">   </div><div class="line">   4）对value操作的命令</div><div class="line">   exists(key)：确认一个key是否存在</div><div class="line">   del(key)：删除一个key</div><div class="line">   type(key)：返回值的类型</div><div class="line">   keys(pattern)：返回满足给定pattern的所有key</div><div class="line">   randomkey：随机返回key空间的一个</div><div class="line">   keyrename(oldname, newname)：重命名key</div><div class="line">   dbsize：返回当前数据库中key的数目</div><div class="line">   expire：设定一个key的活动时间（s）</div><div class="line">   ttl：获得一个key的活动时间</div><div class="line">   select(index)：按索引查询</div><div class="line">   move(key, dbindex)：移动当前数据库中的key到dbindex数据库</div><div class="line">   flushdb：删除当前选择数据库中的所有key</div><div class="line">   flushall：删除所有数据库中的所有key</div><div class="line">   </div><div class="line">   5）String</div><div class="line">   set(key, value)：给数据库中名称为key的string赋予值value</div><div class="line">   get(key)：返回数据库中名称为key的string的value</div><div class="line">   getset(key, value)：给名称为key的string赋予上一次的value</div><div class="line">   mget(key1, key2,…, key N)：返回库中多个string的value</div><div class="line">   setnx(key, value)：添加string，名称为key，值为value</div><div class="line">   setex(key, time, value)：向库中添加string，设定过期时间time</div><div class="line">   mset(key N, value N)：批量设置多个string的值</div><div class="line">   msetnx(key N, value N)：如果所有名称为key i的string都不存在</div><div class="line">   incr(key)：名称为key的string增1操作</div><div class="line">   incrby(key, integer)：名称为key的string增加integer</div><div class="line">   decr(key)：名称为key的string减1操作</div><div class="line">   decrby(key, integer)：名称为key的string减少integer</div><div class="line">   append(key, value)：名称为key的string的值附加value</div><div class="line">   substr(key, start, end)：返回名称为key的string的value的子串</div><div class="line">   </div><div class="line">   6）List </div><div class="line">   rpush(key, value)：在名称为key的list尾添加一个值为value的元素</div><div class="line">   lpush(key, value)：在名称为key的list头添加一个值为value的 元素</div><div class="line">   llen(key)：返回名称为key的list的长度</div><div class="line">   lrange(key, start, end)：返回名称为key的list中start至end之间的元素</div><div class="line">   ltrim(key, start, end)：截取名称为key的list</div><div class="line">   lindex(key, index)：返回名称为key的list中index位置的元素</div><div class="line">   lset(key, index, value)：给名称为key的list中index位置的元素赋值</div><div class="line">   lrem(key, count, value)：删除count个key的list中值为value的元素</div><div class="line">   lpop(key)：返回并删除名称为key的list中的首元素</div><div class="line">   rpop(key)：返回并删除名称为key的list中的尾元素</div><div class="line">   blpop(key1, key2,… key N, timeout)：lpop命令的block版本。</div><div class="line">   brpop(key1, key2,… key N, timeout)：rpop的block版本。</div><div class="line">   rpoplpush(srckey, dstkey)：返回并删除名称为srckey的list的尾元素，并将该元素添加到名称为dstkey的list的头部</div><div class="line">   </div><div class="line">   7）Set</div><div class="line">   sadd(key, member)：向名称为key的set中添加元素member</div><div class="line">   srem(key, member) ：删除名称为key的set中的元素member</div><div class="line">   spop(key) ：随机返回并删除名称为key的set中一个元素</div><div class="line">   smove(srckey, dstkey, member) ：移到集合元素</div><div class="line">   scard(key) ：返回名称为key的set的基数</div><div class="line">   sismember(key, member) ：member是否是名称为key的set的元素</div><div class="line">   sinter(key1, key2,…key N) ：求交集</div><div class="line">   sinterstore(dstkey, (keys)) ：求交集并将交集保存到dstkey的集合</div><div class="line">   sunion(key1, (keys)) ：求并集</div><div class="line">   sunionstore(dstkey, (keys)) ：求并集并将并集保存到dstkey的集合</div><div class="line">   sdiff(key1, (keys)) ：求差集</div><div class="line">   sdiffstore(dstkey, (keys)) ：求差集并将差集保存到dstkey的集合</div><div class="line">   smembers(key) ：返回名称为key的set的所有元素</div><div class="line">   srandmember(key) ：随机返回名称为key的set的一个元素</div><div class="line">   </div><div class="line">   8）Hash</div><div class="line">   hset(key, field, value)：向名称为key的hash中添加元素field</div><div class="line">   hget(key, field)：返回名称为key的hash中field对应的value</div><div class="line">   hmget(key, (fields))：返回名称为key的hash中field i对应的value</div><div class="line">   hmset(key, (fields))：向名称为key的hash中添加元素field </div><div class="line">   hincrby(key, field, integer)：将名称为key的hash中field的value增加integer</div><div class="line">   hexists(key, field)：名称为key的hash中是否存在键为field的域</div><div class="line">   hdel(key, field)：删除名称为key的hash中键为field的域</div><div class="line">   hlen(key)：返回名称为key的hash中元素个数</div><div class="line">   hkeys(key)：返回名称为key的hash中所有键</div><div class="line">   hvals(key)：返回名称为key的hash中所有键对应的value</div><div class="line">   hgetall(key)：返回名称为key的hash中所有的键（field）及其对应的value</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h3&gt;&lt;p&gt;搭建好redis ，这是我们需要在java中操作它，在这里我使用&lt;code&gt;jedis&lt;/code&gt;  ，这次主要使用redis，存储信息，到时间超时，并且自动删除超时信息，累计数据List，达到一定数量，入库，删除，所以这个时候为了数据安全，删除完，才去写入新数据，需要写一个简单的分布式锁。&lt;/p&gt;
    
    </summary>
    
      <category term="测试" scheme="http://blog.wuwii.com/categories/%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="java" scheme="http://blog.wuwii.com/tags/java/"/>
    
      <category term="redis" scheme="http://blog.wuwii.com/tags/redis/"/>
    
      <category term="jedis" scheme="http://blog.wuwii.com/tags/jedis/"/>
    
  </entry>
  
  <entry>
    <title>关于升级有道云笔记v6.0.0.1</title>
    <link href="http://blog.wuwii.com/youdao-note.html"/>
    <id>http://blog.wuwii.com/youdao-note.html</id>
    <published>2017-10-13T06:08:03.000Z</published>
    <updated>2017-10-13T06:48:11.280Z</updated>
    
    <content type="html"><![CDATA[<p>升级后有道云笔记确实有很大的改变，界面变得大方简洁了许多，但是左下角的广告还是在，免费版就不要介意了，网上又办法去掉它。反应速度快上不少，而且最爱的markdown语法看起来反应又快了，以前输入上了百行，拖动就有点卡了，难受得很。细心的人估计发现了，右下角多了一个图标，对的新版本多了三种模式：三栏模式、精简模式和编辑模式。试了一下，很优秀的一个功能。</p>
<p><img src="https://i.loli.net/2017/10/13/59e0609fa7fe2.png" alt="image"></p>
<a id="more"></a>
<p>当然更新是好事，但是我出现了个奇怪的问题，单击导航栏的目录，竟然不能预览文章。</p>
<p><img src="https://i.loli.net/2017/10/13/59e0601f2a9db.png" alt="image"></p>
<p>就是直接说无预览，非要我进入编辑模式，才能看到文章。</p>
<p>无奈，网上搜也没搜到，只好去撩客服了。</p>
<p><img src="https://ooo.0o0.ooo/2017/10/13/59e060bb5c8ae.png" alt="image"></p>
<p>清空就好了，重新登陆账户信息，浪费了不少时间了。。希望有道云笔记能越做越好吧。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;升级后有道云笔记确实有很大的改变，界面变得大方简洁了许多，但是左下角的广告还是在，免费版就不要介意了，网上又办法去掉它。反应速度快上不少，而且最爱的markdown语法看起来反应又快了，以前输入上了百行，拖动就有点卡了，难受得很。细心的人估计发现了，右下角多了一个图标，对的新版本多了三种模式：三栏模式、精简模式和编辑模式。试了一下，很优秀的一个功能。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2017/10/13/59e0609fa7fe2.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://blog.wuwii.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Youdao Note" scheme="http://blog.wuwii.com/tags/Youdao-Note/"/>
    
  </entry>
  
  <entry>
    <title>CENTOS 7 中报错 java.net.ConnectException Connection refused</title>
    <link href="http://blog.wuwii.com/tomcat-error01.html"/>
    <id>http://blog.wuwii.com/tomcat-error01.html</id>
    <published>2017-10-12T12:08:03.000Z</published>
    <updated>2017-10-13T00:54:55.276Z</updated>
    
    <content type="html"><![CDATA[<p>再<code>centos7</code> 中正常启动<code>tomcat 9</code>，但是发现项目都不能正常访问，去关闭tomcat 却报错，如下：<a id="more"></a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># /opt/apache-tomcat-9.0.0.M22/bin/shutdown.sh </span></div><div class="line">Using CATALINA_BASE:   /opt/apache-tomcat-9.0.0.M22</div><div class="line">Using CATALINA_HOME:   /opt/apache-tomcat-9.0.0.M22</div><div class="line">Using CATALINA_TMPDIR: /opt/apache-tomcat-9.0.0.M22/temp</div><div class="line">Using JRE_HOME:        /opt/jdk1.8.0_131/jre</div><div class="line">Using CLASSPATH:       /opt/apache-tomcat-9.0.0.M22/bin/bootstrap.jar:/opt/apache-tomcat-9.0.0.M22/bin/tomcat-juli.jar</div><div class="line">十月 12, 2017 7:08:00 下午 org.apache.catalina.startup.Catalina stopServer</div><div class="line">严重: Could not contact [localhost:[8005]]. Tomcat may not be running.</div><div class="line">十月 12, 2017 7:08:00 下午 org.apache.catalina.startup.Catalina stopServer</div><div class="line">严重: Catalina.stop: </div><div class="line">java.net.ConnectException: 拒绝连接 (Connection refused)</div><div class="line">        at java.net.PlainSocketImpl.socketConnect(Native Method)</div><div class="line">        at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)</div><div class="line">        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)</div><div class="line">        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)</div><div class="line">        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)</div><div class="line">        at java.net.Socket.connect(Socket.java:589)</div><div class="line">        at java.net.Socket.connect(Socket.java:538)</div><div class="line">        at java.net.Socket.&lt;init&gt;(Socket.java:434)</div><div class="line">        at java.net.Socket.&lt;init&gt;(Socket.java:211)</div><div class="line">        at org.apache.catalina.startup.Catalina.stopServer(Catalina.java:478)</div><div class="line">        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</div><div class="line">        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)</div><div class="line">        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</div><div class="line">        at java.lang.reflect.Method.invoke(Method.java:498)</div><div class="line">        at org.apache.catalina.startup.Bootstrap.stopServer(Bootstrap.java:408)</div><div class="line">        at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:497)</div></pre></td></tr></table></figure></p>
<p>发现这种奇怪的问题，去检查端口，发现根本没有tomcat进程的端口：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">[root@localhost bin]<span class="comment">#  netstat -tnlp</span></div><div class="line">Active Internet connections (only servers)</div><div class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </div><div class="line">tcp        0      0 0.0.0.0:22122           0.0.0.0:*               LISTEN      63455/fdfs_trackerd </div><div class="line">tcp        0      0 0.0.0.0:3690            0.0.0.0:*               LISTEN      2855/svnserve       </div><div class="line">tcp        0      0 0.0.0.0:6379            0.0.0.0:*               LISTEN      127481/redis-server </div><div class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      1396/sshd           </div><div class="line">tcp        0      0 0.0.0.0:5432            0.0.0.0:*               LISTEN      183014/postgres     </div><div class="line">tcp        0      0 0.0.0.0:23000           0.0.0.0:*               LISTEN      64278/fdfs_storaged </div><div class="line">tcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN      2229/master         </div><div class="line">tcp        0      0 0.0.0.0:8001            0.0.0.0:*               LISTEN      98427/mosquitto     </div><div class="line">tcp        0      0 0.0.0.0:8002            0.0.0.0:*               LISTEN      72040/nginx: master </div><div class="line">tcp        0      0 0.0.0.0:8004            0.0.0.0:*               LISTEN      109896/vsftpd       </div><div class="line">tcp6       0      0 :::8009                 :::*                    LISTEN      104964/java         </div><div class="line">tcp6       0      0 :::6379                 :::*                    LISTEN      127481/redis-server </div><div class="line">tcp6       0      0 :::22                   :::*                    LISTEN      1396/sshd           </div><div class="line">tcp6       0      0 :::5432                 :::*                    LISTEN      183014/postgres     </div><div class="line">tcp6       0      0 ::1:25                  :::*                    LISTEN      2229/master      </div><div class="line">tcp6       0      0 :::8001                 :::*                    LISTEN      98427/mosquitto     </div><div class="line">tcp6       0      0 127.0.0.1:8005          :::*                    LISTEN      104964/java</div></pre></td></tr></table></figure></p>
<p>只好重新启动但是，还是启动后，还是没成功访问到项目，日志里也看不到什么多余的错误信息。</p>
<p>只好把项目删除了，再去启动tomcat，启动成功后，再去把war 包丢进webapps中，发现项目居然能成功访问，搞半天，没搞明白，估计还是项目有点问题，不能正常启动，直接把tomcat 弄死了。先记录下，以后有时间深入了解下。。</p>
<p>启动：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@localhost bin]<span class="comment"># startup.sh              </span></div><div class="line">Using CATALINA_BASE:   /opt/apache-tomcat-9.0.0.M22</div><div class="line">Using CATALINA_HOME:   /opt/apache-tomcat-9.0.0.M22</div><div class="line">Using CATALINA_TMPDIR: /opt/apache-tomcat-9.0.0.M22/temp</div><div class="line">Using JRE_HOME:        /opt/jdk1.8.0_131/jre</div><div class="line">Using CLASSPATH:       /opt/apache-tomcat-9.0.0.M22/bin/bootstrap.jar:/opt/apache-tomcat-9.0.0.M22/bin/tomcat-juli.jar</div><div class="line">Tomcat started.</div></pre></td></tr></table></figure></p>
<p>监视端口进程：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@localhost bin]<span class="comment"># netstat -tnlp|grep 8000</span></div><div class="line">tcp6       0      0 :::8000                 :::*                    LISTEN      104964/java</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;再&lt;code&gt;centos7&lt;/code&gt; 中正常启动&lt;code&gt;tomcat 9&lt;/code&gt;，但是发现项目都不能正常访问，去关闭tomcat 却报错，如下：
    
    </summary>
    
      <category term="学习笔记" scheme="http://blog.wuwii.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="tomcat" scheme="http://blog.wuwii.com/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>easyui完成日期验证，控制日期的输入范围</title>
    <link href="http://blog.wuwii.com/easyui-validate-datebox.html"/>
    <id>http://blog.wuwii.com/easyui-validate-datebox.html</id>
    <published>2017-10-11T02:08:03.000Z</published>
    <updated>2017-10-12T00:39:51.464Z</updated>
    
    <content type="html"><![CDATA[<p>今天改前端问题时候遇到了这个问题，其实easyui还好，看官网例子，也可以解决我们的问题，但是现实业务中却是要考虑到各方面的，要做到更全。<br><a id="more"></a></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"height: 100%; width: 200px; margin-left: 4px; display: inline-block;"</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"Title"</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"Icon icon-calendar"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"Text"</span>&gt;</span>上传时间<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width: 120px; height: 38px; line-height: 38px; display: inline-block; float: left; margin-left: 5px;"</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"uploadtime1"</span> <span class="attr">class</span>=<span class="string">"easyui-datebox"</span> <span class="attr">data-options</span>=<span class="string">"width:120,height:24,editable:false"</span> /&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"height: 38px; width: 146px; margin-left: 4px; display: inline-block;"</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width: 12px; height: 100%; display: inline-block; line-height: 38px; text-align: center; float: left; margin-left: 2px;"</span>&gt;</span>至<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width: 120px; height: 100%; line-height: 38px; display: inline-block; margin-left: 12px; float: left;"</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"uploadtime2"</span> <span class="attr">class</span>=<span class="string">"easyui-datebox"</span> <span class="attr">data-options</span>=<span class="string">"width:120,height:24,editable:false,validType:'validateDate[\'#uploadtime1\']'"</span> /&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$.extend($.fn.validatebox.defaults.rules, &#123;</div><div class="line">    validateDate: &#123;</div><div class="line">        validator: <span class="function"><span class="keyword">function</span> (<span class="params">value, param</span>) </span>&#123;</div><div class="line">            <span class="keyword">var</span> start = $(param[<span class="number">0</span>]).datetimebox(<span class="string">'getValue'</span>);  <span class="comment">//获取开始时间</span></div><div class="line">            <span class="keyword">return</span> value &gt;= start;                             <span class="comment">//有效范围为当前时间大于开始时间</span></div><div class="line">        &#125;,</div><div class="line">        message: <span class="string">'结束日期应不能小于开始日期!'</span>                     <span class="comment">//匹配失败消息</span></div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>效果图：<br><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171011171235.png" alt="image"><br>这种方法使用的是easyui的验证，提醒错误错误信息的样式比较好，而且不用手动输入，当然也又有缺点，就是，当用户先输入结束日期，再输入开始日期，就不好去验证了。<br>可以使用例外一种方式控制，官网上看到的，就是控制输入<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">			$(<span class="string">'#dd'</span>).datebox().datebox(<span class="string">'calendar'</span>).calendar(&#123;</div><div class="line">				validator: <span class="function"><span class="keyword">function</span>(<span class="params">date</span>)</span>&#123;</div><div class="line">					<span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>();</div><div class="line">					<span class="keyword">var</span> d1 = <span class="keyword">new</span> <span class="built_in">Date</span>(now.getFullYear(), now.getMonth(), now.getDate());</div><div class="line">					<span class="keyword">var</span> d2 = <span class="keyword">new</span> <span class="built_in">Date</span>(now.getFullYear(), now.getMonth(), now.getDate()+<span class="number">10</span>);</div><div class="line">					<span class="keyword">return</span> d1&lt;=date &amp;&amp; date&lt;=d2;</div><div class="line">				&#125;</div><div class="line">			&#125;);</div><div class="line">		&#125;);</div></pre></td></tr></table></figure></p>
<p>效果图：<br><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171011172502.png" alt="image"><br>只能选择设置区域的日期，其余的不能选择。</p>
<p>需要注意的是<code>date-box</code>需要加上<code>editable:false</code>这个属性，不能让手动输入，只能选择。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天改前端问题时候遇到了这个问题，其实easyui还好，看官网例子，也可以解决我们的问题，但是现实业务中却是要考虑到各方面的，要做到更全。&lt;br&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://blog.wuwii.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="easyui" scheme="http://blog.wuwii.com/tags/easyui/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript和jQuery中forEach和each的用法，以及各种遍历的使用</title>
    <link href="http://blog.wuwii.com/js-array.html"/>
    <id>http://blog.wuwii.com/js-array.html</id>
    <published>2017-10-10T13:28:03.000Z</published>
    <updated>2017-10-12T00:39:51.480Z</updated>
    
    <content type="html"><![CDATA[<p>今天做个选择出id前缀为imgpreviwe的img标签，给它们个背景图片，直接想都没想，forEach调了半天，没调出来，才知道用错了方法。。哈哈，以前的东西忘得差不多了，重新学习一遍。。</p>
<a id="more"></a>
<p>正确的是这样写，使用<code>each</code>：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"[id^='imgpreviwe']"</span>, $(<span class="string">".MachineEdit"</span>, Dev.App.FillPanel.Target)).each(<span class="function"><span class="keyword">function</span> (<span class="params">index</span>) </span>&#123;</div><div class="line">                $(<span class="keyword">this</span>).attr(<span class="string">"src"</span>, <span class="string">"image/authorization/default.jpg"</span>);</div><div class="line">            &#125;);</div></pre></td></tr></table></figure></p>
<p>下面来重新学习一遍：</p>
<p>首先声明一个数组：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> array = [<span class="string">"z"</span>, <span class="string">"s"</span>, <span class="string">"y"</span>, <span class="string">"l"</span>, <span class="string">"v"</span>];</div></pre></td></tr></table></figure></p>
<p>首先来个最简单的遍历：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, len = array.length; i &lt; len; i++)&#123;</div><div class="line">          <span class="built_in">console</span>.log(array[i]);</div><div class="line">      &#125;</div></pre></td></tr></table></figure></p>
<p>运行结果是：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">z</div><div class="line">s</div><div class="line">y</div><div class="line">i</div><div class="line">v</div></pre></td></tr></table></figure></p>
<p>再来看下<code>forEach</code>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">array.forEach(console.log);</div></pre></td></tr></table></figure></p>
<p>运行结果：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">z 0 (5) [&quot;z&quot;, &quot;s&quot;, &quot;y&quot;, &quot;l&quot;, &quot;v&quot;]</div><div class="line">s 1 (5) [&quot;z&quot;, &quot;s&quot;, &quot;y&quot;, &quot;l&quot;, &quot;v&quot;]</div><div class="line">y 2 (5) [&quot;z&quot;, &quot;s&quot;, &quot;y&quot;, &quot;l&quot;, &quot;v&quot;]</div><div class="line">l 3 (5) [&quot;z&quot;, &quot;s&quot;, &quot;y&quot;, &quot;l&quot;, &quot;v&quot;]</div><div class="line">v 4 (5) [&quot;z&quot;, &quot;s&quot;, &quot;y&quot;, &quot;l&quot;, &quot;v&quot;]</div></pre></td></tr></table></figure>
<p>其实结果是一样的。。</p>
<p>了解到forEach的源码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment">@param &#123;function(T=, number=, Array.&lt;T&gt;=)&#125; callback</span></div><div class="line"><span class="comment">@param &#123;*&#125; [thisArg]</span></div><div class="line"><span class="comment">@return &#123;void&#125;</span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="built_in">Array</span>.prototype.forEach = <span class="function"><span class="keyword">function</span>(<span class="params">callback,thisArg</span>) </span>&#123;&#125;;</div></pre></td></tr></table></figure></p>
<p>后来发现它的使用：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">array.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">value,index,array</span>)</span>&#123;</div><div class="line">            <span class="built_in">console</span>.log(index + <span class="string">" : "</span> + value + <span class="string">" ~ "</span> + array);</div><div class="line">      &#125;);</div></pre></td></tr></table></figure></p>
<ul>
<li><code>value</code> 是遍历的值</li>
<li><code>index</code> 索引</li>
<li><code>array</code> 数组本身<br>运行结果：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">0 : z ~ z,s,y,l,v</div><div class="line">1 : s ~ z,s,y,l,v</div><div class="line">2 : y ~ z,s,y,l,v</div><div class="line">3 : l ~ z,s,y,l,v</div><div class="line">4 : v ~ z,s,y,l,v</div></pre></td></tr></table></figure>
</li>
</ul>
<p><code>map</code>：map即是 “映射”的意思 用法与 forEach 相似：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">array.map(<span class="function"><span class="keyword">function</span>(<span class="params">value,index,array</span>)</span>&#123;</div><div class="line">            <span class="built_in">console</span>.log(index + <span class="string">" : "</span> + value + <span class="string">" ~ "</span> + array);</div><div class="line">      &#125;);</div></pre></td></tr></table></figure></p>
<p>使用<code>each</code>来遍历数组：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$.each(array, <span class="function"><span class="keyword">function</span> (<span class="params">index, value</span>) </span>&#123;</div><div class="line">          <span class="built_in">console</span>.log(index + <span class="string">" : "</span> + value);</div><div class="line">      &#125;)</div></pre></td></tr></table></figure>
<p>结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">0 : z </div><div class="line">1 : s</div><div class="line">2 : y</div><div class="line">3 : l </div><div class="line">4 : v</div></pre></td></tr></table></figure></p>
<p>回归正题了，上面我们使用的是$().each()，处理Dom对象：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$(“input[name=’type’]”).each(<span class="function"><span class="keyword">function</span>(<span class="params">index</span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>($(<span class="keyword">this</span>).attr(‘checked’)==<span class="literal">true</span>)&#123;</div><div class="line">        <span class="comment">//code</span></div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<ul>
<li>index 为索引<br>找到所有input dom的 name 属性为 type ，  </li>
</ul>
<p>看下<code>jQuery each</code>源码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">each: <span class="function"><span class="keyword">function</span>(<span class="params"> obj, callback </span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> length, i = <span class="number">0</span>;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> ( isArrayLike( obj ) ) &#123;</div><div class="line">            length = obj.length;</div><div class="line">            <span class="keyword">for</span> ( ; i &lt; length; i++ ) &#123;</div><div class="line">                <span class="keyword">if</span> ( callback.call( obj[ i ], i, obj[ i ] ) === <span class="literal">false</span> ) &#123;</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">for</span> ( i <span class="keyword">in</span> obj ) &#123;</div><div class="line">                <span class="keyword">if</span> ( callback.call( obj[ i ], i, obj[ i ] ) === <span class="literal">false</span> ) &#123;</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> obj;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>看到别人写到，jQuery里的each方法是通过js里的call方法来实现的。<br>call这个方法很奇妙，其实官方的说明是：“调用一个对象的一个方法，以另一个对象替换当前对象。”网上更多的解释是变换上下文环境，也有说是改变上下文this指针。<br><code>call([thisObj[,arg1[, arg2[,   [,.argN]]]]])</code></p>
<p><strong>参数</strong><br><code>thisObj</code><br>可选项。将被用作当前对象的对象。 </p>
<p><code>arg1, arg2,  , argN</code><br>可选项。将被传递方法参数序列。</p>
<p>说明<br>call 方法可以用来代替另一个对象调用一个方法。call 方法可将一个函数的对象上下文从初始的上下文改变为由 thisObj 指定的新对象。</p>
<p>引用网上有一个很经典的例子:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">a,b</span>)</span>&#123;</div><div class="line">    alert(a+b);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sub</span>(<span class="params">a,b</span>)</span>&#123;</div><div class="line">    alert(a-b);</div><div class="line">&#125;</div><div class="line"></div><div class="line">add.call(sub,<span class="number">3</span>,<span class="number">1</span>);</div></pre></td></tr></table></figure></p>
<p>用 add 来替换 sub，add.call(sub,3,1) == add(3,1) ，所以运行结果为：<strong>alert(4)</strong>; </p>
<p>感觉有点厉害了。</p>
<p><strong>注意：</strong> js 中的函数其实是对象，函数名是对 Function 对象的引用。</p>
<p>需要注意的Javascript还有个<br><code>for/in</code> - 循环遍历对象的属性<br><strong>功能</strong> ：遍历对象属性，把属性名和属性值都提出来<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">(<span class="function"><span class="keyword">function</span> <span class="title">testForIn</span>(<span class="params"></span>) </span>&#123;</div><div class="line">          <span class="keyword">var</span> obj = &#123;</div><div class="line">              name: <span class="string">"zhangkai"</span>,</div><div class="line">              color: <span class="string">'green'</span>,</div><div class="line">              movie: <span class="string">'阿甘正传'</span>,</div><div class="line">          &#125;</div><div class="line">          <span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> obj)&#123;</div><div class="line">              <span class="built_in">console</span>.log(key + <span class="string">" : "</span> + obj[key]);</div><div class="line">          &#125;</div><div class="line">        &#125;)();</div></pre></td></tr></table></figure></p>
<p>结果:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">name : zhangkai</div><div class="line">color : green</div><div class="line">movie : 阿甘正传</div></pre></td></tr></table></figure>
<p>同样的for in 也能遍历数组:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">for (var i in array) &#123;</div><div class="line">          console.log(array[i]);</div><div class="line">      &#125;</div></pre></td></tr></table></figure></p>
<p>结果也是正常的，但是有时候，会打印出数组的函数<code>function</code>，遍历的时候不推荐使用这个。</p>
<p>当然还有while 遍历，那些就不仔细写了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天做个选择出id前缀为imgpreviwe的img标签，给它们个背景图片，直接想都没想，forEach调了半天，没调出来，才知道用错了方法。。哈哈，以前的东西忘得差不多了，重新学习一遍。。&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://blog.wuwii.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="JavaScript" scheme="http://blog.wuwii.com/tags/JavaScript/"/>
    
      <category term="jQuery" scheme="http://blog.wuwii.com/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>如何使用postman测试上传文件接口，正确提交文件数据</title>
    <link href="http://blog.wuwii.com/postman-upload.html"/>
    <id>http://blog.wuwii.com/postman-upload.html</id>
    <published>2017-10-10T13:28:03.000Z</published>
    <updated>2017-10-12T00:39:51.511Z</updated>
    
    <content type="html"><![CDATA[<p>今天使用<code>POSTMAN</code>测试文件上传，不太会用这个东东，刚开始发现这个<code>binary</code>是用来上传文件的，<br><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171010142016.png" alt="image"><br>以为用这个没错，但是使用的时候报错信息如下：</p>
<a id="more"></a>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>Apache Tomcat/7.0.37 - Error report<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css">&lt;!<span class="selector-tag">--H1</span> &#123;<span class="attribute">font-family</span>:Tahoma,Arial,sans-serif;<span class="attribute">color</span>:white;<span class="attribute">background-color</span>:<span class="number">#525D76</span>;<span class="attribute">font-size</span>:<span class="number">22px</span>;&#125; <span class="selector-tag">H2</span> &#123;<span class="attribute">font-family</span>:Tahoma,Arial,sans-serif;<span class="attribute">color</span>:white;<span class="attribute">background-color</span>:<span class="number">#525D76</span>;<span class="attribute">font-size</span>:<span class="number">16px</span>;&#125; <span class="selector-tag">H3</span> &#123;<span class="attribute">font-family</span>:Tahoma,Arial,sans-serif;<span class="attribute">color</span>:white;<span class="attribute">background-color</span>:<span class="number">#525D76</span>;<span class="attribute">font-size</span>:<span class="number">14px</span>;&#125; <span class="selector-tag">BODY</span> &#123;<span class="attribute">font-family</span>:Tahoma,Arial,sans-serif;<span class="attribute">color</span>:black;<span class="attribute">background-color</span>:white;&#125; <span class="selector-tag">B</span> &#123;<span class="attribute">font-family</span>:Tahoma,Arial,sans-serif;<span class="attribute">color</span>:white;<span class="attribute">background-color</span>:<span class="number">#525D76</span>;&#125; <span class="selector-tag">P</span> &#123;<span class="attribute">font-family</span>:Tahoma,Arial,sans-serif;<span class="attribute">background</span>:white;<span class="attribute">color</span>:black;<span class="attribute">font-size</span>:<span class="number">12px</span>;&#125;<span class="selector-tag">A</span> &#123;<span class="attribute">color </span>: black;&#125;<span class="selector-tag">A</span><span class="selector-class">.name</span> &#123;<span class="attribute">color </span>: black;&#125;<span class="selector-tag">HR</span> &#123;<span class="attribute">color </span>: <span class="number">#525D76</span>;&#125;<span class="selector-tag">--</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span> <span class="tag">&lt;/<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>HTTP Status 500 - Request processing failed; nested exception is org.springframework.web.multipart.MultipartException: The current request is not a multipart request<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;<span class="name">HR</span> <span class="attr">size</span>=<span class="string">"1"</span> <span class="attr">noshade</span>=<span class="string">"noshade"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>type<span class="tag">&lt;/<span class="name">b</span>&gt;</span> Exception report<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>message<span class="tag">&lt;/<span class="name">b</span>&gt;</span> <span class="tag">&lt;<span class="name">u</span>&gt;</span>Request processing failed; nested exception is org.springframework.web.multipart.MultipartException: The current request is not a multipart request<span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>description<span class="tag">&lt;/<span class="name">b</span>&gt;</span> <span class="tag">&lt;<span class="name">u</span>&gt;</span>The server encountered an internal error that prevented it from fulfilling this request.<span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>exception<span class="tag">&lt;/<span class="name">b</span>&gt;</span> <span class="tag">&lt;<span class="name">pre</span>&gt;</span>org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.springframework.web.multipart.MultipartException: The current request is not a multipart request</div><div class="line">	org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:981)</div><div class="line">	org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:871)</div><div class="line">	javax.servlet.http.HttpServlet.service(HttpServlet.java:647)</div><div class="line">	org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:845)</div><div class="line">	javax.servlet.http.HttpServlet.service(HttpServlet.java:728)</div><div class="line">	org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)</div><div class="line">	org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)</div><div class="line">	com.devframe.util.CorsFilter.doFilter(CorsFilter.java:23)</div><div class="line"><span class="tag">&lt;/<span class="name">pre</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>root cause<span class="tag">&lt;/<span class="name">b</span>&gt;</span> <span class="tag">&lt;<span class="name">pre</span>&gt;</span>org.springframework.web.multipart.MultipartException: The current request is not a multipart request</div><div class="line">	org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.assertIsMultipartRequest(RequestParamMethodArgumentResolver.java:216)</div><div class="line">	org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.resolveName(RequestParamMethodArgumentResolver.java:177)</div><div class="line">	org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:90)</div><div class="line">	org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:78)</div><div class="line">	org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:162)</div><div class="line">	org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:129)</div><div class="line">	org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)</div><div class="line">	org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)</div><div class="line">	org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)</div><div class="line">	org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)</div><div class="line">	org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)</div><div class="line">	org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)</div><div class="line">	org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:969)</div><div class="line">	org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:871)</div><div class="line">	javax.servlet.http.HttpServlet.service(HttpServlet.java:647)</div><div class="line">	org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:845)</div><div class="line">	javax.servlet.http.HttpServlet.service(HttpServlet.java:728)</div><div class="line">	org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)</div><div class="line">	org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)</div><div class="line">	com.devframe.util.CorsFilter.doFilter(CorsFilter.java:23)</div><div class="line"><span class="tag">&lt;/<span class="name">pre</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>note<span class="tag">&lt;/<span class="name">b</span>&gt;</span> <span class="tag">&lt;<span class="name">u</span>&gt;</span>The full stack trace of the root cause is available in the Apache Tomcat/7.0.37 logs.<span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">HR</span> <span class="attr">size</span>=<span class="string">"1"</span> <span class="attr">noshade</span>=<span class="string">"noshade"</span>&gt;</span><span class="tag">&lt;<span class="name">h3</span>&gt;</span>Apache Tomcat/7.0.37<span class="tag">&lt;/<span class="name">h3</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p>项目使用的是springMVC的 <code>MultipartFile</code> 接收的，服务端识别不出来文件。项目中使用的 js 的<code>FormDate</code>上传的，以前使用的 form 表单提交<code>enctype=&quot;multipart/form-data&quot;</code>这两种方法可以解决这个问题，但是postman中不知道怎么设置，刚好还是发现postman中又form-data这中方法提交，仔细一看原来可以选择file类型的参数，尴尬：<br><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171010142039.png" alt="image"><br>但是还是报错，仔细检查了参数，发现，postman中<code>Headers</code>设置了 <code>Content-Type</code> 使用<code>form-data</code>提交数据的时候不需要这个属性，删除。<br><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171010143123.png" alt="img"><br>做好上面的准备，上传完成。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="string">"statusCode"</span>: <span class="number">200</span>,</div><div class="line">    <span class="string">"message"</span>: <span class="string">"完成"</span>,</div><div class="line">    <span class="string">"data"</span>: [</div><div class="line">        &#123;</div><div class="line">            <span class="string">"name"</span>: <span class="string">"722f95b1-261e-4f42-b7fb-45552e01b9f2"</span>,</div><div class="line">            <span class="string">"byname"</span>: <span class="string">"v2-f26272e386f127af2e9263c83082b4a2_b.jpg"</span>,</div><div class="line">            <span class="string">"extname"</span>: <span class="string">".jpg"</span>,</div><div class="line">            <span class="string">"type"</span>: <span class="string">"图片"</span>,</div><div class="line">            <span class="string">"size"</span>: <span class="number">25</span>,</div><div class="line">            <span class="string">"path"</span>: <span class="string">"外网地址，不方便透露了"</span></div><div class="line">        &#125;</div><div class="line">    ]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>终于完成了。。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天使用&lt;code&gt;POSTMAN&lt;/code&gt;测试文件上传，不太会用这个东东，刚开始发现这个&lt;code&gt;binary&lt;/code&gt;是用来上传文件的，&lt;br&gt;&lt;img src=&quot;http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171010142016.png&quot; alt=&quot;image&quot;&gt;&lt;br&gt;以为用这个没错，但是使用的时候报错信息如下：&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://blog.wuwii.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="postman" scheme="http://blog.wuwii.com/tags/postman/"/>
    
  </entry>
  
  <entry>
    <title>一叶知秋</title>
    <link href="http://blog.wuwii.com/trend.html"/>
    <id>http://blog.wuwii.com/trend.html</id>
    <published>2017-10-08T15:08:03.000Z</published>
    <updated>2017-10-10T00:30:59.629Z</updated>
    
    <content type="html"><![CDATA[<p>今天晚上在小区里面慢跑，突然一个东西掉到我眼镜架上，塞在里面了，尬，拿下来一看，看到的是一片树叶。<br><img src="https://i.loli.net/2017/10/08/59da342e1af4a.jpg" alt="image"><br>时间过得真快，已经秋天了，今年国庆八天长假，也过完，我想，今后，再得过多少年，才有八天长假。</p>
<a id="more"></a>
<p>事情一直在发生，故事永远也写不完，我想我现在想什么，也许在眺望着什么，犹豫着什么，患得患失着什么。在每一刻，它都是好的。也许有一天，我老了，不再去疯了，就这么平静得下去。</p>
<p>我想我现在还是这么个人吧，一直以来也是，对身边的事情都是依依不舍的，但是我没有停留，紧跟着前进，真是想去浪迹天涯呀，但是那是不可能的，我有自己的牵挂与责任，我还是放不下，总有一天，我会老去，总是不想放过，但是时常会放弃自己的一些事情，为难着自己，不愿意离开。</p>
<p><img src="https://ooo.0o0.ooo/2017/10/08/59d9afb316e7f.png" alt="img"></p>
<p>也许是秋天总是会给人带来一丝惆怅的心情吧，不知不觉的，你就会触景生情，这个时候千万别拍照，别去看镜子，你会发现，不知不觉，多了一份沧桑，心里有一些焦灼，慢慢的会影响你的心绪。走的时候，又会浑然不知。</p>
<p>我想我现在还是正值好时光的年纪，即使不能清高，也要活出自我，最后像树叶一样洒脱的离开，因为，我想我正在它夏天的这个时候，还没到，还没到，还能享受最热烈的阳光。</p>
<p><img src="https://i.loli.net/2017/10/08/59da398b58f84.jpg" alt="image"></p>
<p>恍惚，秋分早已过，不用在意太多孰是孰非，早就没留退路，只能这样不顾一切，而你是否能明白了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天晚上在小区里面慢跑，突然一个东西掉到我眼镜架上，塞在里面了，尬，拿下来一看，看到的是一片树叶。&lt;br&gt;&lt;img src=&quot;https://i.loli.net/2017/10/08/59da342e1af4a.jpg&quot; alt=&quot;image&quot;&gt;&lt;br&gt;时间过得真快，已经秋天了，今年国庆八天长假，也过完，我想，今后，再得过多少年，才有八天长假。&lt;/p&gt;
    
    </summary>
    
      <category term="碎碎念" scheme="http://blog.wuwii.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="心情" scheme="http://blog.wuwii.com/tags/%E5%BF%83%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>log4j WARN No appenders could be found for logger</title>
    <link href="http://blog.wuwii.com/log-error.html"/>
    <id>http://blog.wuwii.com/log-error.html</id>
    <published>2017-10-08T14:08:03.000Z</published>
    <updated>2017-10-10T00:30:59.551Z</updated>
    
    <content type="html"><![CDATA[<p>项目的日志以前没设置好，打印出来的东西一团糟。需要把项目的Log文件改一下，改好测试了，没问题，commit，结果突然发现项目启动不了，瞬间吓坏，倒退了，哈哈，机制。报错一大堆：<a id="more"></a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div></pre></td><td class="code"><pre><div class="line">严重: The web application [/devframe-server] created a ThreadLocal with key of <span class="built_in">type</span> [org.springframework.core.NamedThreadLocal] (value [Transactional resources]) and a value of <span class="built_in">type</span> [java.util.HashMap] (value [&#123;&#123;</div><div class="line">	CreateTime:<span class="string">"2017-10-08 16:24:04"</span>,</div><div class="line">	ActiveCount:1,</div><div class="line">	PoolingCount:0,</div><div class="line">	CreateCount:100,</div><div class="line">	DestroyCount:99,</div><div class="line">	CloseCount:1,</div><div class="line">	ConnectCount:2,</div><div class="line">	Connections:[</div><div class="line">	]</div><div class="line">&#125;</div><div class="line"></div><div class="line">[</div><div class="line">]=org.springframework.jdbc.datasource.ConnectionHolder@71579f16, org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@7998ca6f=org.springframework.orm.jpa.EntityManagerHolder@1fd59301&#125;]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.</div><div class="line">十月 08, 2017 4:24:25 下午 org.apache.catalina.loader.WebappClassLoader checkThreadLocalMapForLeaks</div><div class="line">严重: The web application [/devframe-server] created a ThreadLocal with key of <span class="built_in">type</span> [org.springframework.core.NamedThreadLocal] (value [Current AOP proxy]) and a value of <span class="built_in">type</span> [com.devframe.service.impl.DeviceServiceImpl$<span class="variable">$EnhancerBySpringCGLIB</span>$<span class="variable">$905a00fd</span>] (value [com.devframe.service.impl.DeviceServiceImpl@b16530c]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.</div><div class="line">十月 08, 2017 4:24:25 下午 org.apache.catalina.loader.WebappClassLoader checkThreadLocalMapForLeaks</div><div class="line">严重: The web application [/devframe-server] created a ThreadLocal with key of <span class="built_in">type</span> [org.springframework.core.NamedThreadLocal] (value [Actual transaction active]) and a value of <span class="built_in">type</span> [java.lang.Boolean] (value [<span class="literal">true</span>]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.</div><div class="line">十月 08, 2017 4:24:25 下午 org.apache.catalina.loader.WebappClassLoader checkThreadLocalMapForLeaks</div><div class="line">严重: The web application [/devframe-server] created a ThreadLocal with key of <span class="built_in">type</span> [org.springframework.core.NamedThreadLocal] (value [Transaction synchronizations]) and a value of <span class="built_in">type</span> [java.util.LinkedHashSet] (value [[]]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.</div><div class="line">十月 08, 2017 4:24:25 下午 org.apache.catalina.loader.WebappClassLoader checkThreadLocalMapForLeaks</div><div class="line">严重: The web application [/devframe-server] created a ThreadLocal with key of <span class="built_in">type</span> [org.springframework.core.NamedThreadLocal] (value [Current AOP method invocation]) and a value of <span class="built_in">type</span> [org.springframework.aop.framework.ReflectiveMethodInvocation] (value [ReflectiveMethodInvocation: public abstract java.util.List com.devframe.dao.DeviceDao.findBySerialnumber(java.lang.String); target is of class [org.springframework.data.jpa.repository.support.SimpleJpaRepository]]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.</div><div class="line">十月 08, 2017 4:24:25 下午 org.apache.catalina.loader.WebappClassLoader checkThreadLocalMapForLeaks</div><div class="line">严重: The web application [/devframe-server] created a ThreadLocal with key of <span class="built_in">type</span> [org.springframework.core.NamedThreadLocal] (value [Current transaction name]) and a value of <span class="built_in">type</span> [java.lang.String] (value [com.devframe.service.impl.DeviceServiceImpl.findBySerialnumber]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.</div><div class="line">十月 08, 2017 4:24:25 下午 org.apache.catalina.loader.WebappClassLoader checkThreadLocalMapForLeaks</div><div class="line">严重: Unable to determine string representation of value of <span class="built_in">type</span> [org.springframework.transaction.interceptor.TransactionAspectSupport.TransactionInfo]</div><div class="line">java.lang.NullPointerException</div><div class="line">	at org.springframework.transaction.interceptor.TransactionAspectSupport<span class="variable">$TransactionInfo</span>.toString(TransactionAspectSupport.java:624)</div><div class="line">	at org.apache.catalina.loader.WebappClassLoader.checkThreadLocalMapForLeaks(WebappClassLoader.java:2520)</div><div class="line">	at org.apache.catalina.loader.WebappClassLoader.checkThreadLocalsForLeaks(WebappClassLoader.java:2454)</div><div class="line">	at org.apache.catalina.loader.WebappClassLoader.clearReferences(WebappClassLoader.java:1995)</div><div class="line">	at org.apache.catalina.loader.WebappClassLoader.stop(WebappClassLoader.java:1901)</div><div class="line">	at org.apache.catalina.loader.WebappLoader.stopInternal(WebappLoader.java:662)</div><div class="line">	at org.apache.catalina.util.LifecycleBase.stop(LifecycleBase.java:232)</div><div class="line">	at org.apache.catalina.core.StandardContext.stopInternal(StandardContext.java:5526)</div><div class="line">	at org.apache.catalina.util.LifecycleBase.stop(LifecycleBase.java:232)</div><div class="line">	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:160)</div><div class="line">	at org.apache.catalina.core.ContainerBase<span class="variable">$StartChild</span>.call(ContainerBase.java:1559)</div><div class="line">	at org.apache.catalina.core.ContainerBase<span class="variable">$StartChild</span>.call(ContainerBase.java:1549)</div><div class="line">	at java.util.concurrent.FutureTask.run(FutureTask.java:266)</div><div class="line">	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)</div><div class="line">	at java.util.concurrent.ThreadPoolExecutor<span class="variable">$Worker</span>.run(ThreadPoolExecutor.java:624)</div><div class="line">	at java.lang.Thread.run(Thread.java:748)</div><div class="line"></div><div class="line">十月 08, 2017 4:24:25 下午 org.apache.catalina.loader.WebappClassLoader checkThreadLocalMapForLeaks</div><div class="line">严重: The web application [/devframe-server] created a ThreadLocal with key of <span class="built_in">type</span> [org.springframework.core.NamedThreadLocal] (value [Current aspect-driven transaction]) and a value of <span class="built_in">type</span> [org.springframework.transaction.interceptor.TransactionAspectSupport.TransactionInfo] (value [Unknown]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.</div><div class="line">十月 08, 2017 4:24:25 下午 org.apache.coyote.AbstractProtocol start</div><div class="line">信息: Starting ProtocolHandler [<span class="string">"http-bio-8081"</span>]</div><div class="line">十月 08, 2017 4:24:25 下午 org.apache.catalina.loader.WebappClassLoader loadClass</div><div class="line">信息: Illegal access: this web application instance has been stopped already.  Could not load org.hibernate.engine.transaction.internal.jta.JtaStatusHelper.  The eventual following stack trace is caused by an error thrown <span class="keyword">for</span> debugging purposes as well as to attempt to terminate the thread <span class="built_in">which</span> caused the illegal access, and has no functional impact.</div><div class="line">java.lang.IllegalStateException</div><div class="line">	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1599)</div><div class="line">	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1558)</div><div class="line">	at org.hibernate.engine.transaction.internal.TransactionCoordinatorImpl.afterTransaction(TransactionCoordinatorImpl.java:142)</div><div class="line">	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.afterTransactionCompletion(JdbcTransaction.java:138)</div><div class="line">	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.rollback(AbstractTransactionImpl.java:213)</div><div class="line">	at org.hibernate.jpa.internal.TransactionImpl.rollback(TransactionImpl.java:108)</div><div class="line">	at org.springframework.orm.jpa.JpaTransactionManager.doRollback(JpaTransactionManager.java:544)</div><div class="line">	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:853)</div><div class="line">	at org.springframework.transaction.support.AbstractPlatformTransactionManager.rollback(AbstractPlatformTransactionManager.java:830)</div><div class="line">	at org.springframework.transaction.interceptor.TransactionAspectSupport.completeTransactionAfterThrowing(TransactionAspectSupport.java:503)</div><div class="line">	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:285)</div><div class="line">	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)</div><div class="line">	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)</div><div class="line">	at org.springframework.aop.framework.CglibAopProxy<span class="variable">$DynamicAdvisedInterceptor</span>.intercept(CglibAopProxy.java:655)</div><div class="line">	at com.devframe.service.impl.DeviceServiceImpl$<span class="variable">$EnhancerBySpringCGLIB</span>$<span class="variable">$905a00fd</span>.findBySerialnumber(&lt;generated&gt;)</div><div class="line">	at com.devframe.util.mqtt.TimingPublish.run(TimingPublish.java:241)</div><div class="line">	at com.devframe.service.impl.MqttServerImpl.callBackChoose(MqttServerImpl.java:108)</div><div class="line">	at com.devframe.util.mqtt.ServerMQTT.messageArrived(ServerMQTT.java:161)</div><div class="line">	at org.eclipse.paho.client.mqttv3.internal.CommsCallback.deliverMessage(CommsCallback.java:499)</div><div class="line">	at org.eclipse.paho.client.mqttv3.internal.CommsCallback.handleMessage(CommsCallback.java:402)</div><div class="line">	at org.eclipse.paho.client.mqttv3.internal.CommsCallback.run(CommsCallback.java:206)</div><div class="line">	at java.util.concurrent.Executors<span class="variable">$RunnableAdapter</span>.call(Executors.java:511)</div><div class="line">	at java.util.concurrent.FutureTask.run(FutureTask.java:266)</div><div class="line">	at java.util.concurrent.ScheduledThreadPoolExecutor<span class="variable">$ScheduledFutureTask</span>.access<span class="variable">$201</span>(ScheduledThreadPoolExecutor.java:180)</div><div class="line">	at java.util.concurrent.ScheduledThreadPoolExecutor<span class="variable">$ScheduledFutureTask</span>.run(ScheduledThreadPoolExecutor.java:293)</div><div class="line">	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)</div><div class="line">	at java.util.concurrent.ThreadPoolExecutor<span class="variable">$Worker</span>.run(ThreadPoolExecutor.java:624)</div><div class="line">	at java.lang.Thread.run(Thread.java:748)</div><div class="line"></div><div class="line">十月 08, 2017 4:24:25 下午 org.apache.catalina.loader.WebappClassLoader loadClass</div><div class="line">信息: Illegal access: this web application instance has been stopped already.  Could not load org.eclipse.paho.client.mqttv3.internal.MessageCatalog.  The eventual following stack trace is caused by an error thrown <span class="keyword">for</span> debugging purposes as well as to attempt to terminate the thread <span class="built_in">which</span> caused the illegal access, and has no functional impact.</div><div class="line">java.lang.IllegalStateException</div><div class="line">	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1599)</div><div class="line">	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1558)</div><div class="line">	at org.eclipse.paho.client.mqttv3.MqttException.getMessage(MqttException.java:225)</div><div class="line">	at org.eclipse.paho.client.mqttv3.MqttException.toString(MqttException.java:233)</div><div class="line">	at java.lang.String.valueOf(String.java:2994)</div><div class="line">	at java.io.PrintStream.println(PrintStream.java:821)</div><div class="line">	at java.lang.Throwable<span class="variable">$WrappedPrintStream</span>.println(Throwable.java:748)</div><div class="line">	at java.lang.Throwable.printStackTrace(Throwable.java:655)</div><div class="line">	at java.lang.Throwable.printStackTrace(Throwable.java:643)</div><div class="line">	at java.lang.Throwable.printStackTrace(Throwable.java:634)</div><div class="line">	at com.devframe.util.mqtt.ServerMQTT.connectionLost(ServerMQTT.java:144)</div><div class="line">	at org.eclipse.paho.client.mqttv3.internal.CommsCallback.connectionLost(CommsCallback.java:292)</div><div class="line">	at org.eclipse.paho.client.mqttv3.internal.ClientComms.shutdownConnection(ClientComms.java:423)</div><div class="line">	at org.eclipse.paho.client.mqttv3.internal.CommsCallback.run(CommsCallback.java:220)</div><div class="line">	at java.util.concurrent.Executors<span class="variable">$RunnableAdapter</span>.call(Executors.java:511)</div><div class="line">	at java.util.concurrent.FutureTask.run(FutureTask.java:266)</div><div class="line">	at java.util.concurrent.ScheduledThreadPoolExecutor<span class="variable">$ScheduledFutureTask</span>.access<span class="variable">$201</span>(ScheduledThreadPoolExecutor.java:180)</div><div class="line">	at java.util.concurrent.ScheduledThreadPoolExecutor<span class="variable">$ScheduledFutureTask</span>.run(ScheduledThreadPoolExecutor.java:293)</div><div class="line">	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)</div><div class="line">	at java.util.concurrent.ThreadPoolExecutor<span class="variable">$Worker</span>.run(ThreadPoolExecutor.java:624)</div><div class="line">	at java.lang.Thread.run(Thread.java:748)</div><div class="line"></div><div class="line">十月 08, 2017 4:24:38 下午 org.apache.catalina.loader.WebappClassLoader loadClass</div><div class="line">信息: Illegal access: this web application instance has been stopped already.  Could not load org.apache.commons.pool2.impl.EvictionConfig.  The eventual following stack trace is caused by an error thrown <span class="keyword">for</span> debugging purposes as well as to attempt to terminate the thread <span class="built_in">which</span> caused the illegal access, and has no functional impact.</div><div class="line">java.lang.IllegalStateException</div><div class="line">	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1599)</div><div class="line">	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1558)</div><div class="line">	at org.apache.commons.pool2.impl.GenericObjectPool.evict(GenericObjectPool.java:743)</div><div class="line">	at org.apache.commons.pool2.impl.BaseGenericObjectPool<span class="variable">$Evictor</span>.run(BaseGenericObjectPool.java:1036)</div><div class="line">	at java.util.TimerThread.mainLoop(Timer.java:555)</div><div class="line">	at java.util.TimerThread.run(Timer.java:505)</div></pre></td></tr></table></figure>
<p>根据上面查找问题，刚开始一直以为是 mqtt 出现错误了，检查完全没问题，而且最近只是修改了其他的内容，一想到我刚刚改了log4j，估计是它除了错误，但是上面的错误信息完全没给我有用的提示信息，只能知道<code>web root</code> 都没能启动，就去各个spring配置文件看，但是没发现有配置log4j的位置，最后功夫不负有心人终于在<code>web.xml</code>看到了一段话</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 启动Log4j --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">context-param</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">param-name</span>&gt;</span>log4jConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:log4j.properties<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">listener</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.util.Log4jConfigListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">listener</span>&gt;</span></div></pre></td></tr></table></figure>
<p>跟我目前路径不一致，改好后，成功启动。。。莫名其妙了。</p>
<p>网上查了下，日志出现错误，找不到<code>log4j.properties</code>报错是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">log4j:WARN No appenders could be found for logger (org.apache.ibatis.logging.LogFactory).   </div><div class="line">log4j:WARN Please initialize the log4j system properly.</div></pre></td></tr></table></figure></p>
<p>那就不得而知了。</p>
<p>总算解决了。。</p>
<p>总结：</p>
<ol>
<li>部署的项目在<code>WEB-INF/classes/</code>路径下加上文件 <code>log4j.properties</code> ,开发中，我使用的是maven构建项目的，所以，在<code>resources</code> 文件下加入 <code>log4j.properties</code> 就可以了。</li>
<li>这样下去启动下去仍然会报错，Web开发的时候，spring容器启动去读取这个log4j的配置文件的时候，找不到它，所以要在 <code>web.xml</code> 中重新配置文件位置：<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 启动Log4j --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">context-param</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">param-name</span>&gt;</span>log4jConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:log4j.properties<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">listener</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.util.Log4jConfigListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">listener</span>&gt;</span></div></pre></td></tr></table></figure></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;项目的日志以前没设置好，打印出来的东西一团糟。需要把项目的Log文件改一下，改好测试了，没问题，commit，结果突然发现项目启动不了，瞬间吓坏，倒退了，哈哈，机制。报错一大堆：
    
    </summary>
    
      <category term="学习笔记" scheme="http://blog.wuwii.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="java" scheme="http://blog.wuwii.com/tags/java/"/>
    
      <category term="log4j" scheme="http://blog.wuwii.com/tags/log4j/"/>
    
  </entry>
  
  <entry>
    <title>我想分享你的悲伤</title>
    <link href="http://blog.wuwii.com/share-sadness.html"/>
    <id>http://blog.wuwii.com/share-sadness.html</id>
    <published>2017-10-07T14:08:03.000Z</published>
    <updated>2017-10-08T00:52:06.288Z</updated>
    
    <content type="html"><![CDATA[<h3 id="我想分享你的悲伤"><a href="#我想分享你的悲伤" class="headerlink" title="我想分享你的悲伤"></a>我想分享你的悲伤</h3><p>我想分享你的悲伤，</p>
<p>我要成为故事中的小丑，</p>
<p>将悲伤写进喜剧中。</p>
<p>我想分享你的悲伤，</p>
<p>我会强颜为笑，</p>
<p>带上面具，</p>
<p>安慰你。</p>
<p>我想分享你的悲伤</p>
<p>但我不能将悲伤带给你，</p>
<p>因为哄你开心，</p>
<p>才是我的责任，</p>
<p>即便是伤痕累累，</p>
<p>你一笑，</p>
<p>我便好。</p>
<p>我想分享你的悲伤，</p>
<p>永远微笑，</p>
<p>不贪婪。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;我想分享你的悲伤&quot;&gt;&lt;a href=&quot;#我想分享你的悲伤&quot; class=&quot;headerlink&quot; title=&quot;我想分享你的悲伤&quot;&gt;&lt;/a&gt;我想分享你的悲伤&lt;/h3&gt;&lt;p&gt;我想分享你的悲伤，&lt;/p&gt;
&lt;p&gt;我要成为故事中的小丑，&lt;/p&gt;
&lt;p&gt;将悲伤写进喜剧中。&lt;
    
    </summary>
    
      <category term="碎碎念" scheme="http://blog.wuwii.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="心情" scheme="http://blog.wuwii.com/tags/%E5%BF%83%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>jQuery实现多文件上传并预览</title>
    <link href="http://blog.wuwii.com/multiple-file-upload.html"/>
    <id>http://blog.wuwii.com/multiple-file-upload.html</id>
    <published>2017-10-07T02:08:03.000Z</published>
    <updated>2017-10-10T00:30:59.582Z</updated>
    
    <content type="html"><![CDATA[<p>自己做了个文件上传，样式有些简陋，功能还需以后完善。中间遇到了一些问题，在这里记录下。<a id="more"></a></p>
<h3 id="样式"><a href="#样式" class="headerlink" title="样式"></a>样式</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"height: 82px; width: 100%; border-bottom: 1px solid #ddd;padding-top: 5px"</span>&gt;</span></div><div class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width: 80px; height: 82px;float: left;text-align: right; line-height: 72px;"</span>&gt;</span>反馈图片<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">           <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">class</span>=<span class="string">"file"</span>&gt;</span>选择文件</div><div class="line">               <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">accept</span>=<span class="string">"image/png,image/gif,image/jpg,image/jpeg"</span> <span class="attr">id</span>=<span class="string">"files"</span> <span class="attr">name</span>=<span class="string">"files"</span> <span class="attr">multiple</span> /&gt;</span></div><div class="line">           <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"preview"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.file</span> &#123;</div><div class="line">    <span class="attribute">float</span>: left;</div><div class="line">    <span class="attribute">position</span>: relative;</div><div class="line">    <span class="attribute">display</span>: block;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#03afD9</span>;</div><div class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#99D3F5</span>;</div><div class="line">    <span class="attribute">border-radius</span>: <span class="number">4px</span>;</div><div class="line">    <span class="attribute">margin-left</span>: <span class="number">5px</span>;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">4px</span> <span class="number">12px</span>;</div><div class="line">    <span class="attribute">overflow</span>: hidden;</div><div class="line">    <span class="attribute">color</span>: white;</div><div class="line">    <span class="attribute">text-decoration</span>: none;</div><div class="line">    <span class="attribute">text-indent</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">line-height</span>: <span class="number">20px</span>;</div><div class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.file</span> <span class="selector-tag">input</span> &#123;</div><div class="line">    <span class="attribute">position</span>: absolute;</div><div class="line">    <span class="attribute">font-size</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.file</span><span class="selector-pseudo">:hover</span> &#123;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#95B8E7</span>;</div><div class="line">    <span class="attribute">border-color</span>: <span class="number">#78C3F3</span>;</div><div class="line">    <span class="attribute">color</span>: white;</div><div class="line">    <span class="attribute">text-decoration</span>: none;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//下面用于多图片上传预览功能</span></div><div class="line">        <span class="function"><span class="keyword">function</span> <span class="title">setImagePreviews</span>(<span class="params">docObj</span>) </span>&#123;</div><div class="line">            <span class="keyword">var</span> preview = $(<span class="string">"#preview"</span>, $(<span class="string">".MachineEdit"</span>, Dev.App.FillPanel.Target));</div><div class="line">            preview.html(<span class="string">""</span>);</div><div class="line">            fileList = docObj.files;</div><div class="line">            <span class="keyword">if</span> (fileList.length &gt; <span class="number">3</span>)&#123;</div><div class="line">                <span class="keyword">return</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; fileList.length; i++) &#123;</div><div class="line">                <span class="keyword">if</span> (!checkType(fileList[i].name))&#123;</div><div class="line">                    preview.html(<span class="string">""</span>);</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">                preview.append(<span class="string">"&lt;div style='float:left;cursor:pointer;margin-left: 3px;' &gt;&lt;img id='img"</span> + i + <span class="string">"' /&gt; &lt;/div&gt;"</span>);</div><div class="line">                <span class="keyword">var</span> imgObjPreview = $(<span class="string">"#img"</span>+i, $(<span class="string">".MachineEdit"</span>, Dev.App.FillPanel.Target));</div><div class="line">                <span class="keyword">if</span> (fileList &amp;&amp; fileList[i]) &#123;</div><div class="line">                    <span class="comment">//火狐下，直接设img属性</span></div><div class="line">                    imgObjPreview.css(<span class="string">"display"</span>,<span class="string">"block"</span>);</div><div class="line">                    <span class="comment">//控制缩略图大小</span></div><div class="line">                    imgObjPreview.width(<span class="number">70</span>);</div><div class="line">                    imgObjPreview.height(<span class="number">70</span>);</div><div class="line">                    <span class="comment">//imgObjPreview.src = docObj.files[0].getAsDataURL();</span></div><div class="line">                    <span class="comment">//火狐7以上版本不能用上面的getAsDataURL()方式获取，需要一下方式</span></div><div class="line">                    imgObjPreview.attr(<span class="string">"src"</span>, <span class="built_in">window</span>.URL.createObjectURL(fileList[i]));</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">else</span> &#123;</div><div class="line">                    <span class="comment">//IE下，使用滤镜</span></div><div class="line">                    docObj.select();</div><div class="line">                    <span class="keyword">var</span> imgSrc = <span class="built_in">document</span>.selection.createRange().text;</div><div class="line">                    <span class="keyword">var</span> localImagId = $(<span class="string">"#img"</span>+i, $(<span class="string">".MachineEdit"</span>, Dev.App.FillPanel.Target));</div><div class="line">                    <span class="comment">//必须设置初始大小</span></div><div class="line">                    localImagId.width(<span class="number">70</span>);</div><div class="line">                    localImagId.height(<span class="number">70</span>);</div><div class="line">                    <span class="comment">//图片异常的捕捉，防止用户修改后缀来伪造图片</span></div><div class="line">                    imgObjPreview.css(<span class="string">"display"</span>, <span class="string">"none"</span>);</div><div class="line">                    <span class="built_in">document</span>.selection.empty();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">/*检测照片格式*/</span></div><div class="line">        <span class="function"><span class="keyword">function</span> <span class="title">checkType</span>(<span class="params">image</span>)</span>&#123;</div><div class="line">            <span class="keyword">var</span> extStart = image.lastIndexOf(<span class="string">"."</span>);</div><div class="line">            <span class="keyword">var</span> ext = image.substring(extStart, image.length).toUpperCase();</div><div class="line">            <span class="keyword">if</span> ( ext != <span class="string">".PNG"</span> &amp;&amp; ext != <span class="string">".GIF"</span> &amp;&amp; ext != <span class="string">".JPG"</span> &amp;&amp; ext != <span class="string">".JPEG"</span>) &#123;</div><div class="line">                dialog.Alert(<span class="string">"图片限于png，gif，jpeg，jpg格式！"</span>, <span class="string">"error"</span>);</div><div class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">        &#125;</div></pre></td></tr></table></figure>
<p>调用方式<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"#files"</span>, $(<span class="string">".MachineEdit"</span>, Dev.App.FillPanel.Target)).bind(<span class="string">"change"</span>,<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    setImagePreviews(<span class="keyword">this</span>);</div><div class="line"> &#125;);</div></pre></td></tr></table></figure></p>
<p>效果展示：<br><img src="https://i.loli.net/2017/10/07/59d8a623e0921.png" alt="img"></p>
<p>上传的时候使用的是<code>FormData</code></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//以上省略</span></div><div class="line">            <span class="keyword">var</span> form = <span class="keyword">new</span> FormData();</div><div class="line">           <span class="comment">//注意参数数组的时候使用多次append就行了</span></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, len = fileList.length; i &lt; len; i++) &#123;</div><div class="line">                form.append(<span class="string">"files"</span>, fileList[i]);</div><div class="line">            &#125;</div><div class="line">           </div><div class="line">            form.append(<span class="string">"orgid"</span>, selectorgid);</div><div class="line">            form.append(<span class="string">"cautionid"</span>, selectAl);</div><div class="line">            form.append(<span class="string">"fkder"</span>,Dev.cookie.user.truename);</div><div class="line"></div><div class="line">            $.ajax(&#123;</div><div class="line">                type: <span class="string">"POST"</span>,</div><div class="line">                url: <span class="string">'~~省略~~'</span>,</div><div class="line">                data: form,</div><div class="line">                contentType: <span class="literal">false</span>,</div><div class="line">                processData: <span class="literal">false</span>, <span class="comment">//注意一定要设置为false</span></div><div class="line">                success: <span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</div><div class="line">                    <span class="keyword">if</span> (!Dev.IsNull(response) &amp;&amp; response.statusCode == <span class="number">200</span>) &#123;</div><div class="line">                        dialog.Alert(msg.addSuccess, <span class="string">"success"</span>);</div><div class="line">                    &#125; <span class="keyword">else</span> &#123;</div><div class="line">                        dialog.Alert(msg.addFailed, <span class="string">"error"</span>);</div><div class="line">                    &#125;</div><div class="line">                &#125;,</div><div class="line">                error: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</div><div class="line">                    dialog.Alert(msg.netout, <span class="string">"error"</span>);</div><div class="line">                &#125;</div><div class="line">            &#125;)</div></pre></td></tr></table></figure>
<p><code>processData</code>的默认值是<code>true</code>。用于对<code>data</code>参数进行序列化处理。</p>
<h3 id="后台"><a href="#后台" class="headerlink" title="后台"></a>后台</h3><p>java后台使用的是springMVC，相同的可以参考。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/***"</span>, method = RequestMethod.POST)</div><div class="line">	<span class="function"><span class="keyword">public</span> HttpResponse&lt;CautionFeedBackEntity&gt; <span class="title">addFile</span><span class="params">(@RequestParam(value=<span class="string">"files"</span>,required=<span class="keyword">false</span>)</span>MultipartFile[] files, CautionFeedBackEntity entity) </span>&#123;</div><div class="line">		<span class="keyword">try</span> &#123;</div><div class="line">			~~~处理~~~</div><div class="line">			<span class="keyword">return</span> <span class="keyword">new</span> HttpResponse&lt;CautionFeedBackEntity&gt;(ResponseStatusCode.C200);</div><div class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">			Log.error(<span class="string">"错误飘过~~~~"</span>);</div><div class="line">			<span class="keyword">return</span> <span class="keyword">new</span> HttpResponse&lt;CautionFeedBackEntity&gt;(ResponseStatusCode.C400);</div><div class="line">		&#125;</div><div class="line">	&#125;</div></pre></td></tr></table></figure></p>
<p>需要注意的是 <code>MultipartFile[]</code> 需要设置 <code>@RequestParam</code> 参数。</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ol>
<li>html优化。</li>
<li>脚本后期还需添加点击删除功能，并且还要更新input-file里的内容。</li>
<li>js中处理图片的过程，还需做更多的控制（文件大小，伪文件）。</li>
<li>使用fastDFS存储。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自己做了个文件上传，样式有些简陋，功能还需以后完善。中间遇到了一些问题，在这里记录下。
    
    </summary>
    
      <category term="学习笔记" scheme="http://blog.wuwii.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="JavaScript" scheme="http://blog.wuwii.com/tags/JavaScript/"/>
    
      <category term="jQuery" scheme="http://blog.wuwii.com/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>这些只属于武汉的浪漫，看完幸福感爆棚</title>
    <link href="http://blog.wuwii.com/wh-romance.html"/>
    <id>http://blog.wuwii.com/wh-romance.html</id>
    <published>2017-10-05T10:08:03.000Z</published>
    <updated>2017-10-07T10:06:36.143Z</updated>
    
    <content type="html"><![CDATA[<p>无意中看到个长图，感觉到身边的城市这边美，平时没什么时间去发现，倒是有点小小的遗憾吧，记下，有机会一定要转转/ y。<a id="more"></a></p>
<p><img src="https://i.loli.net/2017/10/05/59d6030110f9e.jpg" alt="img"></p>
<p>就是希望以后有个人能一起去我们想去的地方。。。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;无意中看到个长图，感觉到身边的城市这边美，平时没什么时间去发现，倒是有点小小的遗憾吧，记下，有机会一定要转转/ y。
    
    </summary>
    
      <category term="分享" scheme="http://blog.wuwii.com/categories/%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="生活" scheme="http://blog.wuwii.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="武汉" scheme="http://blog.wuwii.com/tags/%E6%AD%A6%E6%B1%89/"/>
    
  </entry>
  
  <entry>
    <title>我想她，是那么的美好吧</title>
    <link href="http://blog.wuwii.com/miss-you.html"/>
    <id>http://blog.wuwii.com/miss-you.html</id>
    <published>2017-10-04T04:15:03.000Z</published>
    <updated>2017-10-10T00:31:22.302Z</updated>
    
    <content type="html"><![CDATA[<p>我想她，是那么的美好吧。<a id="more"></a></p>
<p>这么多年还记得她，不是因为长相，她长相清秀，但是没那么出众，可能因为她别样清脆的声音，但我也不是声控，可能是因为别的，总之，还在意她。</p>
<p>人就是这么奇怪，有时候遇到什么东西就容易出身，青春期的男生可能总是浮想翩翩，就是经常失神吧，我现在大概还是这个样子了，愣。</p>
<p>跟她说过的话不多吧，见面了的时候我也不敢跟她打招呼，因为我很内向，而且还是个很慢热的人，平时话也非常少，我了解的人也不多，实在是一个再也普通不过的人了。</p>
<p>但是在我眼中的她干净，就像不沾人间烟土的仙子。人很聪明，没什么心机，可以跟其他人玩的很合得来。</p>
<p>我觉得她最大的特点就是明媚了，为什么会用这个词了，应该来源于她当时的网名。人烦恼的时候总是会仰望天空，但是天空中也有阴云。看到她的眼睛，感觉就是一直散发着光，是真的明媚，而且带着淡淡的忧伤。</p>
<p>就这样，抓走了我的心。后来做了傻事，表白了她，想当初太年轻了，她很懂事，果断拒绝了我。我当时很颓废，回想当初不应该那样的，后来高考完后，她又加了我，不知道当时是什么自尊心在作祟，居然没想到去追回她，什么高考失利都是借口，自己大概当时有些失望，是想放弃的吧。</p>
<p>后来上了大学应该简单联系了几句，但是没多说，我也忘了，曾经一度真的以为我忘了，但是qq还是一直存在我这里，特别关注，平时闲着没事就喜欢翻翻她的空间，但是也不想留下痕迹，简单看下她再干什么，她还是以前那个样子，每次看到，心中会有暖意吧。直到毕业工作来到了武汉这个城市，不尽然的又想去找她，但是她的心已经对你上了一把锁了，你该用什么去打开它了，没感情经历的我该拿什么去追回她了。</p>
<p>回想当初，自己这个人真的是有点烂了，什么也没付出就像拿到什么，后来别人主动了，自己却放弃了，如果当初没能戳穿那段感情就好了，即使能远远的看着她，也是一件多么美好的事情啊。我想现在懂了，可能已经太晚了，自己已经不可能撩动她的心了，已经过了那个年纪了，这么长时间，早已经物是人非了，有可能，我这一辈子再也不能见到她了吧，但是只要还能想起她，看到她的消息，心中还是泛起了涟漪。反正现在人都这么烂了，只能用真心去等候吧。</p>
<p>在最好的年纪遇到这么个人真的很美好！虽然没经历过什么刻骨铭心的事情，但我不会忘记的，谢谢她，让我想变成更好的人。</p>
<p>愿她以后一直明媚，不再忧伤吧。</p>
<p>真的很美好！都要加油了。</p>
<p>没想到就写了这么点，也许真的还不够吧，这个博客暂时也没公开，就算是给自己的青春留点东西吧。</p>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我想她，是那么的美好吧。
    
    </summary>
    
      <category term="碎碎念" scheme="http://blog.wuwii.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="心情" scheme="http://blog.wuwii.com/tags/%E5%BF%83%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>使用java将gps时转换为utc时间方法</title>
    <link href="http://blog.wuwii.com/gps2utc.html"/>
    <id>http://blog.wuwii.com/gps2utc.html</id>
    <published>2017-10-03T14:28:03.000Z</published>
    <updated>2017-10-07T10:06:35.817Z</updated>
    
    <content type="html"><![CDATA[<h3 id="gps时间系统"><a href="#gps时间系统" class="headerlink" title="gps时间系统"></a>gps时间系统</h3><blockquote>
<p><code>GPS时间系统</code>采用原子时AT1秒长作时间基准，秒长定义为铯原子CS133基态的两个超精细能级间跃迁辐射振荡9192631170周所持续的时间，时间起算的原点定义在1980年1月6日世界协调时UTC0时，启动后不跳秒，保证时间的连续。以后随着时间积累，GPS时与UTC时的整秒差以及秒以下的差异通过时间服务部门定期公布。<br>精密导航和测量的需要，GPS建立了专用的时间系统。该系统可简写为GPS由GPS主控站的原于钟控制，规定GPS与协调时的时刻于t980年1月6日o时相一致。其后随着时间的积累两者之间的差别将表现为秒的整倍数。</p>
</blockquote>
<a id="more"></a>
<h4 id="gps周"><a href="#gps周" class="headerlink" title="gps周"></a>gps周</h4><blockquote>
<p><code>GPS周</code>（GPS Week）是GPS系统内部所采用的时间系统。<br>时间零点定义的为：1980年1月5日夜晚与1980年1月6日凌晨之间0点。最大时间单位是周（一周：604800秒）。每1024周（即7168天）为一循环周期。第一个GPS周循环点为1999年8月22日0时0分0秒。即从这一刻起，周数重新从0开始算起。星期记数规则是：Sunday为0，Monday为1，以此类推，依次记作0~6，GPS周记数（GPS Week Number）为“GPS周 星期记数”。</p>
</blockquote>
<h3 id="使用java将gps时转换为utc时间方法"><a href="#使用java将gps时转换为utc时间方法" class="headerlink" title="使用java将gps时转换为utc时间方法"></a>使用java将gps时转换为utc时间方法</h3><p>看到了gps时间系统大概明白了 gps时由整周（7天）计数，与周内秒计数两部分组成。转换为utc时间可以从1980年1月6日0时,基本思路计算出总共的秒数，然后通过计算总秒数包含了多少整年，整年减掉后取余，计算年内多少整月，依次类推就可以计算出最后utc时刻的年月日时分秒.毫秒值了。</p>
<p>转换过程中需要主要的年中的闰年处理，还有GPS时与utc时的闰秒问题，如果是转换为北京时间要求时区的问题需要考虑。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.devframe.util.mqtt;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.Date;</div><div class="line"></div><div class="line"><span class="comment">/** </span></div><div class="line"><span class="comment">* <span class="doctag">@ClassName</span>: GPS2UTC </span></div><div class="line"><span class="comment">* <span class="doctag">@Description</span>: gps时间转成utc+8:00 北京时间</span></div><div class="line"><span class="comment">* <span class="doctag">@author</span> zhangkai </span></div><div class="line"><span class="comment">* <span class="doctag">@date</span> 2017年9月25日 下午3:08:07 </span></div><div class="line"><span class="comment">*  </span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GPS2UTC</span> </span>&#123;</div><div class="line"></div><div class="line">	 <span class="keyword">private</span> java.util.Date date;  </div><div class="line">	 <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>[] monthday = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">0</span>, <span class="number">31</span>, <span class="number">28</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>&#125;;</div><div class="line">	 <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> TIME_DAY_MS = <span class="number">3600</span>*<span class="number">24</span>*<span class="number">1000</span>;</div><div class="line">	 </div><div class="line">	 </div><div class="line">	 <span class="comment">/*</span></div><div class="line"><span class="comment">	  * @week gps周</span></div><div class="line"><span class="comment">	  * @tow  gps周内秒（单位毫秒）</span></div><div class="line"><span class="comment">	  * @leaps 闰秒数</span></div><div class="line"><span class="comment">	  */</span></div><div class="line">	<span class="meta">@SuppressWarnings</span>(<span class="string">"deprecation"</span>)</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">GPS2UTC</span><span class="params">(<span class="keyword">int</span> week, <span class="keyword">int</span> tow, <span class="keyword">int</span> leaps)</span> </span>&#123;</div><div class="line">		<span class="keyword">int</span> totalday;</div><div class="line">		<span class="keyword">int</span> year = <span class="number">1980</span>;</div><div class="line">		<span class="keyword">int</span> month;</div><div class="line">		<span class="keyword">int</span> day;</div><div class="line"></div><div class="line">		totalday = week * <span class="number">7</span>;</div><div class="line">		totalday += <span class="number">5</span>;</div><div class="line"></div><div class="line">		<span class="comment">// 如果需要减去闰秒</span></div><div class="line">		<span class="keyword">if</span> (leaps != <span class="number">0</span> &amp;&amp; week &gt; <span class="number">0</span>) &#123;</div><div class="line">			<span class="keyword">if</span> (tow &lt; leaps * <span class="number">1000</span>) &#123;</div><div class="line">				totalday--;</div><div class="line">				tow = TIME_DAY_MS - leaps * <span class="number">1000</span> + tow;</div><div class="line">			&#125; <span class="keyword">else</span> &#123;</div><div class="line">				tow = tow - leaps * <span class="number">1000</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="keyword">while</span> (totalday &gt;= <span class="number">366</span>) &#123;</div><div class="line">			totalday -= <span class="number">365</span>;</div><div class="line">			<span class="keyword">if</span> (isLeapYear(year)) &#123;</div><div class="line">				totalday -= <span class="number">1</span>;</div><div class="line">			&#125;</div><div class="line">			year++;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(isLeapYear(year)) &#123;</div><div class="line">			monthday[<span class="number">2</span>] = <span class="number">29</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> &#123;</div><div class="line">			monthday[<span class="number">2</span>] = <span class="number">28</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span> (month = <span class="number">1</span>; month &lt;= <span class="number">12</span>; month++) &#123;</div><div class="line">			<span class="keyword">if</span> (totalday &lt; monthday[month]) &#123;</div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			&#125;</div><div class="line">			totalday -= monthday[month];</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		day = totalday;</div><div class="line">		day++;</div><div class="line"></div><div class="line">		<span class="keyword">while</span> (tow &gt; TIME_DAY_MS) &#123;</div><div class="line">			tow -= TIME_DAY_MS;</div><div class="line">			day++;</div><div class="line">			<span class="keyword">if</span> (day &gt; monthday[month]) &#123;</div><div class="line">				day = <span class="number">1</span>;</div><div class="line">				month++;</div><div class="line">				<span class="keyword">if</span> (month &gt; <span class="number">12</span>) &#123;</div><div class="line">					month = <span class="number">1</span>;</div><div class="line">					year++;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		tow /= <span class="number">10</span>;</div><div class="line">		<span class="comment">//int msecond = tow % 100;</span></div><div class="line">		tow /= <span class="number">100</span>;</div><div class="line">		<span class="keyword">int</span> second = tow % <span class="number">60</span>;</div><div class="line">		tow /= <span class="number">60</span>;</div><div class="line">		<span class="keyword">int</span> minute = tow % <span class="number">60</span>;</div><div class="line">		<span class="keyword">int</span> hour = tow / <span class="number">60</span>;</div><div class="line">		<span class="comment">//转成Utc时候 北京时间UTC+8:00</span></div><div class="line">		year -= <span class="number">1900</span>;</div><div class="line">		month -= <span class="number">1</span>;</div><div class="line">		hour += <span class="number">8</span>;</div><div class="line">		date = <span class="keyword">new</span> Date(year, month,day,hour,minute,second);</div><div class="line">	 &#125;</div><div class="line">	</div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	 * 判断闰年</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> year</span></div><div class="line"><span class="comment">	 * <span class="doctag">@return</span></span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isLeapYear</span><span class="params">(<span class="keyword">int</span> year)</span> </span>&#123;</div><div class="line">		<span class="keyword">if</span> (((year % <span class="number">4</span> == <span class="number">0</span>) &amp;&amp; (year % <span class="number">100</span> != <span class="number">0</span>)) || (year % <span class="number">400</span> == <span class="number">0</span>)) </div><div class="line">			<span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			<span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">public</span> Date <span class="title">getDate</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">return</span> date;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>其实可以把时区参数放到函数中，<br>为什么要减去1900年，这要说到java中<code>new Date</code>这个方法的定义，<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Deprecated</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Date</span><span class="params">(<span class="keyword">int</span> year, <span class="keyword">int</span> month, <span class="keyword">int</span> date, <span class="keyword">int</span> hrs, <span class="keyword">int</span> min, <span class="keyword">int</span> sec)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> y = year + <span class="number">1900</span>;</div><div class="line">        <span class="comment">// month is 0-based. So we have to normalize month to support Long.MAX_VALUE.</span></div><div class="line">        <span class="keyword">if</span> (month &gt;= <span class="number">12</span>) &#123;</div><div class="line">            y += month / <span class="number">12</span>;</div><div class="line">            month %= <span class="number">12</span>;</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (month &lt; <span class="number">0</span>) &#123;</div><div class="line">            y += CalendarUtils.floorDivide(month, <span class="number">12</span>);</div><div class="line">            month = CalendarUtils.mod(month, <span class="number">12</span>);</div><div class="line">        &#125;</div><div class="line">        BaseCalendar cal = getCalendarSystem(y);</div><div class="line">        cdate = (BaseCalendar.Date) cal.newCalendarDate(TimeZone.getDefaultRef());</div><div class="line">        cdate.setNormalizedDate(y, month + <span class="number">1</span>, date).setTimeOfDay(hrs, min, sec, <span class="number">0</span>);</div><div class="line">        getTimeImpl();</div><div class="line">        cdate = <span class="keyword">null</span>;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>看出来年是按照1900基数来算的。</p>
<p>通过上面的算法可以将gps时间转换成北京时间 </p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;gps时间系统&quot;&gt;&lt;a href=&quot;#gps时间系统&quot; class=&quot;headerlink&quot; title=&quot;gps时间系统&quot;&gt;&lt;/a&gt;gps时间系统&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;GPS时间系统&lt;/code&gt;采用原子时AT1秒长作时间基准，秒长定义为铯原子CS133基态的两个超精细能级间跃迁辐射振荡9192631170周所持续的时间，时间起算的原点定义在1980年1月6日世界协调时UTC0时，启动后不跳秒，保证时间的连续。以后随着时间积累，GPS时与UTC时的整秒差以及秒以下的差异通过时间服务部门定期公布。&lt;br&gt;精密导航和测量的需要，GPS建立了专用的时间系统。该系统可简写为GPS由GPS主控站的原于钟控制，规定GPS与协调时的时刻于t980年1月6日o时相一致。其后随着时间的积累两者之间的差别将表现为秒的整倍数。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://blog.wuwii.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="java" scheme="http://blog.wuwii.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>WIN10家庭版安装Doby 4</title>
    <link href="http://blog.wuwii.com/doby4-install.html"/>
    <id>http://blog.wuwii.com/doby4-install.html</id>
    <published>2017-10-03T06:08:03.000Z</published>
    <updated>2017-10-07T10:06:35.759Z</updated>
    
    <content type="html"><![CDATA[<p>笔记本电脑的音效确实好差劲啊，无聊还是准备安装了一个杜比装X，效果还是不错的，<code>家庭版</code>安装过程中，跟以前<code>专业版</code>有所不同。<a id="more"></a></p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p><a rel="external nofollow" target="_blank" href="http://pan.baidu.com/s/1cdIQpo">http://pan.baidu.com/s/1cdIQpo</a></p>
<p>密码 <code>k8sa</code></p>
<p>下载好解压，</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ul>
<li>进入解压的文件夹中直接执行安装程序<code>.exe文件</code>，记住不要修改软件的安装的路径，让软件自行解压到<code>C:\DRIVERS\WIN\DOLBY</code>，最后记住取消<code>勾勾</code>再点finish。我们会在C盘的安装目录里看到如下的文件:    <img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171003132434.png" alt="image"></li>
<li>WIN10电脑有个蛋疼的驱动自动更新，它会自动下载和更新我们电脑上的相关驱动，我们需要取消这个功能，步骤：</li>
</ul>
<blockquote>
<p>控制面板\所有控制面板项\系统\高级系统设置\硬件\设备安装设置<br>选择否<br>保存设置</p>
</blockquote>
<p>通过上面的设置，系统不会自动更新我们的驱动了，</p>
<ul>
<li>现在需要重启，注意不是一般的重启，我们需要禁用驱动程序强制签名，为什么会这样，我想应该是微软系统还没收录这类的驱动程序，（ps:以前玩腾讯游戏也是，WIN10已更新把腾讯驱动给屏蔽了，全挂了）<br>回归正题，按住<code>shirt键</code>，再去点击计算机<code>重启</code>按钮，进入<code>疑难解答</code>这一项，再点<code>启动设置</code>，电脑重启后，会让我们选择一个列表的东西，我们直接按键盘 <code>7键</code> 禁用驱动程序强制签名 的选项。</li>
<li>然后，进入我们第一步安装问价的路径 <code>C:\DRIVERS\WIN\DOLBY</code> 64位系统进入 <code>X64</code>文件夹中运行安装 <code>DTCP</code><br><img src="http://ov62kaxkk.bkt.clouddn.com/6bba7eed2e738bd4cf4228eaa38b87d6267ff99d.jpg" alt="image"><br><img src="http://ov62kaxkk.bkt.clouddn.com/fbe31a738bd4b31cfa5f0e6085d6277f9f2ff89d%5B1%5D.jpg" alt="image"></li>
</ul>
<p>安装完成后，可以看到电脑右下角有杜比的图标，放音乐有频谱，表明杜比接管声卡驱动成功了。<br><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171003134123.png" alt="image"></p>
<p>贴张音效图</p>
<p><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171003134455.png" alt="image"></p>
<h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><ol>
<li>安装时候不需要卸载原来的声卡，安装时候不需要卸载原来的声卡，安装时候不需要卸载原来的声卡，重要的说三遍。</li>
<li>WIN10家庭版相比专业版没有<code>策略组</code>，不能去设置设置安装限制，但是还是能正常安装，我想不需要设置  （禁止安装未由其他策略设置描述的设备设置），所以专业版也可以使用这个方式安装。</li>
<li>台式电脑要注意了，杜比不支持前置声卡接口。</li>
<li>有厂商制定的声卡或者软件，可能有一些兼容问题，我的HP笔记本就是静音没有键盘灯提示了。</li>
<li>最后，渣渣笔记本的扬声器，随便淘宝买个50块以内的音响就完爆了，哈哈，提升硬件才是硬道理。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;笔记本电脑的音效确实好差劲啊，无聊还是准备安装了一个杜比装X，效果还是不错的，&lt;code&gt;家庭版&lt;/code&gt;安装过程中，跟以前&lt;code&gt;专业版&lt;/code&gt;有所不同。
    
    </summary>
    
      <category term="学习笔记" scheme="http://blog.wuwii.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="doby" scheme="http://blog.wuwii.com/tags/doby/"/>
    
  </entry>
  
  <entry>
    <title>请告诉女儿：嫁人就嫁心机男</title>
    <link href="http://blog.wuwii.com/thinking-boy.html"/>
    <id>http://blog.wuwii.com/thinking-boy.html</id>
    <published>2017-10-03T02:08:03.000Z</published>
    <updated>2017-10-07T10:06:36.133Z</updated>
    
    <content type="html"><![CDATA[<p>本来是昨天听FM听到这篇文章的，文章非常好，虽然自己也没感情经历，突然感觉自己这么是个直男好吓人啊😭，就算是一段认识吧，分享下这个文章，也不转载了，（哭。<br><a id="more"></a></p>
<p>直接挂个链接吧。</p>
<p><strong>文章作者：</strong> 国馆</p>
<p><strong>原文链接：</strong> <a rel="external nofollow" target="_blank" href="https://www.douban.com/note/638049932/">https://www.douban.com/note/638049932/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本来是昨天听FM听到这篇文章的，文章非常好，虽然自己也没感情经历，突然感觉自己这么是个直男好吓人啊😭，就算是一段认识吧，分享下这个文章，也不转载了，（哭。&lt;br&gt;
    
    </summary>
    
      <category term="分享" scheme="http://blog.wuwii.com/categories/%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="感情" scheme="http://blog.wuwii.com/tags/%E6%84%9F%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>Travis CI 持续集成</title>
    <link href="http://blog.wuwii.com/TravisCI.html"/>
    <id>http://blog.wuwii.com/TravisCI.html</id>
    <published>2017-10-02T15:08:03.000Z</published>
    <updated>2017-10-07T10:06:35.644Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Travis-CI-持续集成"><a href="#Travis-CI-持续集成" class="headerlink" title="Travis CI 持续集成"></a>Travis CI 持续集成</h3><p>到这一步，你其实已经可以很简便的使用 <code>Hexo</code> 来写博客了，可人是一种永远不满足的动物。使用 Hexo 来写博客有一个问题就是，我只能在安装了 Hexo 的计算机上写东西，然后 hexo generate 再 hexo deploy 到托管服务器。如果我想在没有安装 Hexo 的电脑上写博客呢？如果我想随时随地修改，或者写一下博客呢？<br>当然一个简单办法就是把自己博客的源文件也托管到 Github，每次都把源文件 clone 下来，然后安装 Hexo，再构建发布就好了。可是这样做的话，始终不太优雅。那可以搞一个远程的服务器，把构建博客的事情交给服务器，每次要写博客的时候连接到服务器上去就行了。可既然我们把博客都托管到了 Github，为甚么博客的构建还需要服务呢？不行，这样还是不够优雅。如果有什么服务能够代替上述的那个服务器就好了，答案是确实有的——持续集成。<br><a id="more"></a></p>
<h4 id="什么是持续集成"><a href="#什么是持续集成" class="headerlink" title="什么是持续集成"></a>什么是持续集成</h4><blockquote>
<p><code>持续集成</code>（Continuous Integration）是一种软件开发实践。 在持续集成中，团队成员频繁集成他们的工作成果，一般每人每天至少集成一次，也可以多次。 每次集成会经过自动构建（包括自动测试）的检验，以尽快发现集成错误。</p>
</blockquote>
<h4 id="什么是-Travis-CI"><a href="#什么是-Travis-CI" class="headerlink" title="什么是 Travis CI"></a>什么是 Travis CI</h4><blockquote>
<p><code>Travis CI</code> 是目前新兴的开源持续集成构建项目，它与 jenkins，GO 的很明显的特别在于采用 yaml 格式，同时它是在线的服务，不像 jenkins 需要你本地搭建服务器，简洁清新独树一帜。目前大多数的 Github 项目都已经移入到 Travis CI 的构建队列中，据说Travis CI 每天运行超过 4000 次完整构建。对于做开源项目或者 Github 的使用者，如果你的项目还没有加入 Travis CI 构建队列，那么我真的想对你说 OUT 了。</p>
</blockquote>
<h4 id="Travis-和-Hexo"><a href="#Travis-和-Hexo" class="headerlink" title="Travis 和 Hexo"></a>Travis 和 Hexo</h4><p>为什么我们要选择 Travis 呢，因为它和 Github 集成的程度非常高，对于 Github 上的开源项目，可以免费在 Travis 上构建（我们是不是该为免费的互联网精神干杯🍻），而非开源的私有项目想在 Travis 上构建价格还是非常感人的。<br>我先把在 Travis 上进行自动构建的思路说一下：<br><img src="http://7xin49.com1.z0.glb.clouddn.com/mac_qrsync/cbc37bcd05062212564fe2aaaee6631f.png-960.jpg" alt="Travis"></p>
<ul>
<li>我们在在 Github 的博客仓库里新建一个 <code>blog-source</code> 分支，然后把博客的源码托管到这个分支</li>
<li>每当我们在本地写好了博文之后，把修改 <code>push</code> 到该分支</li>
<li>Travis 上可以对这个项目的 <code>blog-source</code> 分支设置钩子，每当检测到 <code>push</code> 的时候就去仓库 <code>clone</code> 源代码</li>
<li>Travis 执行构建脚本</li>
<li>Travis 把构建结果通过 <code>push</code> 部署到 <code>master</code> 分支或者 Coding.net 的仓库里 </li>
</ul>
<p>在这样的自动化流程下，我们唯一需要做的事情就是 <code>push</code> 我们的博文到源代码分支，其他的事情交给 Travis，当然，这一流程是需要我们配置的。</p>
<h4 id="配置-Travis"><a href="#配置-Travis" class="headerlink" title="配置 Travis"></a>配置 Travis</h4><h5 id="注册-Travis"><a href="#注册-Travis" class="headerlink" title="注册 Travis"></a>注册 Travis</h5><p>Travis CI 不需要单独注册，直接使用 GitHub 账号登录就可以了。<br>上<a rel="external nofollow" target="_blank" href="https://travis-ci.org/">官网</a> 会发现有 Sign in with GitHub（使用GitHUb登录）和 Sign Up（注册），其实这俩做的事情都一样，就是用 GitHub 账号登录。登录后界面会显示你的 GitHub Repository，默认全部全部没有勾选，选择你的博客的 Repository 后完成第一步，如图：<br><img src="http://7xin49.com1.z0.glb.clouddn.com/mac_qrsync/c5c4ae39bc22681ccf481119befbe363.png-960.jpg" alt="image"><br>如果你没有看到自己的项目，请点击右上角的 <code>Sync with Github</code>。</p>
<h4 id="安装-Travis-CML"><a href="#安装-Travis-CML" class="headerlink" title="安装 Travis CML"></a>安装 Travis CML</h4><p>在进行下面的步骤之前，我们需要先安装 Travis 的 CML，因为后面的部署需要我们加密的自己的 SSH 私钥和 Github、Coding.net 通信。安装过程请看 <a rel="external nofollow" target="_blank" href="https://github.com/travis-ci/travis.rb#installation">Travis CML Installation</a>：<br>首先必须有 <a rel="external nofollow" target="_blank" href="http://www.ruby-lang.org/en/downloads/">Ruby 1.9.3</a> 以上，检查了版本之后，安装 Travis，检查版本即可： </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ruby -v</div><div class="line">gem install travis -v 1.8.4 --no-rdoc --no-ri</div><div class="line">travis version</div></pre></td></tr></table></figure>
<p>如上，如果出现 1.8.2 这样的版本信息，则说明 Travis CI Command Line Client 安装成功。之后进行登录，执行：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">travis login</div></pre></td></tr></table></figure></p>
<p>按照提示登录就好了。  </p>
<h4 id="配置-Travis-1"><a href="#配置-Travis-1" class="headerlink" title="配置 Travis"></a>配置 Travis</h4><p>在博客根目录下添加 Travis CI 所需要的配置文件 <code>.travis.yml</code>，配置文件内容和一些说明如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">language: node_js</div><div class="line">node_js: stable</div><div class="line"></div><div class="line"># assign build branches</div><div class="line">branches:</div><div class="line">  only:</div><div class="line">    - blog-source</div><div class="line"></div><div class="line"># cache this directory</div><div class="line">cache:</div><div class="line">  directories:</div><div class="line">    - node_modules</div><div class="line"></div><div class="line"># S: Build Lifecycle</div><div class="line">before_install:</div><div class="line">  - openssl aes-256-cbc -K $encrypted_a0b7f0848317_key -iv $encrypted_a0b7f0848317_iv -in ./.travis/id_rsa.enc -out ~/.ssh/id_rsa -d</div><div class="line">  - chmod 600 ~/.ssh/id_rsa</div><div class="line">  - eval $(ssh-agent)</div><div class="line">  - ssh-add ~/.ssh/id_rsa</div><div class="line">  - cp .travis/ssh_config ~/.ssh/config</div><div class="line">  - npm install -g hexo-cli # 安装 hexo</div><div class="line">  - git clone -b mod https://github.com/quentin-chen/hexo-theme-even.git themes/even</div><div class="line"></div><div class="line">install:</div><div class="line">  - npm install # 安装 package.json 中的插件</div><div class="line"></div><div class="line">script:</div><div class="line">  - hexo generate</div><div class="line"></div><div class="line">after_success:</div><div class="line">  - git config --global user.name &quot;Quentin_Chen&quot;</div><div class="line">  - git config --global user.email &quot;quentin.chen@foxmail.com&quot;</div><div class="line">  - sed -i&apos;&apos; &quot;/^ *repo/s~github\.com~$&#123;githubToken&#125;@github.com~&quot; _config.yml</div><div class="line">  - hexo deploy</div><div class="line"># E: Build LifeCycle</div></pre></td></tr></table></figure>
<p>我逐步来讲解一下每一个配置项的意思。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">language: node_js</div><div class="line">node_js: stable</div><div class="line"></div><div class="line"># assign build branches</div><div class="line">branches:</div><div class="line">  only:</div><div class="line">    - blog-source</div><div class="line"></div><div class="line"># cache this directory</div><div class="line">cache:</div><div class="line">  directories:</div><div class="line">    - node_modules</div></pre></td></tr></table></figure></p>
<p>这里指定了构建的环境是 Node.js，版本是当前稳定版本。设置的 <code>WebHook</code> 钩子只检测 <code>blog-source</code> 分支的 <code>push</code> 变动。另外我们把 <code>node_modules</code> 文件夹放入缓存，这样可以大大节约每次构建的时间（2min -&gt; 30s）。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">before_install:</div><div class="line">  - openssl aes-256-cbc -K &lt;you_key&gt; -iv &lt;your_iv&gt; -in ./.travis/id_rsa.enc -out ~/.ssh/id_rsa -d</div><div class="line">  - chmod 600 ~/.ssh/id_rsa</div><div class="line">  - eval $(ssh-agent)</div><div class="line">  - ssh-add ~/.ssh/id_rsa</div><div class="line">  - cp .travis/ssh_config ~/.ssh/config</div><div class="line">  - npm install -g hexo-cli # 安装 hexo</div><div class="line">  - git clone &lt;theme_repo&gt; themes/&lt;theme&gt;</div></pre></td></tr></table></figure>
<p>其实每次 Travis 构建的时候，相当于创建了一个干净的虚拟机，除了 Git 等必须的工具，甚至连 Node.js 的环境都是现安装的。所以我们在构建自己的博客之前，需要做一些环境的准备。<br>其中 2-6 行是用来配置 SSH 私钥的，这样才能让 Github 和 Coding.net 知道你的身份。这一部分我们后面再说。<br>第 7 行是在 Travis 中安装 Hexo 环境，第 8 行是安装主题。</p>
<blockquote>
<p>关于主题这里，如果你对自己的主题做了修改（包括配置文件），那么应该把自己修改过的主题托管到 Github，这里填的 <code>&lt;theme_repo&gt;</code> 应是你自己地址。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">install:</div><div class="line">  - npm install # 安装 package.json 中的插件</div><div class="line"></div><div class="line">script:</div><div class="line">  - hexo generate</div><div class="line"></div><div class="line">after_success:</div><div class="line">  - git config --global user.name &quot;&lt;You Name&gt;&quot;</div><div class="line">  - git config --global user.email &quot;&lt;email&gt;&quot;</div><div class="line">  - hexo deploy</div></pre></td></tr></table></figure>
<p>这一部分，就是在 Travis 上模拟部署过程。因为要使用 Git，所以要提前配置好 Committer 的信息。<br>生成私钥加密文件 </p>
<blockquote>
<p>什么是私钥？<br>私钥就是密钥对（密钥对指一对公钥和私钥），我们在使用 Github 的时候，首先需要在 Github 上配置公钥，这是最基础的。那么，存在我们本地的私钥就是你的个人身份标示，如果你的项目 git 地址配置的是 git@github.com:username/projectname.git（相对的还有 <a href="https://github.com/username/projectname.git），" target="_blank" rel="external">https://github.com/username/projectname.git），</a> 当你在对 Repository 在一些操作（比如 push 等），则需要私钥进行身份验证了（这是自动验证的，如果是使用 https 的配置，则需要提供用户名和密码）。<br>我们在 Travis CI 上自动部署代码，就牵扯到了 push 操作，那么就需要提供私钥了。</p>
<p>为什么生成私钥加密文件？</p>
</blockquote>
<p>将私钥直接放在项目里，那么人人都能看到。私钥的泄露将会发生一系列的问题，比如有坏人拿你的私钥直接操作你的 git 项目，你能干啥他也能干啥（原理上面讲了），这咋整？我们需要对私钥进行加密。<br>Travis 提供了加密文件的支持，什么意思呢？我们可以对文件（这里指私钥）在本地进行加密，然后把加密过后的文件放在项目里，那么别人就无法获取里面的真实内容。然后我们在让 Travis 执行脚本的时候，在读取加密文件之前对文件进行解密（使用的解密密码提前在 Travis 上配置好了），这样就可以达到不将文件内容暴露，并且让 Travis 获取到真实内容的目的了，大概的时序图如下：<br><img src="http://7xin49.com1.z0.glb.clouddn.com/mac_qrsync/8801dc034d298600bfc9b7124a0f42cd.png-960.jpg" alt="image"><br>开始吧，我们首先把自己的在博客的根目录下建立 .travis 文件夹来存放相关的资料：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir .travis &amp;&amp; <span class="built_in">cd</span> .travis</div></pre></td></tr></table></figure></p>
<p>把本地的私钥复制一份过来，用 Travis 加密，然后删除（切记加密完了一定要删除原始密钥！！！）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cp ~/.ssh/id_rsa .</div><div class="line">travis encrypt-file id_rsa</div><div class="line">rm id_rsa</div></pre></td></tr></table></figure></p>
<p>现在 ls 命令查看一下 <code>.travis</code> 目录应该只有 <code>id_rsa.enc</code> 这一个文件才对。然后我们再在当前目录下新建一个 <code>ssh_config</code> 用来配置 Travis 上的 SSH Client。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Host *</div><div class="line">  User git</div><div class="line">  StrictHostKeyChecking no</div><div class="line">  IdentityFile ~/.ssh/id_rsa</div><div class="line">  IdentitiesOnly yes</div></pre></td></tr></table></figure>
<p>现在，我们在 Travis 网站，博客项目的设置（项目右上角）里可以看到两个用于解密私钥的环境变量：  <img src="http://7xin49.com1.z0.glb.clouddn.com/mac_qrsync/c180cfd5996f2b3c1d43f9017a11b7c9.png-960.jpg" alt="image"></p>
<p>把这两个环境变量名复制到上面的 <code>.travis.yaml</code> 文件里替换相应部分：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">before_install:</div><div class="line">  - openssl aes-256-cbc -K &lt;you_key&gt; -iv &lt;your_iv&gt; -in ./.travis/id_rsa.enc -out ~/.ssh/id_rsa -d</div></pre></td></tr></table></figure></p>
<p>这样，全部的配置就完成了。</p>
<blockquote>
<p>Tips： Github 还支持 Application Token 的方式来认证身份，比使用 SSH 私钥要更简便，但考虑到 Coding.net 并不支持，我还是选择普适的方法。有兴趣的同学可以自己研究一下，就当做课后作业吧:D。</p>
</blockquote>
<h4 id="完成工作流"><a href="#完成工作流" class="headerlink" title="完成工作流"></a>完成工作流</h4><p>在进行工作流之前我们来检查一下我们现在工作目录和所有必须的东西：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">.</div><div class="line">├── .travis*</div><div class="line">│   ├── id_rsa.enc</div><div class="line">│   └── ssh_config</div><div class="line">├── _config.yml*</div><div class="line">├── db.json*</div><div class="line">├── node_modules</div><div class="line">├── package.json*</div><div class="line">├── scaffolds*</div><div class="line">├── <span class="built_in">source</span>*</div><div class="line">│   ├── CNAME*</div><div class="line">│   ├── _posts</div><div class="line">│   ├── about</div><div class="line">│   ├── categories</div><div class="line">│   ├── img</div><div class="line">│   ├── media</div><div class="line">│   └── tags</div><div class="line">└── themes</div></pre></td></tr></table></figure></p>
<p>我用星号标记的文件和文件夹都是十分重要的，确保 Git 覆盖了这些文件和目录，然后我们把目录 <code>push</code> 到 <code>github/blog-source</code> 仓库分支。Travis WebHook 立马就会检测到 <code>push</code>，然后开始构建了：<br><img src="http://7xin49.com1.z0.glb.clouddn.com/mac_qrsync/e0f11bcfb411c5b73bdcac015ee87b3d.png-960.jpg" alt="image"></p>
<p>上图是一次成功的构建，我们可以点开 <code>Job log</code> 看一下构建过程的 Log 文件，特别是构建没有成功的话，我们更要仔细阅读，找准问题，对症下药。<br>构建成功以后再去刷新你的网页，是不是已经是最新的了呢？</p>
<p>以上是<strong>利用 <code>Travis</code> 实现全自动部署</strong></p>
<p><strong>文章作者写的非常详细，我就完全复制转载过来了，非常感谢。</strong></p>
<p><strong>原文作者: Kun Chen</strong></p>
<p><strong>原文链接：<a rel="external nofollow" target="_blank" href="http://kchen.cc/2016/11/12/hexo-instructions/">http://kchen.cc/2016/11/12/hexo-instructions/</a> </strong></p>
<p><strong>侵删</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Travis-CI-持续集成&quot;&gt;&lt;a href=&quot;#Travis-CI-持续集成&quot; class=&quot;headerlink&quot; title=&quot;Travis CI 持续集成&quot;&gt;&lt;/a&gt;Travis CI 持续集成&lt;/h3&gt;&lt;p&gt;到这一步，你其实已经可以很简便的使用 &lt;code&gt;Hexo&lt;/code&gt; 来写博客了，可人是一种永远不满足的动物。使用 Hexo 来写博客有一个问题就是，我只能在安装了 Hexo 的计算机上写东西，然后 hexo generate 再 hexo deploy 到托管服务器。如果我想在没有安装 Hexo 的电脑上写博客呢？如果我想随时随地修改，或者写一下博客呢？&lt;br&gt;当然一个简单办法就是把自己博客的源文件也托管到 Github，每次都把源文件 clone 下来，然后安装 Hexo，再构建发布就好了。可是这样做的话，始终不太优雅。那可以搞一个远程的服务器，把构建博客的事情交给服务器，每次要写博客的时候连接到服务器上去就行了。可既然我们把博客都托管到了 Github，为甚么博客的构建还需要服务呢？不行，这样还是不够优雅。如果有什么服务能够代替上述的那个服务器就好了，答案是确实有的——持续集成。&lt;br&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://blog.wuwii.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="hexo" scheme="http://blog.wuwii.com/tags/hexo/"/>
    
      <category term="Travis CI" scheme="http://blog.wuwii.com/tags/Travis-CI/"/>
    
  </entry>
  
  <entry>
    <title>随便写点</title>
    <link href="http://blog.wuwii.com/to-self.html"/>
    <id>http://blog.wuwii.com/to-self.html</id>
    <published>2017-10-02T08:29:03.000Z</published>
    <updated>2017-10-07T10:06:36.137Z</updated>
    
    <content type="html"><![CDATA[<p>想起曾今为了买电脑，每天都要去看下评测，总是感觉那是个莫大的荣誉，可是现在，都不愿意摸电脑了，哈哈，朋友圈、空间这些东西不再玩了，牢骚也不再去分享了。感觉人都要变老了，没那么大精力去玩了。</p>
<p>看看镜子里的自己，可能没感觉，还是这么的年轻，突然拿起以前刚入大学的照片，真是一个天上，一个地下，现在人也变黑了，感觉脸上的棱角也要抹平了。世界的一切都没有变，只是我变了，变老了，生命从来都不等人，朋友们现在都开始展示自己的高调生活了，手机、车子还有房子了，现在自己虽然说刚毕业，义务所有，一切还需要自己打拼。我也想成为了不起的人，但是你想成为的人，也会失去大把周围的美丽的风景。</p>
<p>可能从小到大，我都是个很闷的人吧，可能还很小气，不想跟别人分享任何东西吧，却往往忽视了这个世界上关心我的人了。对的，不管什么什么时候，都不能忘记曾经对自己好的人，即使只是一餐饭，还是一声关心问候，甚至只是一句玩笑话。应该留点时间给老爸老妈了，他们的头发都开始白了。现在在武汉工作，尽可能的近一点，方便一点吧，多点时间回家吧。  </p>
<p>我想，自己已经早已经过了那个年少的年纪了，不能再不顾后果的做一件事情，即使是自己多么喜爱，多么不想放弃的一件事，一个东西，还是一个人。<strong>最美好的时光，莫过于再一个人的年少，无知者无畏。“花有重开日，人无再少年。”</strong>   </p>
<p>虽然想成熟了，但是自己也没经历过什么大事，心里还是那个满心忐忑的少年吧，嗯，其实我也没变什么，还是那么简单：去做自己喜欢做的事情，去爱自己想爱的人。</p>
<p>年轻可能是现在我剩下最好的礼物可，不能浪费了，前面的时光我放弃了很多的东西，如今追回来虽然好难，但是我是不会轻易言弃的。不管在经历着什么，都要记得每一天，认认真真的，不要去放弃了。</p>
<p>我这个人的圈子很小，没什么朋友，很闷，也很慢热，，遇到苦难了，想坚持，也想放弃，不想逗留。曾经也想改变性格，但是实在是很无力，反而让自己很难受，反正这是上天给予我的礼物，现在我的工作和生活也不必在乎这个性格的弊端，我已经接受了。</p>
<p>说过<strong>生活要晶莹剔透柔软善良，想对待第一次自己喜欢的人儿一样去对待它。没有好坏，没有歧视，只用想去付出，然后得到。</strong></p>
<p>我总是这么的心急，只要一切都来得及。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;想起曾今为了买电脑，每天都要去看下评测，总是感觉那是个莫大的荣誉，可是现在，都不愿意摸电脑了，哈哈，朋友圈、空间这些东西不再玩了，牢骚也不再去分享了。感觉人都要变老了，没那么大精力去玩了。&lt;/p&gt;
&lt;p&gt;看看镜子里的自己，可能没感觉，还是这么的年轻，突然拿起以前刚入大学的照
    
    </summary>
    
      <category term="碎碎念" scheme="http://blog.wuwii.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="心情" scheme="http://blog.wuwii.com/tags/%E5%BF%83%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>《苦橙》-- 歌词</title>
    <link href="http://blog.wuwii.com/melangolo.html"/>
    <id>http://blog.wuwii.com/melangolo.html</id>
    <published>2017-09-29T12:08:03.000Z</published>
    <updated>2017-10-07T10:06:35.880Z</updated>
    
    <content type="html"><![CDATA[<p>以前听的一首很美的歌，欣赏下歌词。<a id="more"></a></p>
<blockquote class="blockquote-center"><h2 id="苦橙"><a href="#苦橙" class="headerlink" title="苦橙"></a>苦橙</h2><h5 id="林力尧"><a href="#林力尧" class="headerlink" title="林力尧"></a>林力尧</h5><p>越沉默 越用心包裹<br>忽略 越多难过 容易更乐活<br>可终究 郁结如核的感受<br>还是被自己品尝出浅薄<br>不甘被冷落<br>心甘情愿被你利用<br>榨尽真心<br>难怪换被丢弃的理由<br>其实我也知道我<br>并不算成熟<br>所以更渴望能有<br>风雨的承受<br>无奈连光都照不够<br>也没有人来收获<br>只能自己结果<br>和坠地的疼痛<br>其实我也知道我<br>是有些懦弱<br>表里不一的坚强<br>难道也有错<br>我只是不愿意<br>一直妥协昧心到腐朽<br>成色不足的苦橙<br>难道注定就<br>不如那些罐头<br>讨喜地被拥有</p>
<p>越肺腑 越失心袒露<br>他们 都多事故 而我多冲动<br>学不会 深加工过的笑容<br>就留给他们<br>礼貌地对我<br>你也别内疚<br>反正我被笑过很多<br>卖相不好<br>又怎么能怪人不识货<br>其实我也知道我<br>并不算成熟<br>所以更渴望能有<br>风雨的承受<br>无奈连光都照不够<br>也没有人来收获<br>只能自己结果<br>和坠地的疼痛<br>其实我也知道我<br>是有些懦弱<br>表里不一的坚强<br>难道也有错<br>我只是不愿意<br>一直妥协昧心到腐朽<br>成色不足的苦橙<br>难道注定就<br>不如那些罐头<br>讨喜地被拥有<br>你别内疚<br>反正现在我已想通<br>卖相不好<br>也许才有真心等候</p>
</blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以前听的一首很美的歌，欣赏下歌词。
    
    </summary>
    
      <category term="那些很美的句子" scheme="http://blog.wuwii.com/categories/%E9%82%A3%E4%BA%9B%E5%BE%88%E7%BE%8E%E7%9A%84%E5%8F%A5%E5%AD%90/"/>
    
    
      <category term="歌词" scheme="http://blog.wuwii.com/tags/%E6%AD%8C%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>《浮生》-- 歌词</title>
    <link href="http://blog.wuwii.com/floating-life.html"/>
    <id>http://blog.wuwii.com/floating-life.html</id>
    <published>2017-09-28T15:08:03.000Z</published>
    <updated>2017-10-07T10:06:35.765Z</updated>
    
    <content type="html"><![CDATA[<p>今天听到这首歌，第一次听到它，我感觉无穷的想念都涌出来了，说真的，我哭了。<a id="more"></a></p>
<blockquote class="blockquote-center"><h2 id="浮生"><a href="#浮生" class="headerlink" title="浮生"></a>浮生</h2><h5 id="刘莱斯"><a href="#刘莱斯" class="headerlink" title="刘莱斯"></a>刘莱斯</h5><p>无人与我把酒分<br>无人告我夜已深<br>无人问我粥可暖<br>无人与我立黄昏<br>他真的很喜欢你 像风走了八千里<br>他真的很喜欢你 像阵雨下到了南极<br>他真的很想念你 像珊瑚沉在海底<br>他真的很喜欢你 不问归期不远万里<br>他真的很喜欢你 像盲人看一出哑剧<br>他真的很喜欢你 像第一首诗不尽人意<br>他真的很喜欢你 像太阳自转无论朝夕<br>他真的很喜欢你 千言万语乐此不疲</p>
<p>他真的很喜欢你 像春雨下得淅淅沥沥<br>他真的很喜欢你 像夏日聒噪的蝉鸣<br>他真的很想念你 像秋叶落得悄无声息<br>他真的很喜欢你 想冬天的雪沁在心里<br>他真的很喜欢你 像狗本性难移<br>他真的很喜欢你 所以他可以一直没脸没皮<br>他真的很想念你 无时不刻不在想你<br>他真的很喜欢你 所以他把你捧在手心<br>他真的很喜欢你 所以固执地排比比喻<br>他真的很喜欢你 虽然他的感情实在细腻<br>他真的很想念你 真的无时不刻不再想你<br>他真的很喜欢你 不想浪费时间的一点一滴<br>他真的 很喜欢你<br>他真的 很喜欢你<br>他真的 很想念你<br>他真的 很喜欢你 很喜欢很喜欢你<br>有人与我把酒分<br>有人告我夜已深<br>有人问我粥可暖<br>有人与我立黄昏<br>有人待我诚且真<br>有人忧我细无声<br>有人知我冷与暖<br>有人伴我度余生</p>
</blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天听到这首歌，第一次听到它，我感觉无穷的想念都涌出来了，说真的，我哭了。
    
    </summary>
    
      <category term="那些很美的句子" scheme="http://blog.wuwii.com/categories/%E9%82%A3%E4%BA%9B%E5%BE%88%E7%BE%8E%E7%9A%84%E5%8F%A5%E5%AD%90/"/>
    
    
      <category term="歌词" scheme="http://blog.wuwii.com/tags/%E6%AD%8C%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>不眠</title>
    <link href="http://blog.wuwii.com/never-sleeping.html"/>
    <id>http://blog.wuwii.com/never-sleeping.html</id>
    <published>2017-09-28T14:08:03.000Z</published>
    <updated>2017-10-07T10:06:35.912Z</updated>
    
    <content type="html"><![CDATA[<p>一直在想起你，<br>反反复复告诉自己不要打扰你了，<br>其实我总是这么的固执，<br>一次次骗自己，<br>但还是没能停下颤抖的手，<br>向你发送了一个憨笑的表情。  </p>
<p>每次发送一条消息，<br>有时候要想半天，<br>怎么能去撩动你的心，<br>虽然大多数的时候没能得到回应，<br>但每次发完我得内心，<br>总是还是很期待的，<br>不知道这种感觉是从什么时候开始的，<br>是多年前的高中，<br>还是现在，  </p>
<p>我想，<br>不期待太多的回应，<br>但愿一切安好吧，<br>我想，<br>我还是太懦弱了，<br>虽然想追回你，<br>照顾你，<br>但我真不知道该用什么来追回你，<br>可能我这个人真有点烂了，<br>没付出过什么，<br>也没做过什么刻骨铭心的事情，<br>只有等待，<br>等待就等于没有结果。</p>
<p>一个又一个夜晚吧，<br>一次又一次的念，<br>我的生活就是这样的吧，<br>做自己想做的事，<br>买想买的东西，<br>去和喜欢的人聊聊天，<br>很快乐，<br>虽然很打扰，<br>但是抱歉，<br>我很自私。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一直在想起你，&lt;br&gt;反反复复告诉自己不要打扰你了，&lt;br&gt;其实我总是这么的固执，&lt;br&gt;一次次骗自己，&lt;br&gt;但还是没能停下颤抖的手，&lt;br&gt;向你发送了一个憨笑的表情。  &lt;/p&gt;
&lt;p&gt;每次发送一条消息，&lt;br&gt;有时候要想半天，&lt;br&gt;怎么能去撩动你的心，&lt;br&gt;虽然大
    
    </summary>
    
      <category term="碎碎念" scheme="http://blog.wuwii.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="心情" scheme="http://blog.wuwii.com/tags/%E5%BF%83%E6%83%85/"/>
    
  </entry>
  
</feed>
