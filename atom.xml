<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>喃声细语</title>
  <subtitle>开始</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.wuwii.com/"/>
  <updated>2017-10-17T03:29:25.859Z</updated>
  <id>http://blog.wuwii.com/</id>
  
  <author>
    <name>一棵树站在原野上</name>
    <email>k@wuwii.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Log4j格式输出工具类</title>
    <link href="http://blog.wuwii.com/custom-log.html"/>
    <id>http://blog.wuwii.com/custom-log.html</id>
    <published>2017-10-17T03:28:03.000Z</published>
    <updated>2017-10-17T03:29:25.859Z</updated>
    
    <content type="html"><![CDATA[<p>将输出的Log日志进行输出到指定位置，控制台、文件、邮件和数据库等，需要对每一条日志的输出格式，把日志分为不同的级别，写一个工具类可以把日志信息格式化输出到 控制台 或 文件等。</p>
<h5 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.PrintWriter;</div><div class="line"><span class="keyword">import</span> java.io.StringWriter;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.apache.log4j.Logger;</div><div class="line"></div><div class="line"><span class="comment">/** </span></div><div class="line"><span class="comment">* <span class="doctag">@ClassName</span>: Log </span></div><div class="line"><span class="comment">* <span class="doctag">@Description</span>: LOG工具类</span></div><div class="line"><span class="comment">* <span class="doctag">@author</span> </span></div><div class="line"><span class="comment">* <span class="doctag">@date</span></span></div><div class="line"><span class="comment">*  </span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Log</span> </span>&#123;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> Logger log = Logger.getLogger(Log.class);</div><div class="line">	 <span class="comment">/**</span></div><div class="line"><span class="comment">     * 打印警告</span></div><div class="line"><span class="comment">     * </span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> obj</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">warn</span><span class="params">(Object obj)</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span>&#123;</div><div class="line">            <span class="comment">/*** 获取输出信息的代码的位置 ***/</span></div><div class="line">            String location = <span class="string">""</span>;</div><div class="line">            StackTraceElement[] stacks = Thread.currentThread().getStackTrace();</div><div class="line">            location = stacks[<span class="number">2</span>].getClassName() + <span class="string">"."</span> + stacks[<span class="number">2</span>].getMethodName()</div><div class="line">                    + <span class="string">"("</span> + stacks[<span class="number">2</span>].getLineNumber() + <span class="string">")"</span>;</div><div class="line">            <span class="comment">/*** 是否是异常  ***/</span></div><div class="line">            <span class="keyword">if</span> (obj <span class="keyword">instanceof</span> Exception) &#123;</div><div class="line">                Exception e = (Exception) obj;</div><div class="line">                StringWriter sw = <span class="keyword">new</span> StringWriter();</div><div class="line">                e.printStackTrace(<span class="keyword">new</span> PrintWriter(sw, <span class="keyword">true</span>));</div><div class="line">                String str = sw.toString();</div><div class="line">                log.warn(location + str);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                log.warn(location + obj.toString());</div><div class="line">            &#125;</div><div class="line">        &#125;<span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            log.error(e);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    </div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 打印信息</span></div><div class="line"><span class="comment">     * </span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> obj</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">info</span><span class="params">(Object obj)</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span>&#123;</div><div class="line">            <span class="comment">/*** 获取输出信息的代码的位置 ***/</span></div><div class="line">            String location = <span class="string">""</span>;</div><div class="line">            StackTraceElement[] stacks = Thread.currentThread().getStackTrace();</div><div class="line">            location = stacks[<span class="number">2</span>].getClassName() + <span class="string">"."</span> + stacks[<span class="number">2</span>].getMethodName()</div><div class="line">                    + <span class="string">"("</span> + stacks[<span class="number">2</span>].getLineNumber() + <span class="string">")"</span>;</div><div class="line">            <span class="comment">/*** 是否是异常  ***/</span></div><div class="line">            <span class="keyword">if</span> (obj <span class="keyword">instanceof</span> Exception) &#123;</div><div class="line">                Exception e = (Exception) obj;</div><div class="line">                StringWriter sw = <span class="keyword">new</span> StringWriter();</div><div class="line">                e.printStackTrace(<span class="keyword">new</span> PrintWriter(sw, <span class="keyword">true</span>));</div><div class="line">                String str = sw.toString();</div><div class="line">                log.info(location + str);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                log.info(location + obj.toString());</div><div class="line">            &#125;</div><div class="line">        &#125;<span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">           log.error(e);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 打印错误</span></div><div class="line"><span class="comment">     * </span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> obj</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">error</span><span class="params">(Object obj)</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span>&#123;</div><div class="line">            <span class="comment">/*** 获取输出信息的代码的位置 ***/</span></div><div class="line">            String location = <span class="string">""</span>;</div><div class="line">            StackTraceElement[] stacks = Thread.currentThread().getStackTrace();</div><div class="line">            location = stacks[<span class="number">2</span>].getClassName() + <span class="string">"."</span> + stacks[<span class="number">2</span>].getMethodName()</div><div class="line">                    + <span class="string">"("</span> + stacks[<span class="number">2</span>].getLineNumber() + <span class="string">")"</span>;</div><div class="line">            </div><div class="line">            <span class="comment">/*** 是否是异常  ***/</span></div><div class="line">            <span class="keyword">if</span> (obj <span class="keyword">instanceof</span> Exception) &#123;</div><div class="line">                Exception e = (Exception) obj;</div><div class="line">                StringWriter sw = <span class="keyword">new</span> StringWriter();</div><div class="line">                e.printStackTrace(<span class="keyword">new</span> PrintWriter(sw, <span class="keyword">true</span>));</div><div class="line">                String str = sw.toString();</div><div class="line">                log.error(location + str);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                log.error(location + obj.toString());</div><div class="line">            &#125;</div><div class="line">        &#125;<span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            log.error(e);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * debug</span></div><div class="line"><span class="comment">     * </span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> obj</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">debug</span><span class="params">(Object obj)</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span>&#123;</div><div class="line">            <span class="comment">/*** 获取输出信息的代码的位置 ***/</span></div><div class="line">            String location = <span class="string">""</span>;</div><div class="line">            StackTraceElement[] stacks = Thread.currentThread().getStackTrace();</div><div class="line">            location = stacks[<span class="number">2</span>].getClassName() + <span class="string">"."</span> + stacks[<span class="number">2</span>].getMethodName()</div><div class="line">                    + <span class="string">"("</span> + stacks[<span class="number">2</span>].getLineNumber() + <span class="string">")"</span>;</div><div class="line">            </div><div class="line">            <span class="comment">/*** 是否是异常  ***/</span></div><div class="line">            <span class="keyword">if</span> (obj <span class="keyword">instanceof</span> Exception) &#123;</div><div class="line">                Exception e = (Exception) obj;</div><div class="line">                StringWriter sw = <span class="keyword">new</span> StringWriter();</div><div class="line">                e.printStackTrace(<span class="keyword">new</span> PrintWriter(sw, <span class="keyword">true</span>));</div><div class="line">                String str = sw.toString();</div><div class="line">                log.debug(location + str);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                log.debug(location + obj.toString());</div><div class="line">            &#125;</div><div class="line">        &#125;<span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            log.error(e);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>代码忘了从哪里copy 过来的，暂时是这么用的，感觉可以自己定制打印这个规则很好，而且使用的时候直接调用静态方法就可以了，在也不用去各个类上面获取Logger 。</p>
<h5 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.devframe.util; </div><div class="line"></div><div class="line"><span class="keyword">import</span> org.junit.Test; </div><div class="line"><span class="keyword">import</span> org.junit.Before; </div><div class="line"><span class="keyword">import</span> org.junit.After; </div><div class="line"></div><div class="line"><span class="comment">/** </span></div><div class="line"><span class="comment">* Log Tester. </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">* <span class="doctag">@author</span> Zhang Kai </span></div><div class="line"><span class="comment">* <span class="doctag">@since</span> &lt;pre&gt;10/17/2017&lt;/pre&gt; </span></div><div class="line"><span class="comment">* <span class="doctag">@version</span> 1.0 </span></div><div class="line"><span class="comment">*/</span> </div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LogTest</span> </span>&#123; </div><div class="line"></div><div class="line"><span class="meta">@Before</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123; </div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="meta">@After</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123; </div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="comment">/** </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">* Method: warn(Object obj) </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">*/</span> </div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testWarn</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123; </div><div class="line"><span class="comment">//<span class="doctag">TODO:</span> Test goes here...</span></div><div class="line">    Log.warn(<span class="string">"他真的很喜欢你 像春雨下得淅淅沥沥"</span>);</div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="comment">/** </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">* Method: info(Object obj) </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">*/</span> </div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testInfo</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123; </div><div class="line"><span class="comment">//<span class="doctag">TODO:</span> Test goes here...</span></div><div class="line">    Log.info(<span class="string">"他真的很喜欢你 像夏日聒噪的蝉鸣"</span>);</div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="comment">/** </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">* Method: error(Object obj) </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">*/</span> </div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testError</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123; </div><div class="line"><span class="comment">//<span class="doctag">TODO:</span> Test goes here...</span></div><div class="line">    Log.error(<span class="string">"他真的很想念你 像秋叶落得悄无声息"</span>);</div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="comment">/** </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">* Method: debug(Object obj) </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">*/</span> </div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDebug</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123; </div><div class="line"><span class="comment">//<span class="doctag">TODO:</span> Test goes here...</span></div><div class="line">    Log.debug(<span class="string">"他真的很喜欢你 想冬天的雪沁在心里"</span>);</div><div class="line">&#125; </div><div class="line"></div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>测试结果， 这样定制的结果，更符合我们的阅读习惯，更加清晰的查看日志内容<br><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171017111758.png" alt="image"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;将输出的Log日志进行输出到指定位置，控制台、文件、邮件和数据库等，需要对每一条日志的输出格式，把日志分为不同的级别，写一个工具类可以把日志信息格式化输出到 控制台 或 文件等。&lt;/p&gt;
&lt;h5 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink
    
    </summary>
    
      <category term="学习笔记" scheme="http://blog.wuwii.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="java" scheme="http://blog.wuwii.com/tags/java/"/>
    
      <category term="Log4j" scheme="http://blog.wuwii.com/tags/Log4j/"/>
    
  </entry>
  
  <entry>
    <title>Java中Log4j的使用及配置详情</title>
    <link href="http://blog.wuwii.com/java-log4j.html"/>
    <id>http://blog.wuwii.com/java-log4j.html</id>
    <published>2017-10-16T14:47:03.000Z</published>
    <updated>2017-10-17T01:11:45.677Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p><code>Log4j</code>是Apache的一个开源项目，通过使用Log4j，我们可以控制日志信息输送的目的地是控制台、文件、GUI组件，甚至是套接口服务器、NT的事件记录器、UNIX Syslog守护进程等；我们也可以控制每一条日志的输出格式；通过定义每一条日志信息的级别，我们能够更加细致地控制日志的生成过程。最令人感兴趣的就是，这些可以通过一个配置文件来灵活地进行配置，而不需要修改应用的代码。</p>
</blockquote>
<p>项目中日志功能十分强大，可以实时监控你的代码的运行情况，并且就像书页一样清晰可见。<br><a id="more"></a></p>
<h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><p>首先在pom.xml 配置好相关依赖，我这里只使用Log4j，当然还可以使用slf4j 可以管理，<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">log4j.version</span>&gt;</span>1.2.16<span class="tag">&lt;/<span class="name">log4j.version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;log4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>在web.xml 监听 log4j.properties<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 启动Log4j --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">context-param</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">param-name</span>&gt;</span>log4jConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:log4j.properties<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">listener</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.util.Log4jConfigListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">listener</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="配置log4j-properties-配置文件"><a href="#配置log4j-properties-配置文件" class="headerlink" title="配置log4j.properties 配置文件"></a>配置log4j.properties 配置文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">log4j.rootLogger=DEBUG, stdout , R  </div><div class="line">log4j.appender.stdout=org.apache.log4j.ConsoleAppender  </div><div class="line">log4j.appender.stdout.layout=org.apache.log4j.PatternLayout  </div><div class="line">log4j.appender.stdout.layout.ConversionPattern=[QC] %p [%t] %C.%M(%L) | %m%n  </div><div class="line">log4j.appender.R=org.apache.log4j.DailyRollingFileAppender  </div><div class="line">log4j.appender.R.File=d://log//FTASWorkFlow.log  </div><div class="line">log4j.appender.R.layout=org.apache.log4j.PatternLayout  </div><div class="line">log4j.appender.R.layout.ConversionPattern=%d-[TS] %p %t %c - %m%n&lt;/span&gt;</div></pre></td></tr></table></figure>
<h5 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h5><p><code>rootLogger</code>也可以写作<code>rootCategory</code>,<br>rootLogger value的含义<br>第一个逗号前表示log的级别：<code>FATAL</code>,<code>ERROR</code>,<code>WARN</code>,<code>INFO</code>,<code>DEBUG</code>,级别依次降低，开发的时候一般选作DEBUG，上线前期可以INFO或者DEBUG，版本稳定了可以WARN或者ERROR。稳定以后可以每天将日志发送到你的邮箱（至于怎么发，看最下面的Appender），这样就不需要每天去看检查上线的项目有没有异常。</p>
<p>第一个逗号后面的表示你定义的<code>appender</code>，比如我们这里定义了stdout和R，这个名字可以随便定，和下面的对应就好了。这里的stdout代表控制台输出，上线的时候别忘记关掉，直接在rootLogger里去掉stdout就好了。</p>
<h5 id="Log4j提供的appender有以下几种："><a href="#Log4j提供的appender有以下几种：" class="headerlink" title="Log4j提供的appender有以下几种："></a>Log4j提供的appender有以下几种：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">org.apache.log4j.ConsoleAppender（控制台）</div><div class="line">org.apache.log4j.FileAppender（文件）</div><div class="line">org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件）</div><div class="line">org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生新文件）</div><div class="line">org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）</div><div class="line">ConsoleAppender和DailyRollingFileAppender以及RollingFileAppender用的比较多，后面两个用哪个看需求。</div></pre></td></tr></table></figure>
<h5 id="log4j提供以下4种布局样式："><a href="#log4j提供以下4种布局样式：" class="headerlink" title="log4j提供以下4种布局样式："></a>log4j提供以下4种布局样式：</h5><p>不同的Appender有不同的属性，但是Appender都会有一个属性layout，layout又有一个属性PatternLayout<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">org.apache.log4j.HTMLLayout（以HTML表格形式布局）</div><div class="line">org.apache.log4j.PatternLayout（可以灵活地指定布局模式，就是可以自定义输出样式），</div><div class="line">org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），</div><div class="line">org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）</div></pre></td></tr></table></figure></p>
<h5 id="再看一下PatternLayout的值代表的什么意思"><a href="#再看一下PatternLayout的值代表的什么意思" class="headerlink" title="再看一下PatternLayout的值代表的什么意思"></a>再看一下PatternLayout的值代表的什么意思</h5><p><code>%d</code> 输出日志时间点的日期或时间，紧跟一对花括号进行自定义格式<br><code>%t</code> 输出产生该日志事件的线程名<br><code>%c</code> 输出所属的类目，通常就是所在类的全名<br><code>%l</code>  输出行号<br><code>%m</code> 输出代码中指定的消息<br><code>%n</code> 输出一个回车换行符，Windows平台为 <code>\r\n</code>，Unix平台为 <code>\n</code>，也就是一跳消息占用一行，所以<code>%m%n</code>基本都是一起用<br><code>%p</code> 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL<br>   我们经常会看到[%-5p]这样的用法，就是对%p进行格式化，占用几个字符空间，因为INFO，DEBUG他们有的占用4个有的占用5个，日志看起来不对其，进行一个格式化而已。<br><code>%r</code> 输出自应用启动到输出该log信息耗费的毫秒数<br><code>%c</code> 输出所属的类目，通常就是所在类的全名<br><code>%x</code> 输出对齐  </p>
<h5 id="再看看appender的其他属性"><a href="#再看看appender的其他属性" class="headerlink" title="再看看appender的其他属性"></a>再看看appender的其他属性</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">log4j.appender.FILE.File=D:/logs/log4j.log      --------定义输出文件的位置及文件名</div><div class="line">log4j.appender.FILE.MaxFileSize=1MB             --------定义每个文件的大小，超过这个大小，则新建一个文件，注意单位 MB 或 KB</div><div class="line">log4j.appender.D.Threshold = DEBUG              --------输出DEBUG级别以上的日志</div></pre></td></tr></table></figure>
<h5 id="输出到邮件"><a href="#输出到邮件" class="headerlink" title="输出到邮件"></a>输出到邮件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">log4j.appender.MAIL=org.apache.log4j.net.SMTPAppender（指定输出到邮件）</div><div class="line">log4j.appender.MAIL.Threshold=FATAL</div><div class="line">log4j.appender.MAIL.BufferSize=10</div><div class="line">log4j.appender.MAIL.From=chenyl@hollycrm.com（发件人）</div><div class="line">log4j.appender.MAIL.SMTPHost=mail.hollycrm.com（SMTP服务器）</div><div class="line">log4j.appender.MAIL.Subject=Log4J Message</div><div class="line">log4j.appender.MAIL.To=chenyl@hollycrm.com（收件人）</div><div class="line">log4j.appender.MAIL.layout=org.apache.log4j.PatternLayout（布局）</div><div class="line">log4j.appender.MAIL.layout.ConversionPattern=[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n（格式）</div><div class="line"> </div><div class="line">输出到数据库</div><div class="line">log4j.appender.DATABASE=org.apache.log4j.jdbc.JDBCAppender（指定输出到数据库）</div><div class="line">log4j.appender.DATABASE.URL=jdbc:mysql://localhost:3306/test（指定数据库URL）</div><div class="line">log4j.appender.DATABASE.driver=com.mysql.jdbc.Driver（指定数据库driver）</div><div class="line">log4j.appender.DATABASE.user=root（指定数据库用户）</div><div class="line">log4j.appender.DATABASE.password=root（指定数据库用户密码）</div><div class="line">log4j.appender.DATABASE.sql=INSERT INTO LOG4J (Message) VALUES (&apos;[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n&apos;)（组织SQL语句）</div><div class="line">log4j.appender.DATABASE.layout=org.apache.log4j.PatternLayout（布局）</div><div class="line">log4j.appender.DATABASE.layout.ConversionPattern=[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n（格式）</div></pre></td></tr></table></figure>
<h5 id="我的项目最终配置"><a href="#我的项目最终配置" class="headerlink" title="我的项目最终配置"></a>我的项目最终配置</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">### 设置级别和目的地(这里多个目的地) ###</div><div class="line">#级别为DEBUG</div><div class="line">#目的地为CONSOLE，zhangLog；zhangLog为自定义输出端，可随意命名</div><div class="line">log4j.rootLogger = DEBUG,CONSOLE,zhangLog</div><div class="line">### 这里的com.wuwii是包，也就是在这个包记录日志时，是只记录debug及以上级别的日志</div><div class="line">#### 当然就可以设定特定包打印的级别</div><div class="line">log4j.logger.com.wuwii=DEBUG</div><div class="line"></div><div class="line">#Log4j提供的appender有以下几种：</div><div class="line">#org.apache.log4j.ConsoleAppender（控制台），</div><div class="line">#org.apache.log4j.FileAppender（文件），</div><div class="line">#org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件），</div><div class="line">#org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件），</div><div class="line">#org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）</div><div class="line"></div><div class="line">### 输出到控制台 ###</div><div class="line">log4j.appender.CONSOLE = org.apache.log4j.ConsoleAppender</div><div class="line">log4j.appender.CONSOLE.Target = System.out</div><div class="line">log4j.appender.CONSOLE.layout = org.apache.log4j.PatternLayout</div><div class="line">log4j.appender.CONSOLE.layout.ConversionPattern =  %d&#123;ABSOLUTE&#125; %5p %c&#123;1&#125;:%L - %m%n</div><div class="line"></div><div class="line">### 输出到日志文件 ###</div><div class="line">#写到文件中，并且追加</div><div class="line">log4j.appender.zhangLog = org.apache.log4j.DailyRollingFileAppender</div><div class="line">log4j.appender.zhangLog.File =D\:\\debug.log</div><div class="line">#log4j.appender.zhangLog.File =/var/debug/debug.log</div><div class="line">log4j.appender.zhangLog.Append = true</div><div class="line">## 只输出DEBUG级别以上的日志</div><div class="line">log4j.appender.zhangLog.Threshold = DEBUG</div><div class="line">#&apos;.&apos;yyyy-MM-dd: 设置为每天产生一个新的文件</div><div class="line">#1)’.’yyyy-MM: 每月</div><div class="line">#2)’.’yyyy-ww: 每周</div><div class="line">#3)’.’yyyy-MM-dd: 每天</div><div class="line">#4)’.’yyyy-MM-dd-a: 每天两次</div><div class="line">#5)’.’yyyy-MM-dd-HH: 每小时</div><div class="line">#6)’.’yyyy-MM-dd-HH-mm: 每分钟</div><div class="line">log4j.appender.zhangLog.DatePattern = &apos;.&apos;yyyy-MM-dd</div><div class="line">#当文件达到2kb时，文件会被备份成&quot;debug.txt.1&quot;，新的&quot;log.txt&quot;继续记录log信息</div><div class="line">## 在DailyRollingFileAppender 没这个属性</div><div class="line">log4j.appender.zhangLog.MaxFileSize = 2KB </div><div class="line">#最多建5个文件，当文件个数较多时，后面不再新建文件</div><div class="line">## 在DailyRollingFileAppender 没这个属性</div><div class="line">log4j.appender.zhangLog.MaxBackupIndex = 5</div><div class="line">log4j.appender.zhangLog.layout = org.apache.log4j.PatternLayout</div><div class="line">log4j.appender.zhangLog.layout.ConversionPattern = %-d&#123;yyyy-MM-dd HH:mm:ss&#125; [%t:%r] - [%p] [%c&#123;1&#125;:%L] [%M] %m%n</div><div class="line">#设置子Logger是否继承父Logger的输出源</div><div class="line">#默认情况下子Logger会继承父Logger的appender，也就是说子Logger会在父Logger的appender里输出</div><div class="line">log4j.additivity.zhangLog = false</div></pre></td></tr></table></figure>
<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>测试的类没有启动 web ，默认的是查找 resources 根目录下的  <code>log4j.properties</code> ，没有则找不到。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">package com.wuwii.test;</div><div class="line">import org.apache.log4j.Logger;</div><div class="line"></div><div class="line">public class Log4jTest &#123;</div><div class="line">    public static Logger logger1 = Logger.getLogger(Log4jTest.class);</div><div class="line">    public static void main(String[] args) &#123;</div><div class="line">        //logger1</div><div class="line">        logger1.trace(&quot;他真的很喜欢你 像春雨下得淅淅沥沥，trace&quot;);</div><div class="line">        logger1.debug(&quot;他真的很喜欢你 像夏日聒噪的蝉鸣，debug&quot;);</div><div class="line">        logger1.info(&quot;他真的很想念你 像秋叶落得悄无声息，info&quot;);</div><div class="line">        logger1.warn(&quot;他真的很喜欢你 想冬天的雪沁在心里，warn&quot;);</div><div class="line">        logger1.error(&quot;他真的很喜欢你 像狗本性难移，error&quot;);</div><div class="line">        logger1.fatal(&quot;他真的很喜欢你 所以他可以一直没脸没皮，fatal&quot;);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>运行代码后，我们可以看到控制台打印了：</p>
<p><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171016224024.png" alt="image"></p>
<p>因为我们设置了输入到控制台了，再去查看我们的打印日志文件的位置，也可以看到报错信息，使用的 是<code>org.apache.log4j.DailyRollingFileAppender</code>，并没有 <code>maxBackupIndex</code> 和 <code>maxFileSize</code> 属性，所以上面的配置文件也不正确，需要删掉这两行，</p>
<p><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171016224226.png" alt="image"></p>
<p>使用的是每天生成一个文件，前一天的备份成<code>yyyy-MM-dd</code> 符合。</p>
<p>打开文件看到</p>
<p><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171016224532.png" alt="image"></p>
<p>正确写入，</p>
<p>Log4j的使用及配置就是这样的了。</p>
<p><strong>参考博客</strong> <a rel="external nofollow" target="_blank" href="http://blog.csdn.net/zhengliusu/article/details/44619023">http://blog.csdn.net/zhengliusu/article/details/44619023</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Log4j&lt;/code&gt;是Apache的一个开源项目，通过使用Log4j，我们可以控制日志信息输送的目的地是控制台、文件、GUI组件，甚至是套接口服务器、NT的事件记录器、UNIX Syslog守护进程等；我们也可以控制每一条日志的输出格式；通过定义每一条日志信息的级别，我们能够更加细致地控制日志的生成过程。最令人感兴趣的就是，这些可以通过一个配置文件来灵活地进行配置，而不需要修改应用的代码。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;项目中日志功能十分强大，可以实时监控你的代码的运行情况，并且就像书页一样清晰可见。&lt;br&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://blog.wuwii.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="java" scheme="http://blog.wuwii.com/tags/java/"/>
    
      <category term="Log4j" scheme="http://blog.wuwii.com/tags/Log4j/"/>
    
  </entry>
  
  <entry>
    <title>使用spring-test 结合JUnit完成单元测试</title>
    <link href="http://blog.wuwii.com/spring-test.html"/>
    <id>http://blog.wuwii.com/spring-test.html</id>
    <published>2017-10-16T06:33:03.000Z</published>
    <updated>2017-10-16T09:35:52.581Z</updated>
    
    <content type="html"><![CDATA[<p>Java web项目怎么能少了spring ,当然少不了代码的单元测试，学习一下spring-test 结合 JUnit 完成单元测试，这样做会有很多好处，可以不用写额外一些方法去重复加载 applicationContext ，而且可以事务回滚等特点。下面再详细介绍。<br><a id="more"></a></p>
<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>很多人做单元测试的时候，还要在Before方法中，初始化Spring容器，导致容器被初始化多次。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Before</span>  </div><div class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;  </div><div class="line">      ApplicationContext ctx = <span class="keyword">new</span> FileSystemXmlApplicationContext( <span class="string">"classpath:spring/spring-basic.xml"</span>);  </div><div class="line">      baseDao = (IBaseDao) ctx.getBean(<span class="string">"baseDao"</span>);  </div><div class="line">      assertNotNull(baseDao);  </div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<p>在开发基于Spring的应用时，如果你还直接使用Junit进行单元测试，那你就错过了Spring满汉全席中最重要的一道硬菜。</p>
<p>再说这道菜之前，我们先来讨论下，在基于Spring的javaweb项目中使用Junit直接进行单元测试有什么不足</p>
<h4 id="导致多次Spring容器初始化问题"><a href="#导致多次Spring容器初始化问题" class="headerlink" title="导致多次Spring容器初始化问题"></a>导致多次Spring容器初始化问题</h4><p>根据JUnit测试方法的调用流程，每执行一个测试方法都会创建一个测试用例的实例并调用setUp()方法。由于一般情况下，我们在setUp()方法中初始化Spring容器，这意味着如果测试用例有多少个测试方法，Spring容器就会被重复初始化多次。虽然初始化Spring容器的速度并不会太慢，但由于可能会在Spring容器初始化时执行加载Hibernate映射文件等耗时的操作，如果每执行一个测试方法都必须重复初始化Spring容器，则对测试性能的影响是不容忽视的；<br> /////////使用Spring测试套件，Spring容器只会初始化一次！ </p>
<h4 id="需要使用硬编码方式手工获取Bean"><a href="#需要使用硬编码方式手工获取Bean" class="headerlink" title="需要使用硬编码方式手工获取Bean"></a>需要使用硬编码方式手工获取Bean</h4><p>  在测试用例类中我们需要通过ctx.getBean()方法从Spirng容器中获取需要测试的目标Bean，并且还要进行强制类型转换的造型操作。这种乏味的操作迷漫在测试用例的代码中，让人觉得烦琐不堪； </p>
<p>////////使用Spring测试套件，测试用例类中的属性会被自动填充Spring容器的对应Bean ，无须在手工设置Bean！ </p>
<h4 id="数据库现场容易遭受破坏"><a href="#数据库现场容易遭受破坏" class="headerlink" title="数据库现场容易遭受破坏"></a>数据库现场容易遭受破坏</h4><p>  测试方法对数据库的更改操作会持久化到数据库中。虽然是针对开发数据库进行操作，但如果数据操作的影响是持久的，可能会影响到后面的测试行为。举个例子，用户在测试方法中插入一条ID为1的User记录，第一次运行不会有问题，第二次运行时，就会因为主键冲突而导致测试用例失败。所以应该既能够完成功能逻辑检查，又能够在测试完成后恢复现场，不会留下“后遗症”； </p>
<p>////////使用Spring测试套件，Spring会在你验证后，自动回滚对数据库的操作，保证数据库的现场不被破坏，因此重复测试不会发生问题！ </p>
<h4 id="不方便对数据操作正确性进行检查"><a href="#不方便对数据操作正确性进行检查" class="headerlink" title="不方便对数据操作正确性进行检查"></a>不方便对数据操作正确性进行检查</h4><p>假如我们向登录日志表插入了一条成功登录日志，可是我们却没有对t_login_log表中是否确实添加了一条记录进行检查。一般情况下，我们可能是打开数据库，肉眼观察是否插入了相应的记录，但这严重违背了自动测试的原则。试想在测试包括成千上万个数据操作行为的程序时，如何用肉眼进行检查？ </p>
<p>////////只要你继承Spring的测试套件的用例类，你就可以通过jdbcTemplate在同一事务中访问数据库，查询数据的变化，验证操作的正确性！ </p>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h4 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h4><p>在pom.xml中加入相关依赖 spring-test,  JUnit</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">junit.version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">junit.version</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>4.2.4.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;junit.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure>
<p>需要注意使用前查看两个包相关版本能否兼容使用</p>
<h4 id="创建测试类"><a href="#创建测试类" class="headerlink" title="创建测试类"></a>创建测试类</h4><p>我使用的是<code>JUnitGenerator</code>自动生成的测试文件，后面再加入相关的 加载配置文件的注解，最后的代码是这样的：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">import</span> com.devframe.entity.FarmEntity;</div><div class="line"><span class="keyword">import</span> com.devframe.service.FarmService;</div><div class="line"><span class="keyword">import</span> org.junit.Test;</div><div class="line"><span class="keyword">import</span> org.junit.Before; </div><div class="line"><span class="keyword">import</span> org.junit.After;</div><div class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.test.annotation.Rollback;</div><div class="line"><span class="keyword">import</span> org.springframework.test.context.ContextConfiguration;</div><div class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringJUnit4ClassRunner;</div><div class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</div><div class="line"></div><div class="line"><span class="keyword">import</span> javax.annotation.Resource;</div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"><span class="comment">/** </span></div><div class="line"><span class="comment">* FarmServiceImpl Tester. </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">* <span class="doctag">@author</span> Zhang Kai </span></div><div class="line"><span class="comment">* <span class="doctag">@since</span> &lt;pre&gt;10/16/2017&lt;/pre&gt; </span></div><div class="line"><span class="comment">* <span class="doctag">@version</span> 1.0 </span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="meta">@RunWith</span>(SpringJUnit4ClassRunner.class)</div><div class="line"><span class="meta">@ContextConfiguration</span>(locations = &#123;<span class="string">"classpath:spring/applicationContext-base.xml"</span>&#125;)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FarmServiceImplTest</span> </span>&#123; </div><div class="line"></div><div class="line"><span class="meta">@Resource</span></div><div class="line">FarmService service;</div><div class="line"></div><div class="line"><span class="meta">@Before</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123; </div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="meta">@After</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123; </div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="comment">/** </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">* Method: setBaseDao(FarmDao dao) </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">*/</span> </div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSetBaseDao</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123; </div><div class="line"><span class="comment">//<span class="doctag">TODO:</span> Test goes here... </span></div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="comment">/** </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">* Method: findByOrgids(String pageindex, String pagesize, String where) </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">*/</span> </div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByOrgids</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123; </div><div class="line"><span class="comment">//<span class="doctag">TODO:</span> Test goes here... </span></div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="comment">/** </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">* Method: updateFarm(FarmEntity farmEntity) </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">*/</span> </div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="meta">@Transactional</span></div><div class="line"><span class="meta">@Rollback</span>(<span class="keyword">false</span>)</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdateFarm</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123; </div><div class="line"><span class="comment">//<span class="doctag">TODO:</span> Test goes here...</span></div><div class="line">    String sql = <span class="string">"UPDATE \"AGRI_FARM\" SET \"REMARK\"='备注'"</span>;</div><div class="line">    service.executeUpdate(sql);</div><div class="line">    String sql1 = <span class="string">"SELECT * FROM \"AGRI_FARM\""</span>;</div><div class="line">    List&lt;FarmEntity&gt; list = service.getBySql(sql1);</div><div class="line">    System.out.println(list.get(<span class="number">0</span>).getRemark());</div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="comment">/** </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">* Method: exist(String name) </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">*/</span> </div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testExist</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123; </div><div class="line"><span class="comment">//<span class="doctag">TODO:</span> Test goes here... </span></div><div class="line">&#125; </div><div class="line"></div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>测试结果（表里面只有一条数据，简单写下，平时千万不要这样写，哈哈）</p>
<p><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171016131207.png" alt="image"></p>
<p>证明测试成功了</p>
<p>把rollback改成 true ,默认就是为true<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Resource</span></div><div class="line"><span class="keyword">private</span> FarmDao dao;</div><div class="line"></div><div class="line"><span class="comment">/** </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">* Method: updateFarm(FarmEntity farmEntity) </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">*/</span> </div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="meta">@Transactional</span></div><div class="line"><span class="comment">//@Rollback(true)</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdateFarm</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123; </div><div class="line"><span class="comment">//<span class="doctag">TODO:</span> Test goes here...</span></div><div class="line">    dao.setRemarkValue(<span class="string">"备注44"</span>);</div><div class="line">    String sql1 = <span class="string">"SELECT * FROM \"AGRI_FARM\""</span>;</div><div class="line">    List&lt;FarmEntity&gt; list = service.getBySql(sql1);</div><div class="line">    System.out.println(list.get(<span class="number">0</span>).getRemark());</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>测试结果  </p>
<p><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171016140842.png" alt="image"><br>我update 的值是 “备注44” 查询出来的是 “备注11” ，后来一想这样自己写得有点傻了，其实这个方法写的没有一点用，现在只能证明数据库还没更改，但是事务还没结束嘛，肯定没入库，就不要介意了，就是这个意思了，测试完成看下数据变了没有，可以验证成功。</p>
<p><strong>需要注意</strong>  的是不能使用自己写的事务，不然会覆盖掉spring 容器的Transactional，导致测试的事务不能回滚，直接保存到数据库中的。</p>
<p>之前一直被这个问题卡住了，设置了<code>@Rollback(true)</code>都不能成功回滚事务，睡了一觉才知道，这个<code>executeUpdate</code>方法中自己写了一个事务，<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 删除表中的数据通过条件</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> * <span class="doctag">@param</span> sql：删改命令</span></div><div class="line"><span class="comment"> * <span class="doctag">@return</span> 执行是否成功</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="meta">@Transactional</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">executeUpdate</span><span class="params">(String sql)</span> </span>&#123;</div><div class="line">	EntityManager em = emf.createEntityManager();</div><div class="line">	em.getTransaction().begin();</div><div class="line">	Query query = em.createNativeQuery(sql);</div><div class="line">	<span class="keyword">int</span> count = query.executeUpdate();</div><div class="line">	em.getTransaction().commit();</div><div class="line">	em.close();</div><div class="line">	<span class="keyword">return</span> count &gt; <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>就是这样的。改成自己再Dao层重新写了个测试方法。可以的了。到此结束了。</p>
<p><strong>参考文章</strong> <a rel="external nofollow" target="_blank" href="http://blog.csdn.net/shan9liang/article/details/40452469">http://blog.csdn.net/shan9liang/article/details/40452469</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Java web项目怎么能少了spring ,当然少不了代码的单元测试，学习一下spring-test 结合 JUnit 完成单元测试，这样做会有很多好处，可以不用写额外一些方法去重复加载 applicationContext ，而且可以事务回滚等特点。下面再详细介绍。&lt;br&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://blog.wuwii.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="java" scheme="http://blog.wuwii.com/tags/java/"/>
    
      <category term="JUnit" scheme="http://blog.wuwii.com/tags/JUnit/"/>
    
  </entry>
  
  <entry>
    <title>Maven Scope定义值说明</title>
    <link href="http://blog.wuwii.com/maven-scope.html"/>
    <id>http://blog.wuwii.com/maven-scope.html</id>
    <published>2017-10-16T03:11:03.000Z</published>
    <updated>2017-10-17T01:10:43.909Z</updated>
    
    <content type="html"><![CDATA[<h4 id="maven依赖关系中Scope的作用"><a href="#maven依赖关系中Scope的作用" class="headerlink" title="maven依赖关系中Scope的作用"></a>maven依赖关系中Scope的作用</h4><p><code>Dependency Scope</code> </p>
<p>在POM 4中，<dependency>中还引入了<scope>，它主要管理依赖的部署。目前<scope>可以使用5个值： </scope></scope></dependency></p>
<ul>
<li>compile，缺省值，适用于所有阶段，会随着项目一起发布。 </li>
<li>provided，类似compile，期望JDK、容器或使用者会提供这个依赖。如servlet.jar。 </li>
<li>runtime，只在运行时使用，如JDBC驱动，适用运行和测试阶段。 </li>
<li>test，只在测试时使用，用于编译和运行测试代码。不会随项目发布。 </li>
<li>system，类似provided，需要显式提供包含依赖的jar，Maven不会在Repository中查找它。<a id="more"></a>
</li>
</ul>
<h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><p>依赖范围控制哪些依赖在哪些classpath 中可用，哪些依赖包含在一个应用中。让我们详细看一下每一种范围：</p>
<h5 id="compile-（编译范围）"><a href="#compile-（编译范围）" class="headerlink" title="compile （编译范围）"></a>compile （编译范围）</h5><p>compile是默认的范围；如果没有提供一个范围，那该依赖的范围就是编译范围。编译范围依赖在所有的classpath 中可用，同时它们也会被打包。</p>
<h5 id="provided-（已提供范围）"><a href="#provided-（已提供范围）" class="headerlink" title="provided （已提供范围）"></a>provided （已提供范围）</h5><p>provided 依赖只有在当JDK 或者一个容器已提供该依赖之后才使用。例如，<br>如果你开发了一个web 应用，你可能在编译 classpath 中需要可用的Servlet API 来编译一个servlet，但是你不会想要在打包好的WAR 中包含这个Servlet API；这个Servlet API JAR 由你的应用服务器或者servlet 容器提供。已提供范围的依赖在编译classpath （不是运行时）可用。它们不是传递性的，也不会被打包。</p>
<h5 id="runtime-（运行时范围）"><a href="#runtime-（运行时范围）" class="headerlink" title="runtime （运行时范围）"></a>runtime （运行时范围）</h5><p>runtime 依赖在运行和测试系统的时候需要，但在编译的时候不需要。比如，你可能在编译的时候只需要JDBC API JAR，<br>而只有在运行的时候才需要JDBC<br>驱动实现。</p>
<h5 id="test-（测试范围）"><a href="#test-（测试范围）" class="headerlink" title="test （测试范围）"></a>test （测试范围）</h5><p>test范围依赖 在一般的编译和运行时都不需要，它们只有在测试编译和测试运行阶段可用。</p>
<h5 id="system-（系统范围）"><a href="#system-（系统范围）" class="headerlink" title="system （系统范围）"></a>system （系统范围）</h5><p>system范围依赖与provided 类似，但是你必须显式的提供一个对于本地系统中JAR 文件的路径。<br>这么做是为了允许基于本地对象编译，而这些对象是系统类库的一部分。这样的构件应该是一直可用的，Maven 也不会在仓库中去寻找它。<br>如果你将一个依赖范围设置成系统范围，你必须同时提供一个 systemPath 元素。注意该范围是不推荐使用的（你应该一直尽量去从公共或定制的 Maven 仓库中引用依赖）。</p>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul>
<li>默认的依赖范围是complie</li>
<li>test范围指的是测试范围有效，在编译和打包时都不会使用这个依赖，<scope>为test的jar不会传递依赖项目；</scope></li>
<li>compile范围指的是编译范围有效，在编译和打包时都会讲依赖存储进去；</li>
<li>provided依赖，在编译和测试的过程有效，最后生成var包时不会加入，诸如：servlet——api，因为servlet-api，tomcat等web服务器已经存在了，如果再打包会冲突；</li>
<li>runtime在运行的时候依赖，在编译的时候不依赖；</li>
</ul>
<p><strong>参考博客</strong> <a rel="external nofollow" target="_blank" href="http://blog.csdn.net/ld513508088/article/details/23827945">http://blog.csdn.net/ld513508088/article/details/23827945</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;maven依赖关系中Scope的作用&quot;&gt;&lt;a href=&quot;#maven依赖关系中Scope的作用&quot; class=&quot;headerlink&quot; title=&quot;maven依赖关系中Scope的作用&quot;&gt;&lt;/a&gt;maven依赖关系中Scope的作用&lt;/h4&gt;&lt;p&gt;&lt;code&gt;Dependency Scope&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;在POM 4中，&lt;dependency&gt;中还引入了&lt;scope&gt;，它主要管理依赖的部署。目前&lt;scope&gt;可以使用5个值： &lt;/scope&gt;&lt;/scope&gt;&lt;/dependency&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;compile，缺省值，适用于所有阶段，会随着项目一起发布。 &lt;/li&gt;
&lt;li&gt;provided，类似compile，期望JDK、容器或使用者会提供这个依赖。如servlet.jar。 &lt;/li&gt;
&lt;li&gt;runtime，只在运行时使用，如JDBC驱动，适用运行和测试阶段。 &lt;/li&gt;
&lt;li&gt;test，只在测试时使用，用于编译和运行测试代码。不会随项目发布。 &lt;/li&gt;
&lt;li&gt;system，类似provided，需要显式提供包含依赖的jar，Maven不会在Repository中查找它。
    
    </summary>
    
      <category term="学习笔记" scheme="http://blog.wuwii.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="maven" scheme="http://blog.wuwii.com/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>20171015</title>
    <link href="http://blog.wuwii.com/20171015.html"/>
    <id>http://blog.wuwii.com/20171015.html</id>
    <published>2017-10-15T13:43:03.000Z</published>
    <updated>2017-10-16T00:44:51.482Z</updated>
    
    <content type="html"><![CDATA[<p>每次看到你发的那些难过的句子，</p>
<p>我也感觉心快要化了，</p>
<p>你曾经说过，</p>
<p>不谈恋爱了就不会有烦恼了，</p>
<p>那现在我真的不希望你谈恋爱了，<br>幸福真是个大鬼头，<br>我从没有拥有过，<br>也都对它失望了。</p>
<p>姑娘，你一定要好好照顾自己，</p>
<p>我在想好的女生都是被这样被逼的不想谈恋爱了吗，</p>
<p>在这段时间里，曾经天真活泼的你，瞬间就变得忧郁，有脾气了， 可能很多人认为你变了，不认识了吧。</p>
<p>虽然了解的你不多，但是我想你根本没变吧，只是善于伪装吧，伪装得太好，让别人看不出伤疤，看不到疼痛。</p>
<p>姑娘，真的没必要不要这样了，你说 心比长相好，懂比爱重要。我想一个对的人最起码不会让身边得人这么的难受，我想我虽然一直抱有幻想，但我可能也不是你生命中那个对的人，因为，我也伤害过你，现在留下的只有伤口和已经上锁的心。你这么优秀，没有什么错过的青春，错过的爱情，只是没遇到对的，总有一天，你可以等到那个对的人，宠着你的人，不让你难过的人，愿生活有诗，有梦，有远方，还有一个懂你、爱你的可心人。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;每次看到你发的那些难过的句子，&lt;/p&gt;
&lt;p&gt;我也感觉心快要化了，&lt;/p&gt;
&lt;p&gt;你曾经说过，&lt;/p&gt;
&lt;p&gt;不谈恋爱了就不会有烦恼了，&lt;/p&gt;
&lt;p&gt;那现在我真的不希望你谈恋爱了，&lt;br&gt;幸福真是个大鬼头，&lt;br&gt;我从没有拥有过，&lt;br&gt;也都对它失望了。&lt;/p&gt;
&lt;p&gt;姑
    
    </summary>
    
      <category term="碎碎念" scheme="http://blog.wuwii.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="心情" scheme="http://blog.wuwii.com/tags/%E5%BF%83%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>Intellij使用JUnitGenerator V2.0自动生成单元测试代码</title>
    <link href="http://blog.wuwii.com/junitgenerator.html"/>
    <id>http://blog.wuwii.com/junitgenerator.html</id>
    <published>2017-10-15T11:19:03.000Z</published>
    <updated>2017-10-16T00:44:51.451Z</updated>
    
    <content type="html"><![CDATA[<p>单元测试平时开发的时候是大有打交道了，使用Intellij后，发现有这个自动生成Junit 4 单元测试代码的插件，就是要说的 <code>JUnitGenerator</code>。<a id="more"></a></p>
<h4 id="安装工具"><a href="#安装工具" class="headerlink" title="安装工具"></a>安装工具</h4><p>首先我的Intellij 版本是201702</p>
<p>settings -&gt; 搜索 JUnitGenerator 下载V2.0版本，安装插件，重启Intellij</p>
<h4 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h4><p>安装完插件，我们就可以进行自动生成单元测试代码了。<br>在要测试的类的页面，使用快捷键 <code>Alt + Insert</code> ，安装了JUnitGenerator 插件就会出现这个<code>JUnit Test</code> 选项，我们选择<code>Junit 4</code></p>
<p><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171015170801.png" alt="image"></p>
<p>这个时候虽然能生成测试代码，但是你会发现，它生成的位置不是我们需要的，没有生成到<code>test source</code> 文件夹下，所以需要设置下它的生成目录，</p>
<p>打开首先我的Intellij的 settings -&gt; Other Settings -&gt; 选第一个。<br><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171015171518.png" alt="image"><br>其中 Output Path 是设置我们自动生成的测试文件的位置，需要重新设置下到<br><code>${SOURCEPATH}/../../test/java/${PACKAGE}/${FILENAME}</code></p>
<p>然后就是最后的日期格式乱码，点开JUnit 4 选项卡，将<code>date</code> 改成 <code>today</code>，里面是模板，可以根据自己的需求自己改，毕竟，测试代码的命名就没那么严格了。</p>
<h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><p>我们使用的是Junit 4 的，肯定得先引入Junit 的依赖包，在pom.xml中加入它得依赖：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>不然生成出来的代码会报错的，找不到Jar包。。</p>
<p>改了上面的，应该就没什么问题。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;单元测试平时开发的时候是大有打交道了，使用Intellij后，发现有这个自动生成Junit 4 单元测试代码的插件，就是要说的 &lt;code&gt;JUnitGenerator&lt;/code&gt;。
    
    </summary>
    
      <category term="学习笔记" scheme="http://blog.wuwii.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Intellij" scheme="http://blog.wuwii.com/tags/Intellij/"/>
    
      <category term="JUnitGenerator" scheme="http://blog.wuwii.com/tags/JUnitGenerator/"/>
    
  </entry>
  
  <entry>
    <title>使用Intellij 打包maven 项目，忽略单元测试代码</title>
    <link href="http://blog.wuwii.com/install-skip-test.html"/>
    <id>http://blog.wuwii.com/install-skip-test.html</id>
    <published>2017-10-15T07:40:03.000Z</published>
    <updated>2017-10-16T00:44:51.451Z</updated>
    
    <content type="html"><![CDATA[<p>使用<code>Eclipse</code> 的maven 打包部署项目，以前都是直接直接勾选 <code>Skip Tests</code> <a id="more"></a></p>
<p><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171015152112.png" alt="image"></p>
<p><del>使用好像 Intellij 没有这个选项</del>，只能使用maven 的命令 来进行这个操作，可以在项目的根目录直接<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mvn install -DskipTests</div></pre></td></tr></table></figure></p>
<p>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mvn install -Dmaven.test.skip=true</div></pre></td></tr></table></figure></p>
<p>或者直接在 Intellij 中Install 的时候 带上参数，点开 Intellij中右侧 的 MAVEN PROJECT -&gt; Lifecycle -&gt; install -&gt;右键选择 Create… -&gt; 在 install 后面加上参数 <code>-DskipTests</code></p>
<p><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171015153116.png" alt="image"></p>
<p>再去执行</p>
<p><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171015153608.png" alt="image"></p>
<p>SUCCESS!再去看看项目，单元测试代码没有打包。</p>
<hr>
<p>更新，发现了Intellij，有 Skip Tests 选项<br><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171015155149.png" alt="image"></p>
<hr>
<p>上面的小选项卡里的功能以前并没有注意到，仔细看了看，主要的还是跟Eclipse maven相似，只是源码可以自动下载，更强大了。。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用&lt;code&gt;Eclipse&lt;/code&gt; 的maven 打包部署项目，以前都是直接直接勾选 &lt;code&gt;Skip Tests&lt;/code&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://blog.wuwii.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="maven" scheme="http://blog.wuwii.com/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>他真的很喜欢你</title>
    <link href="http://blog.wuwii.com/really-love.html"/>
    <id>http://blog.wuwii.com/really-love.html</id>
    <published>2017-10-14T15:30:03.000Z</published>
    <updated>2017-10-16T00:44:51.482Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>他真的很喜欢你，认真且怂，从一而终。</p>
</blockquote>
<p><img src="https://i.loli.net/2017/10/15/59e238a08a631.jpg" alt="image"></p>
<a id="more"></a>
<p>“何谓孤寂？”<br>“清风，艳日，无笑意。”<br>“可否具体？”<br>“左拥，右抱，无情欲。”<br>“可否再具体？”<br>“不得你。”</p>
<p>“何为思念？”<br>“日月，星辰，旷野雨落。”<br>“可否具体？”<br>“山川，江流，烟袅湖泊。”<br>“可否再具体？”<br>“万物是你，无可躲。</p>
<p>“何为无救？”<br>“良药、妙方，无可医。”<br>“可否具体？”<br>“扁鹊、华佗，俱无策。”<br>“可否再具体？”<br>“念你成疾。”</p>
<p>“何谓求索？”<br>“落霞，朝阳，七千里。”<br>“可否具体？”<br>“夏雨，冬雪，九万顷。”<br>“可否再具体？”<br>“追寻你。”</p>
<p>“何谓伴侣？”<br>“柴米，油盐，木栅栏。”<br>“可否具体？”<br>“粗茶，淡饭，执子手。”<br>“可否再具体？”<br>“和你。”</p>
<p>“何谓漂泊？”<br>“飞蓬，飘萍，无根底。”<br>“可否具体？”<br>“只鹤，孤雁，寒塘独下迟。”<br>“可否再具体？”<br>“南游，东出，客愁，旅思，离乡千万里。”<br>“可否更具体？”<br>“春行，秋度，杳杳无归期。”<br>“仍是不解。”<br>“浪迹云游，何处寻你。”</p>
<p>“何谓难得？”<br>“落虹，繁星，山间风。”<br>“可否具体？”<br>“雾凇，凤翎，黄粱梦。”<br>“可否再具体？”<br>“伴你而生，有始无终。”</p>
<p>“何谓欢喜？”<br>“清风，晓月，伴星辰。”<br>“可否具体？”<br>“一见，再见，已倾心。”<br>“可否再具体？”<br>“余光皆是你。”</p>
<p>“何谓欣悦？”<br>“四海，三山，两心。”<br>“可否具体？”<br>“两人，三餐，四季。”<br>“可否再具体？”<br>“与你。”</p>
<p>“何谓愁？”<br>“江湖，灯市，檐下躲雨。”<br>“可否具体？”<br>“孤舟，青衫，长亭垂柳。”<br>“可否再具体？”<br>“所见是你，无可避。”</p>
<p>“何谓美人？”<br>“纤手，漾眸，柔腰肢。”<br>“可否具体？”<br>“橘子香气。”<br>“可否再具体？”<br>“汝。”</p>
<p>“何谓忧？”<br>“无笑，无乐，郁积于心。”<br>“可否具体？”<br>“思你，念你，不得见你。”<br>“可否再具体？”<br>“你已无意。”</p>
<p>“何谓空寂？”<br>“抬头，艳阳，流云里。”<br>“可否具体？”<br>“飘摇，流浪，无归期。”<br>“可否再具体？”<br>“没等到你。”  </p>
<p>“何为习性？”<br>“清茶，浊酒，和音伴。”<br>“可否具体？”<br>“跋山，涉水，曲随行。”<br>“可否再具体？”<br>“予你。”  </p>
<p>“何为等待？”<br>“不知几分红颜悴，多少相思碎。”<br>“可否详言？”<br>“花开花落两不知，惟介音无回。”<br>“可否甚解？”<br>“一叶一追寻，待一人与归。”    </p>
<p>“何为距离？”<br>“白云，大地，止相望。”<br>“可否具体？”<br>“树木，微风，终轻拂。”<br>“可否再具体？”<br>“你与我。”  </p>
<p>“何为思兮？”<br>“惦念，不语，乱了心。”<br>“可否具体？”<br>“失神差可拟。”<br>“可否再具体？”<br>“哪里都是你。”  </p>
<p>“何谓心安？”<br>“同月沽酌，千诗可叙”<br>“可否具体？”<br>“红色屋顶，白色窗棂。”<br>“可否再具体？”<br>“身边有你。”   </p>
<p>“何为心寒？”<br>“白雪、冷雨，冻寒骨。”<br>“可否具体？”<br>“深夜、凌晨，无可分。”<br>“可否再具体？”<br>“你，已弃。”  </p>
<p>“何为归途？”<br>“夜鸟 荒路 漫漫无期。”<br>“可否具体 ？”<br>“碎言 华灯 喧嚣无际。”<br>“可否再具体？”<br>“一诗 一酌 不觉千里。”<br>“仍是不解。”<br>“与你，四处为安。”  </p>
<p>“何谓笑意？”<br>“单车，白衣，晴空万里”<br>“可否具体？”<br>“天台，茉莉，七月初七”<br>“可否再具体？”<br>“花裙，背影，安然静谧”<br>“可否更具体？”<br>“一看到你”  </p>
<p>“何谓卑微？”<br>“清水，野草，无艳色。”<br>“可否具体？”<br>“爱情，亲情，无回报。”<br>“可否再具体？”<br>“入尘埃。”  </p>
<p>“何为知己？”<br>“相视，不语，已了然”<br>“可否具体？”<br>“浮华万物皆可抛”<br>“可否再具体？”<br>“愿得你”  </p>
<hr>
<p><strong>内容来自网易云《浮生》下面的热门的评论</strong></p>
<p>侵删</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;他真的很喜欢你，认真且怂，从一而终。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2017/10/15/59e238a08a631.jpg&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="那些很美的句子" scheme="http://blog.wuwii.com/categories/%E9%82%A3%E4%BA%9B%E5%BE%88%E7%BE%8E%E7%9A%84%E5%8F%A5%E5%AD%90/"/>
    
    
      <category term="他真的很喜欢你" scheme="http://blog.wuwii.com/tags/%E4%BB%96%E7%9C%9F%E7%9A%84%E5%BE%88%E5%96%9C%E6%AC%A2%E4%BD%A0/"/>
    
  </entry>
  
  <entry>
    <title>Java客户端使用Jedis操作Redis</title>
    <link href="http://blog.wuwii.com/catch-jedis.html"/>
    <id>http://blog.wuwii.com/catch-jedis.html</id>
    <published>2017-10-13T07:38:03.000Z</published>
    <updated>2017-10-16T00:44:51.435Z</updated>
    
    <content type="html"><![CDATA[<h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p>搭建好redis ，这是我们需要在java中操作它，在这里我使用<code>jedis</code>  ，这次主要使用redis，存储信息，到时间超时，并且自动删除超时信息，累计数据List，达到一定数量，入库，删除，所以这个时候为了数据安全，删除完，才去写入新数据，需要写一个简单的分布式锁。</p>
<a id="more"></a>
<h3 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h3><h4 id="准备，导入Jar包"><a href="#准备，导入Jar包" class="headerlink" title="准备，导入Jar包"></a>准备，导入Jar包</h4><p>首先在<code>pox.xml</code>加入所需要的Jar 包：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">jedis.version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">jedis.version</span>&gt;</span></div><div class="line"></div><div class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">	    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>redis.clients<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">	    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jedis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">	    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jedis.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="编写连接工具类"><a href="#编写连接工具类" class="headerlink" title="编写连接工具类"></a>编写连接工具类</h4><p>首先编写工具类去连接redis：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</div><div class="line"><span class="keyword">import</span> redis.clients.jedis.JedisPool;</div><div class="line"><span class="keyword">import</span> redis.clients.jedis.JedisPoolConfig;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.Serializable;</div><div class="line"></div><div class="line"><span class="comment">/** </span></div><div class="line"><span class="comment">* <span class="doctag">@ClassName</span>: RedisUtil </span></div><div class="line"><span class="comment">* <span class="doctag">@Description</span>: redis工具类 </span></div><div class="line"><span class="comment">* <span class="doctag">@author</span> zhangkai </span></div><div class="line"><span class="comment">* <span class="doctag">@date</span> 2017年9月26日 下午3:20:29 </span></div><div class="line"><span class="comment">*  </span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisUtil</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span>&#123;</div><div class="line">    </div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">1149678082569464779L</span>;</div><div class="line"></div><div class="line">    <span class="comment">//Redis服务器IP</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span>  String addr;</div><div class="line">    </div><div class="line">    <span class="comment">//Redis的端口号</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> port;</div><div class="line">    </div><div class="line">    <span class="comment">//访问密码</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String auth;</div><div class="line">    </div><div class="line">    <span class="comment">//可用连接实例的最大数目，默认值为8；</span></div><div class="line">    <span class="comment">//如果赋值为-1，则表示不限制；如果pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)。</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> maxActive;</div><div class="line">    </div><div class="line">    <span class="comment">//控制一个pool最多有多少个状态为idle(空闲的)的jedis实例，默认值也是8。</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> maxIdle;</div><div class="line">    </div><div class="line">    <span class="comment">//等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时。如果超过等待时间，则直接抛出JedisConnectionException；</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> maxWait;</div><div class="line">    </div><div class="line">    <span class="meta">@SuppressWarnings</span>(<span class="string">"unused"</span>)</div><div class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> timeOut;</div><div class="line">    </div><div class="line">    <span class="comment">//在borrow一个jedis实例时，是否提前进行validate操作；如果为true，则得到的jedis实例均是可用的；</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> testOnBorrow;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Jedis jedis;<span class="comment">//非切片额客户端连接</span></div><div class="line">    </div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JedisPool jedisPool;<span class="comment">//非切片连接池</span></div><div class="line">    </div><div class="line">   <span class="comment">// public static ShardedJedis shardedJedis;//切片额客户端连接</span></div><div class="line">    </div><div class="line">   <span class="comment">// public static ShardedJedisPool shardedJedisPool;//切片连接池</span></div><div class="line">    </div><div class="line">    <span class="keyword">static</span> &#123;</div><div class="line">    	addr = PropertyUtil.get(<span class="string">"redis.addr"</span>);</div><div class="line">    	auth = PropertyUtil.get(<span class="string">"redis.auth"</span>);</div><div class="line">    	port = Integer.parseInt(PropertyUtil.get(<span class="string">"redis.port"</span>));</div><div class="line">    	maxIdle = Integer.parseInt(PropertyUtil.get(<span class="string">"redis.maxIdle"</span>));</div><div class="line">    	maxActive = Integer.parseInt(PropertyUtil.get(<span class="string">"redis.maxActive"</span>));</div><div class="line">    	maxWait = Integer.parseInt(PropertyUtil.get(<span class="string">"redis.maxWait"</span>));</div><div class="line">    	timeOut = Integer.parseInt(PropertyUtil.get(<span class="string">"redis.timeOut"</span>));</div><div class="line">    	testOnBorrow = PropertyUtil.get(<span class="string">"redis.testOnBorrow"</span>).equals(<span class="string">"true"</span>) ? <span class="keyword">true</span> :<span class="keyword">false</span>;</div><div class="line">    	initialPool();</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RedisUtil</span><span class="params">()</span></span>&#123;</div><div class="line">    	initialPool(); </div><div class="line">        jedis = getJedis();</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 初始化非切片池</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">initialPool</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">// 池基本配置 </span></div><div class="line">        JedisPoolConfig config = <span class="keyword">new</span> JedisPoolConfig();</div><div class="line">        config.setMaxTotal(maxActive); </div><div class="line">        config.setMaxIdle(maxIdle); </div><div class="line">        config.setMaxWaitMillis(maxWait); </div><div class="line">        config.setTestOnBorrow(testOnBorrow);</div><div class="line">        jedisPool = <span class="keyword">new</span> JedisPool(config, addr, port);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 获取Jedis实例</span></div><div class="line"><span class="comment">     * <span class="doctag">@return</span></span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">static</span> Jedis <span class="title">getJedis</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">if</span> (jedisPool != <span class="keyword">null</span>) &#123;</div><div class="line">               jedis = jedisPool.getResource();</div><div class="line">               jedis.auth(auth);<span class="comment">//认证</span></div><div class="line">               <span class="keyword">return</span> jedis;</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            Log.error(e);</div><div class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 释放jedis资源</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> jedis</span></div><div class="line"><span class="comment">     */</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">returnResource</span><span class="params">(<span class="keyword">final</span> Jedis jedis)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (jedis != <span class="keyword">null</span>) &#123;</div><div class="line">        	jedis.close();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>连接上redis我们就可以使用jedis操作我们的redis，直接写业务</p>
<h5 id="登陆，保存会话"><a href="#登陆，保存会话" class="headerlink" title="登陆，保存会话"></a>登陆，保存会话</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">login</span><span class="params">(String ucid)</span> </span>&#123;</div><div class="line">        Jedis jedisindex = getJedis();</div><div class="line">        String key = <span class="string">"login"</span> + ucid;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="comment">//设置登陆时常保存到30m，每次操作都会过来重新存下，重新刷新时间;</span></div><div class="line">            jedisindex.expire(key,  <span class="number">1800</span>);</div><div class="line">            </div><div class="line">            <span class="comment">//TODO code </span></div><div class="line">            </div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            LOGGER.error(e.getMessage(), e);</div><div class="line">        &#125; <span class="keyword">finally</span> &#123;</div><div class="line">            returnResource(jedisindex);</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h5 id="使用redis完成分布式锁"><a href="#使用redis完成分布式锁" class="headerlink" title="使用redis完成分布式锁"></a>使用redis完成分布式锁</h5><p>当一个用户满60条数据，进行数据入库，使用分布式锁<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment">  * xxxxxxx</span></div><div class="line"><span class="comment">  *</span></div><div class="line"><span class="comment">  * <span class="doctag">@param</span> key</span></div><div class="line"><span class="comment">  * <span class="doctag">@param</span> track</span></div><div class="line"><span class="comment">  * 满到60个 TIDD add</span></div><div class="line"><span class="comment">  */</span></div><div class="line"> <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addTrack</span><span class="params">(String ucid, String track, Jedis jedisindex)</span> </span>&#123;</div><div class="line">     <span class="keyword">try</span> &#123;</div><div class="line">         Boolean lockFlag = <span class="keyword">false</span>;</div><div class="line">         <span class="keyword">while</span> (!lockFlag) &#123;</div><div class="line">             lockFlag = lock(<span class="string">"lock"</span> + ucid, jedisindex); <span class="comment">//上锁</span></div><div class="line">             jedisindex.lpush(ucid, track); <span class="comment">//添加数据</span></div><div class="line">             unlock(<span class="string">"lock"</span> + ucid, jedisindex); <span class="comment">//释放锁</span></div><div class="line">         &#125;</div><div class="line">         <span class="keyword">long</span> len = jedisindex.llen(ucid);</div><div class="line">         lockFlag = <span class="keyword">false</span>;</div><div class="line">         <span class="keyword">if</span> (len &gt;= <span class="number">60</span>) &#123;</div><div class="line">             <span class="keyword">while</span> (!lockFlag) &#123;</div><div class="line">                 lockFlag = lock(<span class="string">"lock"</span> + ucid, jedisindex); <span class="comment">//上锁</span></div><div class="line">                  <span class="comment">//满了60条数据 去数据入库，并且删除redis中的value,</span></div><div class="line">               <span class="comment">// 我的下个业务 addHistoryTrack(ucid, jedisindex.lrange(ucid, 0, 59), jedisindex);</span></div><div class="line">                 unlock(<span class="string">"lock"</span> + ucid, jedisindex); <span class="comment">//释放锁</span></div><div class="line">             &#125;</div><div class="line">         &#125;</div><div class="line">     &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">         LOGGER.error(e.getMessage(), e);</div><div class="line">     &#125;</div><div class="line"> &#125;</div><div class="line"> </div><div class="line"> <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> LOCK_TIMEOUT = <span class="number">1</span>; <span class="comment">//加锁超时时间 单位秒  意味着加锁期间内执行完操作 如果未完成会有并发现象</span></div><div class="line"> </div><div class="line"> </div><div class="line">  <span class="comment">/**</span></div><div class="line"><span class="comment">  * 上锁</span></div><div class="line"><span class="comment">  */</span></div><div class="line"> <span class="meta">@Override</span></div><div class="line"> <span class="function"><span class="keyword">public</span> Boolean <span class="title">lock</span><span class="params">(String lock, Jedis jedisindex)</span> </span>&#123;</div><div class="line">     <span class="comment">// 1. 通过SETNX试图获取一个lock</span></div><div class="line">     <span class="keyword">boolean</span> success = <span class="keyword">false</span>;</div><div class="line">     <span class="keyword">long</span> value = System.currentTimeMillis() + LOCK_TIMEOUT * <span class="number">1000</span> + <span class="number">1</span>;</div><div class="line">     <span class="keyword">long</span> acquired = jedis.setnx(lock, String.valueOf(value));</div><div class="line">     jedisindex.expire(lock, LOCK_TIMEOUT);<span class="comment">//设置1秒超时 ,到时候自动释放锁</span></div><div class="line">     <span class="comment">//SETNX成功，则成功获取一个锁  </span></div><div class="line">     <span class="keyword">if</span> (acquired == <span class="number">1</span>) success = <span class="keyword">true</span>;</div><div class="line">     <span class="keyword">return</span> success;</div><div class="line"> &#125;</div><div class="line"></div><div class="line"> <span class="comment">/**</span></div><div class="line"><span class="comment">  * 解锁</span></div><div class="line"><span class="comment">  */</span></div><div class="line"> <span class="meta">@Override</span></div><div class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">unlock</span><span class="params">(String lock, Jedis jedisindex)</span> </span>&#123;</div><div class="line">     jedisindex.del(lock);</div><div class="line"> &#125;</div></pre></td></tr></table></figure></p>
<h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><ol>
<li>使用jedis操作redis，使用的是spring 框架，可以使用<code>Spring Data Redis</code> ,更符合java spring框架依赖注入的特性，使用上大同小异。</li>
<li>使用多线程操作redis 不要把 jedis 存入到<code>ThreadLocal</code> 或各种全局变量中， 可能出现冲突。需要重新从<code>jedisPool</code>获取<code>jedis</code>，然后用完关闭连接就行。</li>
</ol>
<h4 id="学习："><a href="#学习：" class="headerlink" title="学习："></a>学习：</h4><ol>
<li>以后了解对jedis关于事务、管道和分布式的使用。</li>
</ol>
<h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div></pre></td><td class="code"><pre><div class="line">1）连接操作命令</div><div class="line">   quit：关闭连接（connection）</div><div class="line">   auth：简单密码认证</div><div class="line">   help cmd： 查看cmd帮助，例如：help quit</div><div class="line">   </div><div class="line">   2）持久化</div><div class="line">   save：将数据同步保存到磁盘</div><div class="line">   bgsave：将数据异步保存到磁盘</div><div class="line">   lastsave：返回上次成功将数据保存到磁盘的Unix时戳</div><div class="line">   shundown：将数据同步保存到磁盘，然后关闭服务</div><div class="line">   </div><div class="line">   3）远程服务控制</div><div class="line">   info：提供服务器的信息和统计</div><div class="line">   monitor：实时转储收到的请求</div><div class="line">   slaveof：改变复制策略设置</div><div class="line">   config：在运行时配置Redis服务器</div><div class="line">   </div><div class="line">   4）对value操作的命令</div><div class="line">   exists(key)：确认一个key是否存在</div><div class="line">   del(key)：删除一个key</div><div class="line">   type(key)：返回值的类型</div><div class="line">   keys(pattern)：返回满足给定pattern的所有key</div><div class="line">   randomkey：随机返回key空间的一个</div><div class="line">   keyrename(oldname, newname)：重命名key</div><div class="line">   dbsize：返回当前数据库中key的数目</div><div class="line">   expire：设定一个key的活动时间（s）</div><div class="line">   ttl：获得一个key的活动时间</div><div class="line">   select(index)：按索引查询</div><div class="line">   move(key, dbindex)：移动当前数据库中的key到dbindex数据库</div><div class="line">   flushdb：删除当前选择数据库中的所有key</div><div class="line">   flushall：删除所有数据库中的所有key</div><div class="line">   </div><div class="line">   5）String</div><div class="line">   set(key, value)：给数据库中名称为key的string赋予值value</div><div class="line">   get(key)：返回数据库中名称为key的string的value</div><div class="line">   getset(key, value)：给名称为key的string赋予上一次的value</div><div class="line">   mget(key1, key2,…, key N)：返回库中多个string的value</div><div class="line">   setnx(key, value)：添加string，名称为key，值为value</div><div class="line">   setex(key, time, value)：向库中添加string，设定过期时间time</div><div class="line">   mset(key N, value N)：批量设置多个string的值</div><div class="line">   msetnx(key N, value N)：如果所有名称为key i的string都不存在</div><div class="line">   incr(key)：名称为key的string增1操作</div><div class="line">   incrby(key, integer)：名称为key的string增加integer</div><div class="line">   decr(key)：名称为key的string减1操作</div><div class="line">   decrby(key, integer)：名称为key的string减少integer</div><div class="line">   append(key, value)：名称为key的string的值附加value</div><div class="line">   substr(key, start, end)：返回名称为key的string的value的子串</div><div class="line">   </div><div class="line">   6）List </div><div class="line">   rpush(key, value)：在名称为key的list尾添加一个值为value的元素</div><div class="line">   lpush(key, value)：在名称为key的list头添加一个值为value的 元素</div><div class="line">   llen(key)：返回名称为key的list的长度</div><div class="line">   lrange(key, start, end)：返回名称为key的list中start至end之间的元素</div><div class="line">   ltrim(key, start, end)：截取名称为key的list</div><div class="line">   lindex(key, index)：返回名称为key的list中index位置的元素</div><div class="line">   lset(key, index, value)：给名称为key的list中index位置的元素赋值</div><div class="line">   lrem(key, count, value)：删除count个key的list中值为value的元素</div><div class="line">   lpop(key)：返回并删除名称为key的list中的首元素</div><div class="line">   rpop(key)：返回并删除名称为key的list中的尾元素</div><div class="line">   blpop(key1, key2,… key N, timeout)：lpop命令的block版本。</div><div class="line">   brpop(key1, key2,… key N, timeout)：rpop的block版本。</div><div class="line">   rpoplpush(srckey, dstkey)：返回并删除名称为srckey的list的尾元素，并将该元素添加到名称为dstkey的list的头部</div><div class="line">   </div><div class="line">   7）Set</div><div class="line">   sadd(key, member)：向名称为key的set中添加元素member</div><div class="line">   srem(key, member) ：删除名称为key的set中的元素member</div><div class="line">   spop(key) ：随机返回并删除名称为key的set中一个元素</div><div class="line">   smove(srckey, dstkey, member) ：移到集合元素</div><div class="line">   scard(key) ：返回名称为key的set的基数</div><div class="line">   sismember(key, member) ：member是否是名称为key的set的元素</div><div class="line">   sinter(key1, key2,…key N) ：求交集</div><div class="line">   sinterstore(dstkey, (keys)) ：求交集并将交集保存到dstkey的集合</div><div class="line">   sunion(key1, (keys)) ：求并集</div><div class="line">   sunionstore(dstkey, (keys)) ：求并集并将并集保存到dstkey的集合</div><div class="line">   sdiff(key1, (keys)) ：求差集</div><div class="line">   sdiffstore(dstkey, (keys)) ：求差集并将差集保存到dstkey的集合</div><div class="line">   smembers(key) ：返回名称为key的set的所有元素</div><div class="line">   srandmember(key) ：随机返回名称为key的set的一个元素</div><div class="line">   </div><div class="line">   8）Hash</div><div class="line">   hset(key, field, value)：向名称为key的hash中添加元素field</div><div class="line">   hget(key, field)：返回名称为key的hash中field对应的value</div><div class="line">   hmget(key, (fields))：返回名称为key的hash中field i对应的value</div><div class="line">   hmset(key, (fields))：向名称为key的hash中添加元素field </div><div class="line">   hincrby(key, field, integer)：将名称为key的hash中field的value增加integer</div><div class="line">   hexists(key, field)：名称为key的hash中是否存在键为field的域</div><div class="line">   hdel(key, field)：删除名称为key的hash中键为field的域</div><div class="line">   hlen(key)：返回名称为key的hash中元素个数</div><div class="line">   hkeys(key)：返回名称为key的hash中所有键</div><div class="line">   hvals(key)：返回名称为key的hash中所有键对应的value</div><div class="line">   hgetall(key)：返回名称为key的hash中所有的键（field）及其对应的value</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h3&gt;&lt;p&gt;搭建好redis ，这是我们需要在java中操作它，在这里我使用&lt;code&gt;jedis&lt;/code&gt;  ，这次主要使用redis，存储信息，到时间超时，并且自动删除超时信息，累计数据List，达到一定数量，入库，删除，所以这个时候为了数据安全，删除完，才去写入新数据，需要写一个简单的分布式锁。&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://blog.wuwii.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="java" scheme="http://blog.wuwii.com/tags/java/"/>
    
      <category term="redis" scheme="http://blog.wuwii.com/tags/redis/"/>
    
      <category term="jedis" scheme="http://blog.wuwii.com/tags/jedis/"/>
    
  </entry>
  
  <entry>
    <title>关于升级有道云笔记v6.0.0.1</title>
    <link href="http://blog.wuwii.com/youdao-note.html"/>
    <id>http://blog.wuwii.com/youdao-note.html</id>
    <published>2017-10-13T06:08:03.000Z</published>
    <updated>2017-10-13T06:48:11.280Z</updated>
    
    <content type="html"><![CDATA[<p>升级后有道云笔记确实有很大的改变，界面变得大方简洁了许多，但是左下角的广告还是在，免费版就不要介意了，网上又办法去掉它。反应速度快上不少，而且最爱的markdown语法看起来反应又快了，以前输入上了百行，拖动就有点卡了，难受得很。细心的人估计发现了，右下角多了一个图标，对的新版本多了三种模式：三栏模式、精简模式和编辑模式。试了一下，很优秀的一个功能。</p>
<p><img src="https://i.loli.net/2017/10/13/59e0609fa7fe2.png" alt="image"></p>
<a id="more"></a>
<p>当然更新是好事，但是我出现了个奇怪的问题，单击导航栏的目录，竟然不能预览文章。</p>
<p><img src="https://i.loli.net/2017/10/13/59e0601f2a9db.png" alt="image"></p>
<p>就是直接说无预览，非要我进入编辑模式，才能看到文章。</p>
<p>无奈，网上搜也没搜到，只好去撩客服了。</p>
<p><img src="https://ooo.0o0.ooo/2017/10/13/59e060bb5c8ae.png" alt="image"></p>
<p>清空就好了，重新登陆账户信息，浪费了不少时间了。。希望有道云笔记能越做越好吧。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;升级后有道云笔记确实有很大的改变，界面变得大方简洁了许多，但是左下角的广告还是在，免费版就不要介意了，网上又办法去掉它。反应速度快上不少，而且最爱的markdown语法看起来反应又快了，以前输入上了百行，拖动就有点卡了，难受得很。细心的人估计发现了，右下角多了一个图标，对的新版本多了三种模式：三栏模式、精简模式和编辑模式。试了一下，很优秀的一个功能。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2017/10/13/59e0609fa7fe2.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://blog.wuwii.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Youdao Note" scheme="http://blog.wuwii.com/tags/Youdao-Note/"/>
    
  </entry>
  
  <entry>
    <title>CENTOS 7 中报错 java.net.ConnectException Connection refused</title>
    <link href="http://blog.wuwii.com/tomcat-error01.html"/>
    <id>http://blog.wuwii.com/tomcat-error01.html</id>
    <published>2017-10-12T12:08:03.000Z</published>
    <updated>2017-10-13T00:54:55.276Z</updated>
    
    <content type="html"><![CDATA[<p>再<code>centos7</code> 中正常启动<code>tomcat 9</code>，但是发现项目都不能正常访问，去关闭tomcat 却报错，如下：<a id="more"></a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># /opt/apache-tomcat-9.0.0.M22/bin/shutdown.sh </span></div><div class="line">Using CATALINA_BASE:   /opt/apache-tomcat-9.0.0.M22</div><div class="line">Using CATALINA_HOME:   /opt/apache-tomcat-9.0.0.M22</div><div class="line">Using CATALINA_TMPDIR: /opt/apache-tomcat-9.0.0.M22/temp</div><div class="line">Using JRE_HOME:        /opt/jdk1.8.0_131/jre</div><div class="line">Using CLASSPATH:       /opt/apache-tomcat-9.0.0.M22/bin/bootstrap.jar:/opt/apache-tomcat-9.0.0.M22/bin/tomcat-juli.jar</div><div class="line">十月 12, 2017 7:08:00 下午 org.apache.catalina.startup.Catalina stopServer</div><div class="line">严重: Could not contact [localhost:[8005]]. Tomcat may not be running.</div><div class="line">十月 12, 2017 7:08:00 下午 org.apache.catalina.startup.Catalina stopServer</div><div class="line">严重: Catalina.stop: </div><div class="line">java.net.ConnectException: 拒绝连接 (Connection refused)</div><div class="line">        at java.net.PlainSocketImpl.socketConnect(Native Method)</div><div class="line">        at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)</div><div class="line">        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)</div><div class="line">        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)</div><div class="line">        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)</div><div class="line">        at java.net.Socket.connect(Socket.java:589)</div><div class="line">        at java.net.Socket.connect(Socket.java:538)</div><div class="line">        at java.net.Socket.&lt;init&gt;(Socket.java:434)</div><div class="line">        at java.net.Socket.&lt;init&gt;(Socket.java:211)</div><div class="line">        at org.apache.catalina.startup.Catalina.stopServer(Catalina.java:478)</div><div class="line">        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</div><div class="line">        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)</div><div class="line">        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</div><div class="line">        at java.lang.reflect.Method.invoke(Method.java:498)</div><div class="line">        at org.apache.catalina.startup.Bootstrap.stopServer(Bootstrap.java:408)</div><div class="line">        at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:497)</div></pre></td></tr></table></figure></p>
<p>发现这种奇怪的问题，去检查端口，发现根本没有tomcat进程的端口：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">[root@localhost bin]<span class="comment">#  netstat -tnlp</span></div><div class="line">Active Internet connections (only servers)</div><div class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </div><div class="line">tcp        0      0 0.0.0.0:22122           0.0.0.0:*               LISTEN      63455/fdfs_trackerd </div><div class="line">tcp        0      0 0.0.0.0:3690            0.0.0.0:*               LISTEN      2855/svnserve       </div><div class="line">tcp        0      0 0.0.0.0:6379            0.0.0.0:*               LISTEN      127481/redis-server </div><div class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      1396/sshd           </div><div class="line">tcp        0      0 0.0.0.0:5432            0.0.0.0:*               LISTEN      183014/postgres     </div><div class="line">tcp        0      0 0.0.0.0:23000           0.0.0.0:*               LISTEN      64278/fdfs_storaged </div><div class="line">tcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN      2229/master         </div><div class="line">tcp        0      0 0.0.0.0:8001            0.0.0.0:*               LISTEN      98427/mosquitto     </div><div class="line">tcp        0      0 0.0.0.0:8002            0.0.0.0:*               LISTEN      72040/nginx: master </div><div class="line">tcp        0      0 0.0.0.0:8004            0.0.0.0:*               LISTEN      109896/vsftpd       </div><div class="line">tcp6       0      0 :::8009                 :::*                    LISTEN      104964/java         </div><div class="line">tcp6       0      0 :::6379                 :::*                    LISTEN      127481/redis-server </div><div class="line">tcp6       0      0 :::22                   :::*                    LISTEN      1396/sshd           </div><div class="line">tcp6       0      0 :::5432                 :::*                    LISTEN      183014/postgres     </div><div class="line">tcp6       0      0 ::1:25                  :::*                    LISTEN      2229/master      </div><div class="line">tcp6       0      0 :::8001                 :::*                    LISTEN      98427/mosquitto     </div><div class="line">tcp6       0      0 127.0.0.1:8005          :::*                    LISTEN      104964/java</div></pre></td></tr></table></figure></p>
<p>只好重新启动但是，还是启动后，还是没成功访问到项目，日志里也看不到什么多余的错误信息。</p>
<p>只好把项目删除了，再去启动tomcat，启动成功后，再去把war 包丢进webapps中，发现项目居然能成功访问，搞半天，没搞明白，估计还是项目有点问题，不能正常启动，直接把tomcat 弄死了。先记录下，以后有时间深入了解下。。</p>
<p>启动：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@localhost bin]<span class="comment"># startup.sh              </span></div><div class="line">Using CATALINA_BASE:   /opt/apache-tomcat-9.0.0.M22</div><div class="line">Using CATALINA_HOME:   /opt/apache-tomcat-9.0.0.M22</div><div class="line">Using CATALINA_TMPDIR: /opt/apache-tomcat-9.0.0.M22/temp</div><div class="line">Using JRE_HOME:        /opt/jdk1.8.0_131/jre</div><div class="line">Using CLASSPATH:       /opt/apache-tomcat-9.0.0.M22/bin/bootstrap.jar:/opt/apache-tomcat-9.0.0.M22/bin/tomcat-juli.jar</div><div class="line">Tomcat started.</div></pre></td></tr></table></figure></p>
<p>监视端口进程：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@localhost bin]<span class="comment"># netstat -tnlp|grep 8000</span></div><div class="line">tcp6       0      0 :::8000                 :::*                    LISTEN      104964/java</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;再&lt;code&gt;centos7&lt;/code&gt; 中正常启动&lt;code&gt;tomcat 9&lt;/code&gt;，但是发现项目都不能正常访问，去关闭tomcat 却报错，如下：
    
    </summary>
    
      <category term="学习笔记" scheme="http://blog.wuwii.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="tomcat" scheme="http://blog.wuwii.com/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>easyui完成日期验证，控制日期的输入范围</title>
    <link href="http://blog.wuwii.com/easyui-validate-datebox.html"/>
    <id>http://blog.wuwii.com/easyui-validate-datebox.html</id>
    <published>2017-10-11T02:08:03.000Z</published>
    <updated>2017-10-12T00:39:51.464Z</updated>
    
    <content type="html"><![CDATA[<p>今天改前端问题时候遇到了这个问题，其实easyui还好，看官网例子，也可以解决我们的问题，但是现实业务中却是要考虑到各方面的，要做到更全。<br><a id="more"></a></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"height: 100%; width: 200px; margin-left: 4px; display: inline-block;"</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"Title"</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"Icon icon-calendar"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"Text"</span>&gt;</span>上传时间<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width: 120px; height: 38px; line-height: 38px; display: inline-block; float: left; margin-left: 5px;"</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"uploadtime1"</span> <span class="attr">class</span>=<span class="string">"easyui-datebox"</span> <span class="attr">data-options</span>=<span class="string">"width:120,height:24,editable:false"</span> /&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"height: 38px; width: 146px; margin-left: 4px; display: inline-block;"</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width: 12px; height: 100%; display: inline-block; line-height: 38px; text-align: center; float: left; margin-left: 2px;"</span>&gt;</span>至<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width: 120px; height: 100%; line-height: 38px; display: inline-block; margin-left: 12px; float: left;"</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"uploadtime2"</span> <span class="attr">class</span>=<span class="string">"easyui-datebox"</span> <span class="attr">data-options</span>=<span class="string">"width:120,height:24,editable:false,validType:'validateDate[\'#uploadtime1\']'"</span> /&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$.extend($.fn.validatebox.defaults.rules, &#123;</div><div class="line">    validateDate: &#123;</div><div class="line">        validator: <span class="function"><span class="keyword">function</span> (<span class="params">value, param</span>) </span>&#123;</div><div class="line">            <span class="keyword">var</span> start = $(param[<span class="number">0</span>]).datetimebox(<span class="string">'getValue'</span>);  <span class="comment">//获取开始时间</span></div><div class="line">            <span class="keyword">return</span> value &gt;= start;                             <span class="comment">//有效范围为当前时间大于开始时间</span></div><div class="line">        &#125;,</div><div class="line">        message: <span class="string">'结束日期应不能小于开始日期!'</span>                     <span class="comment">//匹配失败消息</span></div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>效果图：<br><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171011171235.png" alt="image"><br>这种方法使用的是easyui的验证，提醒错误错误信息的样式比较好，而且不用手动输入，当然也又有缺点，就是，当用户先输入结束日期，再输入开始日期，就不好去验证了。<br>可以使用例外一种方式控制，官网上看到的，就是控制输入<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">			$(<span class="string">'#dd'</span>).datebox().datebox(<span class="string">'calendar'</span>).calendar(&#123;</div><div class="line">				validator: <span class="function"><span class="keyword">function</span>(<span class="params">date</span>)</span>&#123;</div><div class="line">					<span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>();</div><div class="line">					<span class="keyword">var</span> d1 = <span class="keyword">new</span> <span class="built_in">Date</span>(now.getFullYear(), now.getMonth(), now.getDate());</div><div class="line">					<span class="keyword">var</span> d2 = <span class="keyword">new</span> <span class="built_in">Date</span>(now.getFullYear(), now.getMonth(), now.getDate()+<span class="number">10</span>);</div><div class="line">					<span class="keyword">return</span> d1&lt;=date &amp;&amp; date&lt;=d2;</div><div class="line">				&#125;</div><div class="line">			&#125;);</div><div class="line">		&#125;);</div></pre></td></tr></table></figure></p>
<p>效果图：<br><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171011172502.png" alt="image"><br>只能选择设置区域的日期，其余的不能选择。</p>
<p>需要注意的是<code>date-box</code>需要加上<code>editable:false</code>这个属性，不能让手动输入，只能选择。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天改前端问题时候遇到了这个问题，其实easyui还好，看官网例子，也可以解决我们的问题，但是现实业务中却是要考虑到各方面的，要做到更全。&lt;br&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://blog.wuwii.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="easyui" scheme="http://blog.wuwii.com/tags/easyui/"/>
    
  </entry>
  
  <entry>
    <title>如何使用postman测试上传文件接口，正确提交文件数据</title>
    <link href="http://blog.wuwii.com/postman-upload.html"/>
    <id>http://blog.wuwii.com/postman-upload.html</id>
    <published>2017-10-10T13:28:03.000Z</published>
    <updated>2017-10-12T00:39:51.511Z</updated>
    
    <content type="html"><![CDATA[<p>今天使用<code>POSTMAN</code>测试文件上传，不太会用这个东东，刚开始发现这个<code>binary</code>是用来上传文件的，<br><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171010142016.png" alt="image"><br>以为用这个没错，但是使用的时候报错信息如下：</p>
<a id="more"></a>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>Apache Tomcat/7.0.37 - Error report<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css">&lt;!<span class="selector-tag">--H1</span> &#123;<span class="attribute">font-family</span>:Tahoma,Arial,sans-serif;<span class="attribute">color</span>:white;<span class="attribute">background-color</span>:<span class="number">#525D76</span>;<span class="attribute">font-size</span>:<span class="number">22px</span>;&#125; <span class="selector-tag">H2</span> &#123;<span class="attribute">font-family</span>:Tahoma,Arial,sans-serif;<span class="attribute">color</span>:white;<span class="attribute">background-color</span>:<span class="number">#525D76</span>;<span class="attribute">font-size</span>:<span class="number">16px</span>;&#125; <span class="selector-tag">H3</span> &#123;<span class="attribute">font-family</span>:Tahoma,Arial,sans-serif;<span class="attribute">color</span>:white;<span class="attribute">background-color</span>:<span class="number">#525D76</span>;<span class="attribute">font-size</span>:<span class="number">14px</span>;&#125; <span class="selector-tag">BODY</span> &#123;<span class="attribute">font-family</span>:Tahoma,Arial,sans-serif;<span class="attribute">color</span>:black;<span class="attribute">background-color</span>:white;&#125; <span class="selector-tag">B</span> &#123;<span class="attribute">font-family</span>:Tahoma,Arial,sans-serif;<span class="attribute">color</span>:white;<span class="attribute">background-color</span>:<span class="number">#525D76</span>;&#125; <span class="selector-tag">P</span> &#123;<span class="attribute">font-family</span>:Tahoma,Arial,sans-serif;<span class="attribute">background</span>:white;<span class="attribute">color</span>:black;<span class="attribute">font-size</span>:<span class="number">12px</span>;&#125;<span class="selector-tag">A</span> &#123;<span class="attribute">color </span>: black;&#125;<span class="selector-tag">A</span><span class="selector-class">.name</span> &#123;<span class="attribute">color </span>: black;&#125;<span class="selector-tag">HR</span> &#123;<span class="attribute">color </span>: <span class="number">#525D76</span>;&#125;<span class="selector-tag">--</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span> <span class="tag">&lt;/<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>HTTP Status 500 - Request processing failed; nested exception is org.springframework.web.multipart.MultipartException: The current request is not a multipart request<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;<span class="name">HR</span> <span class="attr">size</span>=<span class="string">"1"</span> <span class="attr">noshade</span>=<span class="string">"noshade"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>type<span class="tag">&lt;/<span class="name">b</span>&gt;</span> Exception report<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>message<span class="tag">&lt;/<span class="name">b</span>&gt;</span> <span class="tag">&lt;<span class="name">u</span>&gt;</span>Request processing failed; nested exception is org.springframework.web.multipart.MultipartException: The current request is not a multipart request<span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>description<span class="tag">&lt;/<span class="name">b</span>&gt;</span> <span class="tag">&lt;<span class="name">u</span>&gt;</span>The server encountered an internal error that prevented it from fulfilling this request.<span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>exception<span class="tag">&lt;/<span class="name">b</span>&gt;</span> <span class="tag">&lt;<span class="name">pre</span>&gt;</span>org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.springframework.web.multipart.MultipartException: The current request is not a multipart request</div><div class="line">	org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:981)</div><div class="line">	org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:871)</div><div class="line">	javax.servlet.http.HttpServlet.service(HttpServlet.java:647)</div><div class="line">	org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:845)</div><div class="line">	javax.servlet.http.HttpServlet.service(HttpServlet.java:728)</div><div class="line">	org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)</div><div class="line">	org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)</div><div class="line">	com.devframe.util.CorsFilter.doFilter(CorsFilter.java:23)</div><div class="line"><span class="tag">&lt;/<span class="name">pre</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>root cause<span class="tag">&lt;/<span class="name">b</span>&gt;</span> <span class="tag">&lt;<span class="name">pre</span>&gt;</span>org.springframework.web.multipart.MultipartException: The current request is not a multipart request</div><div class="line">	org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.assertIsMultipartRequest(RequestParamMethodArgumentResolver.java:216)</div><div class="line">	org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.resolveName(RequestParamMethodArgumentResolver.java:177)</div><div class="line">	org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:90)</div><div class="line">	org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:78)</div><div class="line">	org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:162)</div><div class="line">	org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:129)</div><div class="line">	org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)</div><div class="line">	org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)</div><div class="line">	org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)</div><div class="line">	org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)</div><div class="line">	org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)</div><div class="line">	org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)</div><div class="line">	org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:969)</div><div class="line">	org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:871)</div><div class="line">	javax.servlet.http.HttpServlet.service(HttpServlet.java:647)</div><div class="line">	org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:845)</div><div class="line">	javax.servlet.http.HttpServlet.service(HttpServlet.java:728)</div><div class="line">	org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)</div><div class="line">	org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)</div><div class="line">	com.devframe.util.CorsFilter.doFilter(CorsFilter.java:23)</div><div class="line"><span class="tag">&lt;/<span class="name">pre</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>note<span class="tag">&lt;/<span class="name">b</span>&gt;</span> <span class="tag">&lt;<span class="name">u</span>&gt;</span>The full stack trace of the root cause is available in the Apache Tomcat/7.0.37 logs.<span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">HR</span> <span class="attr">size</span>=<span class="string">"1"</span> <span class="attr">noshade</span>=<span class="string">"noshade"</span>&gt;</span><span class="tag">&lt;<span class="name">h3</span>&gt;</span>Apache Tomcat/7.0.37<span class="tag">&lt;/<span class="name">h3</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p>项目使用的是springMVC的 <code>MultipartFile</code> 接收的，服务端识别不出来文件。项目中使用的 js 的<code>FormDate</code>上传的，以前使用的 form 表单提交<code>enctype=&quot;multipart/form-data&quot;</code>这两种方法可以解决这个问题，但是postman中不知道怎么设置，刚好还是发现postman中又form-data这中方法提交，仔细一看原来可以选择file类型的参数，尴尬：<br><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171010142039.png" alt="image"><br>但是还是报错，仔细检查了参数，发现，postman中<code>Headers</code>设置了 <code>Content-Type</code> 使用<code>form-data</code>提交数据的时候不需要这个属性，删除。<br><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171010143123.png" alt="img"><br>做好上面的准备，上传完成。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="string">"statusCode"</span>: <span class="number">200</span>,</div><div class="line">    <span class="string">"message"</span>: <span class="string">"完成"</span>,</div><div class="line">    <span class="string">"data"</span>: [</div><div class="line">        &#123;</div><div class="line">            <span class="string">"name"</span>: <span class="string">"722f95b1-261e-4f42-b7fb-45552e01b9f2"</span>,</div><div class="line">            <span class="string">"byname"</span>: <span class="string">"v2-f26272e386f127af2e9263c83082b4a2_b.jpg"</span>,</div><div class="line">            <span class="string">"extname"</span>: <span class="string">".jpg"</span>,</div><div class="line">            <span class="string">"type"</span>: <span class="string">"图片"</span>,</div><div class="line">            <span class="string">"size"</span>: <span class="number">25</span>,</div><div class="line">            <span class="string">"path"</span>: <span class="string">"外网地址，不方便透露了"</span></div><div class="line">        &#125;</div><div class="line">    ]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>终于完成了。。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天使用&lt;code&gt;POSTMAN&lt;/code&gt;测试文件上传，不太会用这个东东，刚开始发现这个&lt;code&gt;binary&lt;/code&gt;是用来上传文件的，&lt;br&gt;&lt;img src=&quot;http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171010142016.png&quot; alt=&quot;image&quot;&gt;&lt;br&gt;以为用这个没错，但是使用的时候报错信息如下：&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://blog.wuwii.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="postman" scheme="http://blog.wuwii.com/tags/postman/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript和jQuery中forEach和each的用法，以及各种遍历的使用</title>
    <link href="http://blog.wuwii.com/js-array.html"/>
    <id>http://blog.wuwii.com/js-array.html</id>
    <published>2017-10-10T13:28:03.000Z</published>
    <updated>2017-10-12T00:39:51.480Z</updated>
    
    <content type="html"><![CDATA[<p>今天做个选择出id前缀为imgpreviwe的img标签，给它们个背景图片，直接想都没想，forEach调了半天，没调出来，才知道用错了方法。。哈哈，以前的东西忘得差不多了，重新学习一遍。。</p>
<a id="more"></a>
<p>正确的是这样写，使用<code>each</code>：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"[id^='imgpreviwe']"</span>, $(<span class="string">".MachineEdit"</span>, Dev.App.FillPanel.Target)).each(<span class="function"><span class="keyword">function</span> (<span class="params">index</span>) </span>&#123;</div><div class="line">                $(<span class="keyword">this</span>).attr(<span class="string">"src"</span>, <span class="string">"image/authorization/default.jpg"</span>);</div><div class="line">            &#125;);</div></pre></td></tr></table></figure></p>
<p>下面来重新学习一遍：</p>
<p>首先声明一个数组：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> array = [<span class="string">"z"</span>, <span class="string">"s"</span>, <span class="string">"y"</span>, <span class="string">"l"</span>, <span class="string">"v"</span>];</div></pre></td></tr></table></figure></p>
<p>首先来个最简单的遍历：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, len = array.length; i &lt; len; i++)&#123;</div><div class="line">          <span class="built_in">console</span>.log(array[i]);</div><div class="line">      &#125;</div></pre></td></tr></table></figure></p>
<p>运行结果是：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">z</div><div class="line">s</div><div class="line">y</div><div class="line">i</div><div class="line">v</div></pre></td></tr></table></figure></p>
<p>再来看下<code>forEach</code>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">array.forEach(console.log);</div></pre></td></tr></table></figure></p>
<p>运行结果：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">z 0 (5) [&quot;z&quot;, &quot;s&quot;, &quot;y&quot;, &quot;l&quot;, &quot;v&quot;]</div><div class="line">s 1 (5) [&quot;z&quot;, &quot;s&quot;, &quot;y&quot;, &quot;l&quot;, &quot;v&quot;]</div><div class="line">y 2 (5) [&quot;z&quot;, &quot;s&quot;, &quot;y&quot;, &quot;l&quot;, &quot;v&quot;]</div><div class="line">l 3 (5) [&quot;z&quot;, &quot;s&quot;, &quot;y&quot;, &quot;l&quot;, &quot;v&quot;]</div><div class="line">v 4 (5) [&quot;z&quot;, &quot;s&quot;, &quot;y&quot;, &quot;l&quot;, &quot;v&quot;]</div></pre></td></tr></table></figure>
<p>其实结果是一样的。。</p>
<p>了解到forEach的源码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment">@param &#123;function(T=, number=, Array.&lt;T&gt;=)&#125; callback</span></div><div class="line"><span class="comment">@param &#123;*&#125; [thisArg]</span></div><div class="line"><span class="comment">@return &#123;void&#125;</span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="built_in">Array</span>.prototype.forEach = <span class="function"><span class="keyword">function</span>(<span class="params">callback,thisArg</span>) </span>&#123;&#125;;</div></pre></td></tr></table></figure></p>
<p>后来发现它的使用：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">array.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">value,index,array</span>)</span>&#123;</div><div class="line">            <span class="built_in">console</span>.log(index + <span class="string">" : "</span> + value + <span class="string">" ~ "</span> + array);</div><div class="line">      &#125;);</div></pre></td></tr></table></figure></p>
<ul>
<li><code>value</code> 是遍历的值</li>
<li><code>index</code> 索引</li>
<li><code>array</code> 数组本身<br>运行结果：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">0 : z ~ z,s,y,l,v</div><div class="line">1 : s ~ z,s,y,l,v</div><div class="line">2 : y ~ z,s,y,l,v</div><div class="line">3 : l ~ z,s,y,l,v</div><div class="line">4 : v ~ z,s,y,l,v</div></pre></td></tr></table></figure>
</li>
</ul>
<p><code>map</code>：map即是 “映射”的意思 用法与 forEach 相似：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">array.map(<span class="function"><span class="keyword">function</span>(<span class="params">value,index,array</span>)</span>&#123;</div><div class="line">            <span class="built_in">console</span>.log(index + <span class="string">" : "</span> + value + <span class="string">" ~ "</span> + array);</div><div class="line">      &#125;);</div></pre></td></tr></table></figure></p>
<p>使用<code>each</code>来遍历数组：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$.each(array, <span class="function"><span class="keyword">function</span> (<span class="params">index, value</span>) </span>&#123;</div><div class="line">          <span class="built_in">console</span>.log(index + <span class="string">" : "</span> + value);</div><div class="line">      &#125;)</div></pre></td></tr></table></figure>
<p>结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">0 : z </div><div class="line">1 : s</div><div class="line">2 : y</div><div class="line">3 : l </div><div class="line">4 : v</div></pre></td></tr></table></figure></p>
<p>回归正题了，上面我们使用的是$().each()，处理Dom对象：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$(“input[name=’type’]”).each(<span class="function"><span class="keyword">function</span>(<span class="params">index</span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>($(<span class="keyword">this</span>).attr(‘checked’)==<span class="literal">true</span>)&#123;</div><div class="line">        <span class="comment">//code</span></div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<ul>
<li>index 为索引<br>找到所有input dom的 name 属性为 type ，  </li>
</ul>
<p>看下<code>jQuery each</code>源码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">each: <span class="function"><span class="keyword">function</span>(<span class="params"> obj, callback </span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> length, i = <span class="number">0</span>;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> ( isArrayLike( obj ) ) &#123;</div><div class="line">            length = obj.length;</div><div class="line">            <span class="keyword">for</span> ( ; i &lt; length; i++ ) &#123;</div><div class="line">                <span class="keyword">if</span> ( callback.call( obj[ i ], i, obj[ i ] ) === <span class="literal">false</span> ) &#123;</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">for</span> ( i <span class="keyword">in</span> obj ) &#123;</div><div class="line">                <span class="keyword">if</span> ( callback.call( obj[ i ], i, obj[ i ] ) === <span class="literal">false</span> ) &#123;</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> obj;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>看到别人写到，jQuery里的each方法是通过js里的call方法来实现的。<br>call这个方法很奇妙，其实官方的说明是：“调用一个对象的一个方法，以另一个对象替换当前对象。”网上更多的解释是变换上下文环境，也有说是改变上下文this指针。<br><code>call([thisObj[,arg1[, arg2[,   [,.argN]]]]])</code></p>
<p><strong>参数</strong><br><code>thisObj</code><br>可选项。将被用作当前对象的对象。 </p>
<p><code>arg1, arg2,  , argN</code><br>可选项。将被传递方法参数序列。</p>
<p>说明<br>call 方法可以用来代替另一个对象调用一个方法。call 方法可将一个函数的对象上下文从初始的上下文改变为由 thisObj 指定的新对象。</p>
<p>引用网上有一个很经典的例子:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">a,b</span>)</span>&#123;</div><div class="line">    alert(a+b);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sub</span>(<span class="params">a,b</span>)</span>&#123;</div><div class="line">    alert(a-b);</div><div class="line">&#125;</div><div class="line"></div><div class="line">add.call(sub,<span class="number">3</span>,<span class="number">1</span>);</div></pre></td></tr></table></figure></p>
<p>用 add 来替换 sub，add.call(sub,3,1) == add(3,1) ，所以运行结果为：<strong>alert(4)</strong>; </p>
<p>感觉有点厉害了。</p>
<p><strong>注意：</strong> js 中的函数其实是对象，函数名是对 Function 对象的引用。</p>
<p>需要注意的Javascript还有个<br><code>for/in</code> - 循环遍历对象的属性<br><strong>功能</strong> ：遍历对象属性，把属性名和属性值都提出来<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">(<span class="function"><span class="keyword">function</span> <span class="title">testForIn</span>(<span class="params"></span>) </span>&#123;</div><div class="line">          <span class="keyword">var</span> obj = &#123;</div><div class="line">              name: <span class="string">"zhangkai"</span>,</div><div class="line">              color: <span class="string">'green'</span>,</div><div class="line">              movie: <span class="string">'阿甘正传'</span>,</div><div class="line">          &#125;</div><div class="line">          <span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> obj)&#123;</div><div class="line">              <span class="built_in">console</span>.log(key + <span class="string">" : "</span> + obj[key]);</div><div class="line">          &#125;</div><div class="line">        &#125;)();</div></pre></td></tr></table></figure></p>
<p>结果:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">name : zhangkai</div><div class="line">color : green</div><div class="line">movie : 阿甘正传</div></pre></td></tr></table></figure>
<p>同样的for in 也能遍历数组:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">for (var i in array) &#123;</div><div class="line">          console.log(array[i]);</div><div class="line">      &#125;</div></pre></td></tr></table></figure></p>
<p>结果也是正常的，但是有时候，会打印出数组的函数<code>function</code>，遍历的时候不推荐使用这个。</p>
<p>当然还有while 遍历，那些就不仔细写了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天做个选择出id前缀为imgpreviwe的img标签，给它们个背景图片，直接想都没想，forEach调了半天，没调出来，才知道用错了方法。。哈哈，以前的东西忘得差不多了，重新学习一遍。。&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://blog.wuwii.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="JavaScript" scheme="http://blog.wuwii.com/tags/JavaScript/"/>
    
      <category term="jQuery" scheme="http://blog.wuwii.com/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>一叶知秋</title>
    <link href="http://blog.wuwii.com/trend.html"/>
    <id>http://blog.wuwii.com/trend.html</id>
    <published>2017-10-08T15:08:03.000Z</published>
    <updated>2017-10-10T00:30:59.629Z</updated>
    
    <content type="html"><![CDATA[<p>今天晚上在小区里面慢跑，突然一个东西掉到我眼镜架上，塞在里面了，尬，拿下来一看，看到的是一片树叶。<br><img src="https://i.loli.net/2017/10/08/59da342e1af4a.jpg" alt="image"><br>时间过得真快，已经秋天了，今年国庆八天长假，也过完，我想，今后，再得过多少年，才有八天长假。</p>
<a id="more"></a>
<p>事情一直在发生，故事永远也写不完，我想我现在想什么，也许在眺望着什么，犹豫着什么，患得患失着什么。在每一刻，它都是好的。也许有一天，我老了，不再去疯了，就这么平静得下去。</p>
<p>我想我现在还是这么个人吧，一直以来也是，对身边的事情都是依依不舍的，但是我没有停留，紧跟着前进，真是想去浪迹天涯呀，但是那是不可能的，我有自己的牵挂与责任，我还是放不下，总有一天，我会老去，总是不想放过，但是时常会放弃自己的一些事情，为难着自己，不愿意离开。</p>
<p><img src="https://ooo.0o0.ooo/2017/10/08/59d9afb316e7f.png" alt="img"></p>
<p>也许是秋天总是会给人带来一丝惆怅的心情吧，不知不觉的，你就会触景生情，这个时候千万别拍照，别去看镜子，你会发现，不知不觉，多了一份沧桑，心里有一些焦灼，慢慢的会影响你的心绪。走的时候，又会浑然不知。</p>
<p>我想我现在还是正值好时光的年纪，即使不能清高，也要活出自我，最后像树叶一样洒脱的离开，因为，我想我正在它夏天的这个时候，还没到，还没到，还能享受最热烈的阳光。</p>
<p><img src="https://i.loli.net/2017/10/08/59da398b58f84.jpg" alt="image"></p>
<p>恍惚，秋分早已过，不用在意太多孰是孰非，早就没留退路，只能这样不顾一切，而你是否能明白了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天晚上在小区里面慢跑，突然一个东西掉到我眼镜架上，塞在里面了，尬，拿下来一看，看到的是一片树叶。&lt;br&gt;&lt;img src=&quot;https://i.loli.net/2017/10/08/59da342e1af4a.jpg&quot; alt=&quot;image&quot;&gt;&lt;br&gt;时间过得真快，已经秋天了，今年国庆八天长假，也过完，我想，今后，再得过多少年，才有八天长假。&lt;/p&gt;
    
    </summary>
    
      <category term="碎碎念" scheme="http://blog.wuwii.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="心情" scheme="http://blog.wuwii.com/tags/%E5%BF%83%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>log4j WARN No appenders could be found for logger</title>
    <link href="http://blog.wuwii.com/log-error.html"/>
    <id>http://blog.wuwii.com/log-error.html</id>
    <published>2017-10-08T14:08:03.000Z</published>
    <updated>2017-10-10T00:30:59.551Z</updated>
    
    <content type="html"><![CDATA[<p>项目的日志以前没设置好，打印出来的东西一团糟。需要把项目的Log文件改一下，改好测试了，没问题，commit，结果突然发现项目启动不了，瞬间吓坏，倒退了，哈哈，机制。报错一大堆：<a id="more"></a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div></pre></td><td class="code"><pre><div class="line">严重: The web application [/devframe-server] created a ThreadLocal with key of <span class="built_in">type</span> [org.springframework.core.NamedThreadLocal] (value [Transactional resources]) and a value of <span class="built_in">type</span> [java.util.HashMap] (value [&#123;&#123;</div><div class="line">	CreateTime:<span class="string">"2017-10-08 16:24:04"</span>,</div><div class="line">	ActiveCount:1,</div><div class="line">	PoolingCount:0,</div><div class="line">	CreateCount:100,</div><div class="line">	DestroyCount:99,</div><div class="line">	CloseCount:1,</div><div class="line">	ConnectCount:2,</div><div class="line">	Connections:[</div><div class="line">	]</div><div class="line">&#125;</div><div class="line"></div><div class="line">[</div><div class="line">]=org.springframework.jdbc.datasource.ConnectionHolder@71579f16, org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@7998ca6f=org.springframework.orm.jpa.EntityManagerHolder@1fd59301&#125;]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.</div><div class="line">十月 08, 2017 4:24:25 下午 org.apache.catalina.loader.WebappClassLoader checkThreadLocalMapForLeaks</div><div class="line">严重: The web application [/devframe-server] created a ThreadLocal with key of <span class="built_in">type</span> [org.springframework.core.NamedThreadLocal] (value [Current AOP proxy]) and a value of <span class="built_in">type</span> [com.devframe.service.impl.DeviceServiceImpl$<span class="variable">$EnhancerBySpringCGLIB</span>$<span class="variable">$905a00fd</span>] (value [com.devframe.service.impl.DeviceServiceImpl@b16530c]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.</div><div class="line">十月 08, 2017 4:24:25 下午 org.apache.catalina.loader.WebappClassLoader checkThreadLocalMapForLeaks</div><div class="line">严重: The web application [/devframe-server] created a ThreadLocal with key of <span class="built_in">type</span> [org.springframework.core.NamedThreadLocal] (value [Actual transaction active]) and a value of <span class="built_in">type</span> [java.lang.Boolean] (value [<span class="literal">true</span>]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.</div><div class="line">十月 08, 2017 4:24:25 下午 org.apache.catalina.loader.WebappClassLoader checkThreadLocalMapForLeaks</div><div class="line">严重: The web application [/devframe-server] created a ThreadLocal with key of <span class="built_in">type</span> [org.springframework.core.NamedThreadLocal] (value [Transaction synchronizations]) and a value of <span class="built_in">type</span> [java.util.LinkedHashSet] (value [[]]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.</div><div class="line">十月 08, 2017 4:24:25 下午 org.apache.catalina.loader.WebappClassLoader checkThreadLocalMapForLeaks</div><div class="line">严重: The web application [/devframe-server] created a ThreadLocal with key of <span class="built_in">type</span> [org.springframework.core.NamedThreadLocal] (value [Current AOP method invocation]) and a value of <span class="built_in">type</span> [org.springframework.aop.framework.ReflectiveMethodInvocation] (value [ReflectiveMethodInvocation: public abstract java.util.List com.devframe.dao.DeviceDao.findBySerialnumber(java.lang.String); target is of class [org.springframework.data.jpa.repository.support.SimpleJpaRepository]]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.</div><div class="line">十月 08, 2017 4:24:25 下午 org.apache.catalina.loader.WebappClassLoader checkThreadLocalMapForLeaks</div><div class="line">严重: The web application [/devframe-server] created a ThreadLocal with key of <span class="built_in">type</span> [org.springframework.core.NamedThreadLocal] (value [Current transaction name]) and a value of <span class="built_in">type</span> [java.lang.String] (value [com.devframe.service.impl.DeviceServiceImpl.findBySerialnumber]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.</div><div class="line">十月 08, 2017 4:24:25 下午 org.apache.catalina.loader.WebappClassLoader checkThreadLocalMapForLeaks</div><div class="line">严重: Unable to determine string representation of value of <span class="built_in">type</span> [org.springframework.transaction.interceptor.TransactionAspectSupport.TransactionInfo]</div><div class="line">java.lang.NullPointerException</div><div class="line">	at org.springframework.transaction.interceptor.TransactionAspectSupport<span class="variable">$TransactionInfo</span>.toString(TransactionAspectSupport.java:624)</div><div class="line">	at org.apache.catalina.loader.WebappClassLoader.checkThreadLocalMapForLeaks(WebappClassLoader.java:2520)</div><div class="line">	at org.apache.catalina.loader.WebappClassLoader.checkThreadLocalsForLeaks(WebappClassLoader.java:2454)</div><div class="line">	at org.apache.catalina.loader.WebappClassLoader.clearReferences(WebappClassLoader.java:1995)</div><div class="line">	at org.apache.catalina.loader.WebappClassLoader.stop(WebappClassLoader.java:1901)</div><div class="line">	at org.apache.catalina.loader.WebappLoader.stopInternal(WebappLoader.java:662)</div><div class="line">	at org.apache.catalina.util.LifecycleBase.stop(LifecycleBase.java:232)</div><div class="line">	at org.apache.catalina.core.StandardContext.stopInternal(StandardContext.java:5526)</div><div class="line">	at org.apache.catalina.util.LifecycleBase.stop(LifecycleBase.java:232)</div><div class="line">	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:160)</div><div class="line">	at org.apache.catalina.core.ContainerBase<span class="variable">$StartChild</span>.call(ContainerBase.java:1559)</div><div class="line">	at org.apache.catalina.core.ContainerBase<span class="variable">$StartChild</span>.call(ContainerBase.java:1549)</div><div class="line">	at java.util.concurrent.FutureTask.run(FutureTask.java:266)</div><div class="line">	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)</div><div class="line">	at java.util.concurrent.ThreadPoolExecutor<span class="variable">$Worker</span>.run(ThreadPoolExecutor.java:624)</div><div class="line">	at java.lang.Thread.run(Thread.java:748)</div><div class="line"></div><div class="line">十月 08, 2017 4:24:25 下午 org.apache.catalina.loader.WebappClassLoader checkThreadLocalMapForLeaks</div><div class="line">严重: The web application [/devframe-server] created a ThreadLocal with key of <span class="built_in">type</span> [org.springframework.core.NamedThreadLocal] (value [Current aspect-driven transaction]) and a value of <span class="built_in">type</span> [org.springframework.transaction.interceptor.TransactionAspectSupport.TransactionInfo] (value [Unknown]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.</div><div class="line">十月 08, 2017 4:24:25 下午 org.apache.coyote.AbstractProtocol start</div><div class="line">信息: Starting ProtocolHandler [<span class="string">"http-bio-8081"</span>]</div><div class="line">十月 08, 2017 4:24:25 下午 org.apache.catalina.loader.WebappClassLoader loadClass</div><div class="line">信息: Illegal access: this web application instance has been stopped already.  Could not load org.hibernate.engine.transaction.internal.jta.JtaStatusHelper.  The eventual following stack trace is caused by an error thrown <span class="keyword">for</span> debugging purposes as well as to attempt to terminate the thread <span class="built_in">which</span> caused the illegal access, and has no functional impact.</div><div class="line">java.lang.IllegalStateException</div><div class="line">	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1599)</div><div class="line">	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1558)</div><div class="line">	at org.hibernate.engine.transaction.internal.TransactionCoordinatorImpl.afterTransaction(TransactionCoordinatorImpl.java:142)</div><div class="line">	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.afterTransactionCompletion(JdbcTransaction.java:138)</div><div class="line">	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.rollback(AbstractTransactionImpl.java:213)</div><div class="line">	at org.hibernate.jpa.internal.TransactionImpl.rollback(TransactionImpl.java:108)</div><div class="line">	at org.springframework.orm.jpa.JpaTransactionManager.doRollback(JpaTransactionManager.java:544)</div><div class="line">	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:853)</div><div class="line">	at org.springframework.transaction.support.AbstractPlatformTransactionManager.rollback(AbstractPlatformTransactionManager.java:830)</div><div class="line">	at org.springframework.transaction.interceptor.TransactionAspectSupport.completeTransactionAfterThrowing(TransactionAspectSupport.java:503)</div><div class="line">	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:285)</div><div class="line">	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)</div><div class="line">	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)</div><div class="line">	at org.springframework.aop.framework.CglibAopProxy<span class="variable">$DynamicAdvisedInterceptor</span>.intercept(CglibAopProxy.java:655)</div><div class="line">	at com.devframe.service.impl.DeviceServiceImpl$<span class="variable">$EnhancerBySpringCGLIB</span>$<span class="variable">$905a00fd</span>.findBySerialnumber(&lt;generated&gt;)</div><div class="line">	at com.devframe.util.mqtt.TimingPublish.run(TimingPublish.java:241)</div><div class="line">	at com.devframe.service.impl.MqttServerImpl.callBackChoose(MqttServerImpl.java:108)</div><div class="line">	at com.devframe.util.mqtt.ServerMQTT.messageArrived(ServerMQTT.java:161)</div><div class="line">	at org.eclipse.paho.client.mqttv3.internal.CommsCallback.deliverMessage(CommsCallback.java:499)</div><div class="line">	at org.eclipse.paho.client.mqttv3.internal.CommsCallback.handleMessage(CommsCallback.java:402)</div><div class="line">	at org.eclipse.paho.client.mqttv3.internal.CommsCallback.run(CommsCallback.java:206)</div><div class="line">	at java.util.concurrent.Executors<span class="variable">$RunnableAdapter</span>.call(Executors.java:511)</div><div class="line">	at java.util.concurrent.FutureTask.run(FutureTask.java:266)</div><div class="line">	at java.util.concurrent.ScheduledThreadPoolExecutor<span class="variable">$ScheduledFutureTask</span>.access<span class="variable">$201</span>(ScheduledThreadPoolExecutor.java:180)</div><div class="line">	at java.util.concurrent.ScheduledThreadPoolExecutor<span class="variable">$ScheduledFutureTask</span>.run(ScheduledThreadPoolExecutor.java:293)</div><div class="line">	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)</div><div class="line">	at java.util.concurrent.ThreadPoolExecutor<span class="variable">$Worker</span>.run(ThreadPoolExecutor.java:624)</div><div class="line">	at java.lang.Thread.run(Thread.java:748)</div><div class="line"></div><div class="line">十月 08, 2017 4:24:25 下午 org.apache.catalina.loader.WebappClassLoader loadClass</div><div class="line">信息: Illegal access: this web application instance has been stopped already.  Could not load org.eclipse.paho.client.mqttv3.internal.MessageCatalog.  The eventual following stack trace is caused by an error thrown <span class="keyword">for</span> debugging purposes as well as to attempt to terminate the thread <span class="built_in">which</span> caused the illegal access, and has no functional impact.</div><div class="line">java.lang.IllegalStateException</div><div class="line">	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1599)</div><div class="line">	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1558)</div><div class="line">	at org.eclipse.paho.client.mqttv3.MqttException.getMessage(MqttException.java:225)</div><div class="line">	at org.eclipse.paho.client.mqttv3.MqttException.toString(MqttException.java:233)</div><div class="line">	at java.lang.String.valueOf(String.java:2994)</div><div class="line">	at java.io.PrintStream.println(PrintStream.java:821)</div><div class="line">	at java.lang.Throwable<span class="variable">$WrappedPrintStream</span>.println(Throwable.java:748)</div><div class="line">	at java.lang.Throwable.printStackTrace(Throwable.java:655)</div><div class="line">	at java.lang.Throwable.printStackTrace(Throwable.java:643)</div><div class="line">	at java.lang.Throwable.printStackTrace(Throwable.java:634)</div><div class="line">	at com.devframe.util.mqtt.ServerMQTT.connectionLost(ServerMQTT.java:144)</div><div class="line">	at org.eclipse.paho.client.mqttv3.internal.CommsCallback.connectionLost(CommsCallback.java:292)</div><div class="line">	at org.eclipse.paho.client.mqttv3.internal.ClientComms.shutdownConnection(ClientComms.java:423)</div><div class="line">	at org.eclipse.paho.client.mqttv3.internal.CommsCallback.run(CommsCallback.java:220)</div><div class="line">	at java.util.concurrent.Executors<span class="variable">$RunnableAdapter</span>.call(Executors.java:511)</div><div class="line">	at java.util.concurrent.FutureTask.run(FutureTask.java:266)</div><div class="line">	at java.util.concurrent.ScheduledThreadPoolExecutor<span class="variable">$ScheduledFutureTask</span>.access<span class="variable">$201</span>(ScheduledThreadPoolExecutor.java:180)</div><div class="line">	at java.util.concurrent.ScheduledThreadPoolExecutor<span class="variable">$ScheduledFutureTask</span>.run(ScheduledThreadPoolExecutor.java:293)</div><div class="line">	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)</div><div class="line">	at java.util.concurrent.ThreadPoolExecutor<span class="variable">$Worker</span>.run(ThreadPoolExecutor.java:624)</div><div class="line">	at java.lang.Thread.run(Thread.java:748)</div><div class="line"></div><div class="line">十月 08, 2017 4:24:38 下午 org.apache.catalina.loader.WebappClassLoader loadClass</div><div class="line">信息: Illegal access: this web application instance has been stopped already.  Could not load org.apache.commons.pool2.impl.EvictionConfig.  The eventual following stack trace is caused by an error thrown <span class="keyword">for</span> debugging purposes as well as to attempt to terminate the thread <span class="built_in">which</span> caused the illegal access, and has no functional impact.</div><div class="line">java.lang.IllegalStateException</div><div class="line">	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1599)</div><div class="line">	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1558)</div><div class="line">	at org.apache.commons.pool2.impl.GenericObjectPool.evict(GenericObjectPool.java:743)</div><div class="line">	at org.apache.commons.pool2.impl.BaseGenericObjectPool<span class="variable">$Evictor</span>.run(BaseGenericObjectPool.java:1036)</div><div class="line">	at java.util.TimerThread.mainLoop(Timer.java:555)</div><div class="line">	at java.util.TimerThread.run(Timer.java:505)</div></pre></td></tr></table></figure>
<p>根据上面查找问题，刚开始一直以为是 mqtt 出现错误了，检查完全没问题，而且最近只是修改了其他的内容，一想到我刚刚改了log4j，估计是它除了错误，但是上面的错误信息完全没给我有用的提示信息，只能知道<code>web root</code> 都没能启动，就去各个spring配置文件看，但是没发现有配置log4j的位置，最后功夫不负有心人终于在<code>web.xml</code>看到了一段话</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 启动Log4j --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">context-param</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">param-name</span>&gt;</span>log4jConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:log4j.properties<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">listener</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.util.Log4jConfigListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">listener</span>&gt;</span></div></pre></td></tr></table></figure>
<p>跟我目前路径不一致，改好后，成功启动。。。莫名其妙了。</p>
<p>网上查了下，日志出现错误，找不到<code>log4j.properties</code>报错是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">log4j:WARN No appenders could be found for logger (org.apache.ibatis.logging.LogFactory).   </div><div class="line">log4j:WARN Please initialize the log4j system properly.</div></pre></td></tr></table></figure></p>
<p>那就不得而知了。</p>
<p>总算解决了。。</p>
<p>总结：</p>
<ol>
<li>部署的项目在<code>WEB-INF/classes/</code>路径下加上文件 <code>log4j.properties</code> ,开发中，我使用的是maven构建项目的，所以，在<code>resources</code> 文件下加入 <code>log4j.properties</code> 就可以了。</li>
<li>这样下去启动下去仍然会报错，Web开发的时候，spring容器启动去读取这个log4j的配置文件的时候，找不到它，所以要在 <code>web.xml</code> 中重新配置文件位置：<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 启动Log4j --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">context-param</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">param-name</span>&gt;</span>log4jConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:log4j.properties<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">listener</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.util.Log4jConfigListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">listener</span>&gt;</span></div></pre></td></tr></table></figure></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;项目的日志以前没设置好，打印出来的东西一团糟。需要把项目的Log文件改一下，改好测试了，没问题，commit，结果突然发现项目启动不了，瞬间吓坏，倒退了，哈哈，机制。报错一大堆：
    
    </summary>
    
      <category term="学习笔记" scheme="http://blog.wuwii.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="java" scheme="http://blog.wuwii.com/tags/java/"/>
    
      <category term="log4j" scheme="http://blog.wuwii.com/tags/log4j/"/>
    
  </entry>
  
  <entry>
    <title>我想分享你的悲伤</title>
    <link href="http://blog.wuwii.com/share-sadness.html"/>
    <id>http://blog.wuwii.com/share-sadness.html</id>
    <published>2017-10-07T14:08:03.000Z</published>
    <updated>2017-10-08T00:52:06.288Z</updated>
    
    <content type="html"><![CDATA[<h3 id="我想分享你的悲伤"><a href="#我想分享你的悲伤" class="headerlink" title="我想分享你的悲伤"></a>我想分享你的悲伤</h3><p>我想分享你的悲伤，</p>
<p>我要成为故事中的小丑，</p>
<p>将悲伤写进喜剧中。</p>
<p>我想分享你的悲伤，</p>
<p>我会强颜为笑，</p>
<p>带上面具，</p>
<p>安慰你。</p>
<p>我想分享你的悲伤</p>
<p>但我不能将悲伤带给你，</p>
<p>因为哄你开心，</p>
<p>才是我的责任，</p>
<p>即便是伤痕累累，</p>
<p>你一笑，</p>
<p>我便好。</p>
<p>我想分享你的悲伤，</p>
<p>永远微笑，</p>
<p>不贪婪。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;我想分享你的悲伤&quot;&gt;&lt;a href=&quot;#我想分享你的悲伤&quot; class=&quot;headerlink&quot; title=&quot;我想分享你的悲伤&quot;&gt;&lt;/a&gt;我想分享你的悲伤&lt;/h3&gt;&lt;p&gt;我想分享你的悲伤，&lt;/p&gt;
&lt;p&gt;我要成为故事中的小丑，&lt;/p&gt;
&lt;p&gt;将悲伤写进喜剧中。&lt;
    
    </summary>
    
      <category term="碎碎念" scheme="http://blog.wuwii.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="心情" scheme="http://blog.wuwii.com/tags/%E5%BF%83%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>jQuery实现多文件上传并预览</title>
    <link href="http://blog.wuwii.com/multiple-file-upload.html"/>
    <id>http://blog.wuwii.com/multiple-file-upload.html</id>
    <published>2017-10-07T02:08:03.000Z</published>
    <updated>2017-10-10T00:30:59.582Z</updated>
    
    <content type="html"><![CDATA[<p>自己做了个文件上传，样式有些简陋，功能还需以后完善。中间遇到了一些问题，在这里记录下。<a id="more"></a></p>
<h3 id="样式"><a href="#样式" class="headerlink" title="样式"></a>样式</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"height: 82px; width: 100%; border-bottom: 1px solid #ddd;padding-top: 5px"</span>&gt;</span></div><div class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width: 80px; height: 82px;float: left;text-align: right; line-height: 72px;"</span>&gt;</span>反馈图片<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">           <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">class</span>=<span class="string">"file"</span>&gt;</span>选择文件</div><div class="line">               <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">accept</span>=<span class="string">"image/png,image/gif,image/jpg,image/jpeg"</span> <span class="attr">id</span>=<span class="string">"files"</span> <span class="attr">name</span>=<span class="string">"files"</span> <span class="attr">multiple</span> /&gt;</span></div><div class="line">           <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"preview"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.file</span> &#123;</div><div class="line">    <span class="attribute">float</span>: left;</div><div class="line">    <span class="attribute">position</span>: relative;</div><div class="line">    <span class="attribute">display</span>: block;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#03afD9</span>;</div><div class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#99D3F5</span>;</div><div class="line">    <span class="attribute">border-radius</span>: <span class="number">4px</span>;</div><div class="line">    <span class="attribute">margin-left</span>: <span class="number">5px</span>;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">4px</span> <span class="number">12px</span>;</div><div class="line">    <span class="attribute">overflow</span>: hidden;</div><div class="line">    <span class="attribute">color</span>: white;</div><div class="line">    <span class="attribute">text-decoration</span>: none;</div><div class="line">    <span class="attribute">text-indent</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">line-height</span>: <span class="number">20px</span>;</div><div class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.file</span> <span class="selector-tag">input</span> &#123;</div><div class="line">    <span class="attribute">position</span>: absolute;</div><div class="line">    <span class="attribute">font-size</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.file</span><span class="selector-pseudo">:hover</span> &#123;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#95B8E7</span>;</div><div class="line">    <span class="attribute">border-color</span>: <span class="number">#78C3F3</span>;</div><div class="line">    <span class="attribute">color</span>: white;</div><div class="line">    <span class="attribute">text-decoration</span>: none;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//下面用于多图片上传预览功能</span></div><div class="line">        <span class="function"><span class="keyword">function</span> <span class="title">setImagePreviews</span>(<span class="params">docObj</span>) </span>&#123;</div><div class="line">            <span class="keyword">var</span> preview = $(<span class="string">"#preview"</span>, $(<span class="string">".MachineEdit"</span>, Dev.App.FillPanel.Target));</div><div class="line">            preview.html(<span class="string">""</span>);</div><div class="line">            fileList = docObj.files;</div><div class="line">            <span class="keyword">if</span> (fileList.length &gt; <span class="number">3</span>)&#123;</div><div class="line">                <span class="keyword">return</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; fileList.length; i++) &#123;</div><div class="line">                <span class="keyword">if</span> (!checkType(fileList[i].name))&#123;</div><div class="line">                    preview.html(<span class="string">""</span>);</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">                preview.append(<span class="string">"&lt;div style='float:left;cursor:pointer;margin-left: 3px;' &gt;&lt;img id='img"</span> + i + <span class="string">"' /&gt; &lt;/div&gt;"</span>);</div><div class="line">                <span class="keyword">var</span> imgObjPreview = $(<span class="string">"#img"</span>+i, $(<span class="string">".MachineEdit"</span>, Dev.App.FillPanel.Target));</div><div class="line">                <span class="keyword">if</span> (fileList &amp;&amp; fileList[i]) &#123;</div><div class="line">                    <span class="comment">//火狐下，直接设img属性</span></div><div class="line">                    imgObjPreview.css(<span class="string">"display"</span>,<span class="string">"block"</span>);</div><div class="line">                    <span class="comment">//控制缩略图大小</span></div><div class="line">                    imgObjPreview.width(<span class="number">70</span>);</div><div class="line">                    imgObjPreview.height(<span class="number">70</span>);</div><div class="line">                    <span class="comment">//imgObjPreview.src = docObj.files[0].getAsDataURL();</span></div><div class="line">                    <span class="comment">//火狐7以上版本不能用上面的getAsDataURL()方式获取，需要一下方式</span></div><div class="line">                    imgObjPreview.attr(<span class="string">"src"</span>, <span class="built_in">window</span>.URL.createObjectURL(fileList[i]));</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">else</span> &#123;</div><div class="line">                    <span class="comment">//IE下，使用滤镜</span></div><div class="line">                    docObj.select();</div><div class="line">                    <span class="keyword">var</span> imgSrc = <span class="built_in">document</span>.selection.createRange().text;</div><div class="line">                    <span class="keyword">var</span> localImagId = $(<span class="string">"#img"</span>+i, $(<span class="string">".MachineEdit"</span>, Dev.App.FillPanel.Target));</div><div class="line">                    <span class="comment">//必须设置初始大小</span></div><div class="line">                    localImagId.width(<span class="number">70</span>);</div><div class="line">                    localImagId.height(<span class="number">70</span>);</div><div class="line">                    <span class="comment">//图片异常的捕捉，防止用户修改后缀来伪造图片</span></div><div class="line">                    imgObjPreview.css(<span class="string">"display"</span>, <span class="string">"none"</span>);</div><div class="line">                    <span class="built_in">document</span>.selection.empty();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">/*检测照片格式*/</span></div><div class="line">        <span class="function"><span class="keyword">function</span> <span class="title">checkType</span>(<span class="params">image</span>)</span>&#123;</div><div class="line">            <span class="keyword">var</span> extStart = image.lastIndexOf(<span class="string">"."</span>);</div><div class="line">            <span class="keyword">var</span> ext = image.substring(extStart, image.length).toUpperCase();</div><div class="line">            <span class="keyword">if</span> ( ext != <span class="string">".PNG"</span> &amp;&amp; ext != <span class="string">".GIF"</span> &amp;&amp; ext != <span class="string">".JPG"</span> &amp;&amp; ext != <span class="string">".JPEG"</span>) &#123;</div><div class="line">                dialog.Alert(<span class="string">"图片限于png，gif，jpeg，jpg格式！"</span>, <span class="string">"error"</span>);</div><div class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">        &#125;</div></pre></td></tr></table></figure>
<p>调用方式<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"#files"</span>, $(<span class="string">".MachineEdit"</span>, Dev.App.FillPanel.Target)).bind(<span class="string">"change"</span>,<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    setImagePreviews(<span class="keyword">this</span>);</div><div class="line"> &#125;);</div></pre></td></tr></table></figure></p>
<p>效果展示：<br><img src="https://i.loli.net/2017/10/07/59d8a623e0921.png" alt="img"></p>
<p>上传的时候使用的是<code>FormData</code></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//以上省略</span></div><div class="line">            <span class="keyword">var</span> form = <span class="keyword">new</span> FormData();</div><div class="line">           <span class="comment">//注意参数数组的时候使用多次append就行了</span></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, len = fileList.length; i &lt; len; i++) &#123;</div><div class="line">                form.append(<span class="string">"files"</span>, fileList[i]);</div><div class="line">            &#125;</div><div class="line">           </div><div class="line">            form.append(<span class="string">"orgid"</span>, selectorgid);</div><div class="line">            form.append(<span class="string">"cautionid"</span>, selectAl);</div><div class="line">            form.append(<span class="string">"fkder"</span>,Dev.cookie.user.truename);</div><div class="line"></div><div class="line">            $.ajax(&#123;</div><div class="line">                type: <span class="string">"POST"</span>,</div><div class="line">                url: <span class="string">'~~省略~~'</span>,</div><div class="line">                data: form,</div><div class="line">                contentType: <span class="literal">false</span>,</div><div class="line">                processData: <span class="literal">false</span>, <span class="comment">//注意一定要设置为false</span></div><div class="line">                success: <span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</div><div class="line">                    <span class="keyword">if</span> (!Dev.IsNull(response) &amp;&amp; response.statusCode == <span class="number">200</span>) &#123;</div><div class="line">                        dialog.Alert(msg.addSuccess, <span class="string">"success"</span>);</div><div class="line">                    &#125; <span class="keyword">else</span> &#123;</div><div class="line">                        dialog.Alert(msg.addFailed, <span class="string">"error"</span>);</div><div class="line">                    &#125;</div><div class="line">                &#125;,</div><div class="line">                error: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</div><div class="line">                    dialog.Alert(msg.netout, <span class="string">"error"</span>);</div><div class="line">                &#125;</div><div class="line">            &#125;)</div></pre></td></tr></table></figure>
<p><code>processData</code>的默认值是<code>true</code>。用于对<code>data</code>参数进行序列化处理。</p>
<h3 id="后台"><a href="#后台" class="headerlink" title="后台"></a>后台</h3><p>java后台使用的是springMVC，相同的可以参考。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/***"</span>, method = RequestMethod.POST)</div><div class="line">	<span class="function"><span class="keyword">public</span> HttpResponse&lt;CautionFeedBackEntity&gt; <span class="title">addFile</span><span class="params">(@RequestParam(value=<span class="string">"files"</span>,required=<span class="keyword">false</span>)</span>MultipartFile[] files, CautionFeedBackEntity entity) </span>&#123;</div><div class="line">		<span class="keyword">try</span> &#123;</div><div class="line">			~~~处理~~~</div><div class="line">			<span class="keyword">return</span> <span class="keyword">new</span> HttpResponse&lt;CautionFeedBackEntity&gt;(ResponseStatusCode.C200);</div><div class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">			Log.error(<span class="string">"错误飘过~~~~"</span>);</div><div class="line">			<span class="keyword">return</span> <span class="keyword">new</span> HttpResponse&lt;CautionFeedBackEntity&gt;(ResponseStatusCode.C400);</div><div class="line">		&#125;</div><div class="line">	&#125;</div></pre></td></tr></table></figure></p>
<p>需要注意的是 <code>MultipartFile[]</code> 需要设置 <code>@RequestParam</code> 参数。</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ol>
<li>html优化。</li>
<li>脚本后期还需添加点击删除功能，并且还要更新input-file里的内容。</li>
<li>js中处理图片的过程，还需做更多的控制（文件大小，伪文件）。</li>
<li>使用fastDFS存储。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自己做了个文件上传，样式有些简陋，功能还需以后完善。中间遇到了一些问题，在这里记录下。
    
    </summary>
    
      <category term="学习笔记" scheme="http://blog.wuwii.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="JavaScript" scheme="http://blog.wuwii.com/tags/JavaScript/"/>
    
      <category term="jQuery" scheme="http://blog.wuwii.com/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>这些只属于武汉的浪漫，看完幸福感爆棚</title>
    <link href="http://blog.wuwii.com/wh-romance.html"/>
    <id>http://blog.wuwii.com/wh-romance.html</id>
    <published>2017-10-05T10:08:03.000Z</published>
    <updated>2017-10-07T10:06:36.143Z</updated>
    
    <content type="html"><![CDATA[<p>无意中看到个长图，感觉到身边的城市这边美，平时没什么时间去发现，倒是有点小小的遗憾吧，记下，有机会一定要转转/ y。<a id="more"></a></p>
<p><img src="https://i.loli.net/2017/10/05/59d6030110f9e.jpg" alt="img"></p>
<p>就是希望以后有个人能一起去我们想去的地方。。。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;无意中看到个长图，感觉到身边的城市这边美，平时没什么时间去发现，倒是有点小小的遗憾吧，记下，有机会一定要转转/ y。
    
    </summary>
    
      <category term="分享" scheme="http://blog.wuwii.com/categories/%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="生活" scheme="http://blog.wuwii.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="武汉" scheme="http://blog.wuwii.com/tags/%E6%AD%A6%E6%B1%89/"/>
    
  </entry>
  
  <entry>
    <title>我想她，是那么的美好吧</title>
    <link href="http://blog.wuwii.com/miss-you.html"/>
    <id>http://blog.wuwii.com/miss-you.html</id>
    <published>2017-10-04T04:15:03.000Z</published>
    <updated>2017-10-16T00:44:51.466Z</updated>
    
    <content type="html"><![CDATA[<p>我想她，是那么的美好吧。<a id="more"></a></p>
<p>不知道不觉就想起她，很难过，放不下。这么多年还记得她，不是因为长相，她长相清秀，但是没那么出众，可能因为她别样清脆的声音，但我也不是声控，可能是因为别的，总之，还在意她。</p>
<p>人就是这么奇怪，有时候遇到什么东西就容易出神，青春期的男生可能总是浮想翩翩，就是经常失神吧，我现在大概还是这个样子了，愣。</p>
<p>跟她说过的话不多吧，见面了的时候我也不敢跟她打招呼，因为我很内向，而且还是个很慢热的人，平时话也非常少，我了解的人也不多，实在是一个再也普通不过的人了。</p>
<p>但是在我眼中的她干净，就像不沾人间烟土的仙子。人很聪明，没什么心机，可以跟其他人玩的很合得来。</p>
<p>我觉得她最大的特点就是明媚了，为什么会用这个词了，应该来源于她当时的网名。人烦恼的时候总是会仰望天空，但是天空中也有阴云。看到她的眼睛，感觉就是一直散发着光，是真的明媚，而且带着淡淡的忧伤；说话的时候就像歌曲，安静优雅而又绵长。</p>
<p>就这样，抓走了我的心。后来做了傻事，表白了她，想当初太年轻了，她很懂事，果断拒绝了我。我当时很颓废，回想当初不应该那样的，后来高考完后，她又加了我，不知道当时是什么自尊心在作祟，居然没想到去追回她，什么高考失利都是借口，自己大概当时有些失望，是想放弃的吧。</p>
<p>后来上了大学应该简单联系了几句，但是没多说，我也忘了，曾经一度真的以为我忘了，但是qq还是一直存在我这里，特别关注，平时闲着没事就喜欢翻翻她的空间，但是也不想留下痕迹，简单看下她再干什么，去她去过的地方，看她想看的电影。看到她的照片，她还是以前那个样子，每次看到，心中会有暖意吧，偷偷的存下。直到毕业工作来到了武汉这个城市，不尽然的又想去找她，但是她的心已经对你上了一把锁了，你该用什么去打开它了，没感情经历的我该拿什么去追回她了。</p>
<p>回想当初，自己这个人真的是有点烂了，什么也没付出就像拿到什么，如果当初没能戳穿就好了，即使能远远的看着她，也是一件多么美好的事情啊。我想现在懂了，可能已经太晚了，自己已经不可能撩动她的心了，已经过了那个年纪了，这么长时间，早已经物是人非了，有可能，我这一辈子再也不能见到她了吧，但是只要还能想起她，看到她的消息，心中还是泛起了涟漪。反正现在人都这么烂了，只能用真心去等候吧。</p>
<p>在最好的年纪遇到这么个人真的很美好！虽然没经历过什么刻骨铭心的事情，但我不会忘记的，谢谢她，让我想变成更好的人。</p>
<p>愿她以后一直明媚，不再忧伤吧。</p>
<p>真的很美好！都要加油了。</p>
<hr>
<p>最终还是没能抓住她，让别人抓走了她的心。但是看到她现在纠结的感情问题，心都要快化了。很想去看看她，但犹豫她是不想见到我吧，弄巧成拙后，朋友也做不成。</p>
<p>是我真有点情绪了，我还是有些犹豫，只是我这个人就是这样的直吧，EQ不在线。确实啊，但是，喜欢的确实好辛苦啊，追一个人很久不回应该怎么办，苦笑，明知道是傻，还能怎么办了，从没退路的我，不知道游离在何处，发现真的好累，不曾想过什么多余的，可能我还是像从前那么单纯吧。</p>
<p>别人都说，想清楚了，没人会说自己的感情是最特别的，哪个人不深情，最终留给自己的才是最重要的。我想是这段时间打扰得厉害了，于人于己都不好，她幸福的时刻，不忍心再打扰下去了。看到她现在的空间和微博，尽是些伤感的句子，很想让她开心，但是我发现我并不能办到，在她面前真的感觉到好卑微，有些患得患失，情绪化了，真的错了，我是一个只能让她更难受的人，或许真的不是对的人，因为这个样子她并不是我想要的。</p>
<p>虽然我也很不想放弃，但是这样下去对谁都不好，真的好想戒了，就这样静静地看着吧，悄无声息。</p>
<p>希望她能幸福吧，走过的路，没什么可遗憾的。</p>
<p>我相信一定能遇到下一个对的人，现在能做的唯有努力提升自己，才能在对的时间不错过，耐心等待，不将就，不奢求。择一城，遇一人，终老。</p>
<p>给自己一个约定吧，三十岁之前，只为等待，死了心，再离去。</p>
<p>希望不会被暴露吧。</p>
<p>（完，不更新了</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我想她，是那么的美好吧。
    
    </summary>
    
      <category term="碎碎念" scheme="http://blog.wuwii.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="心情" scheme="http://blog.wuwii.com/tags/%E5%BF%83%E6%83%85/"/>
    
  </entry>
  
</feed>
