<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Log4j格式输出工具类]]></title>
      <url>/custom-log.html</url>
      <content type="html"><![CDATA[<p>将输出的Log日志进行输出到指定位置，控制台、文件、邮件和数据库等，需要对每一条日志的输出格式，把日志分为不同的级别，写一个工具类可以把日志信息格式化输出到 控制台 或 文件等。<a id="more"></a></p>
<h5 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.PrintWriter;</div><div class="line"><span class="keyword">import</span> java.io.StringWriter;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.apache.log4j.Logger;</div><div class="line"></div><div class="line"><span class="comment">/** </span></div><div class="line"><span class="comment">* <span class="doctag">@ClassName</span>: Log </span></div><div class="line"><span class="comment">* <span class="doctag">@Description</span>: LOG工具类</span></div><div class="line"><span class="comment">* <span class="doctag">@author</span> </span></div><div class="line"><span class="comment">* <span class="doctag">@date</span></span></div><div class="line"><span class="comment">*  </span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Log</span> </span>&#123;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> Logger log = Logger.getLogger(Log.class);</div><div class="line">	 <span class="comment">/**</span></div><div class="line"><span class="comment">     * 打印警告</span></div><div class="line"><span class="comment">     * </span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> obj</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">warn</span><span class="params">(Object obj)</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span>&#123;</div><div class="line">            <span class="comment">/*** 获取输出信息的代码的位置 ***/</span></div><div class="line">            String location = <span class="string">""</span>;</div><div class="line">            StackTraceElement[] stacks = Thread.currentThread().getStackTrace();</div><div class="line">            location = stacks[<span class="number">2</span>].getClassName() + <span class="string">"."</span> + stacks[<span class="number">2</span>].getMethodName()</div><div class="line">                    + <span class="string">"("</span> + stacks[<span class="number">2</span>].getLineNumber() + <span class="string">")"</span>;</div><div class="line">            <span class="comment">/*** 是否是异常  ***/</span></div><div class="line">            <span class="keyword">if</span> (obj <span class="keyword">instanceof</span> Exception) &#123;</div><div class="line">                Exception e = (Exception) obj;</div><div class="line">                StringWriter sw = <span class="keyword">new</span> StringWriter();</div><div class="line">                e.printStackTrace(<span class="keyword">new</span> PrintWriter(sw, <span class="keyword">true</span>));</div><div class="line">                String str = sw.toString();</div><div class="line">                log.warn(location + str);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                log.warn(location + obj.toString());</div><div class="line">            &#125;</div><div class="line">        &#125;<span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            log.error(e);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    </div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 打印信息</span></div><div class="line"><span class="comment">     * </span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> obj</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">info</span><span class="params">(Object obj)</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span>&#123;</div><div class="line">            <span class="comment">/*** 获取输出信息的代码的位置 ***/</span></div><div class="line">            String location = <span class="string">""</span>;</div><div class="line">            StackTraceElement[] stacks = Thread.currentThread().getStackTrace();</div><div class="line">            location = stacks[<span class="number">2</span>].getClassName() + <span class="string">"."</span> + stacks[<span class="number">2</span>].getMethodName()</div><div class="line">                    + <span class="string">"("</span> + stacks[<span class="number">2</span>].getLineNumber() + <span class="string">")"</span>;</div><div class="line">            <span class="comment">/*** 是否是异常  ***/</span></div><div class="line">            <span class="keyword">if</span> (obj <span class="keyword">instanceof</span> Exception) &#123;</div><div class="line">                Exception e = (Exception) obj;</div><div class="line">                StringWriter sw = <span class="keyword">new</span> StringWriter();</div><div class="line">                e.printStackTrace(<span class="keyword">new</span> PrintWriter(sw, <span class="keyword">true</span>));</div><div class="line">                String str = sw.toString();</div><div class="line">                log.info(location + str);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                log.info(location + obj.toString());</div><div class="line">            &#125;</div><div class="line">        &#125;<span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">           log.error(e);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 打印错误</span></div><div class="line"><span class="comment">     * </span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> obj</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">error</span><span class="params">(Object obj)</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span>&#123;</div><div class="line">            <span class="comment">/*** 获取输出信息的代码的位置 ***/</span></div><div class="line">            String location = <span class="string">""</span>;</div><div class="line">            StackTraceElement[] stacks = Thread.currentThread().getStackTrace();</div><div class="line">            location = stacks[<span class="number">2</span>].getClassName() + <span class="string">"."</span> + stacks[<span class="number">2</span>].getMethodName()</div><div class="line">                    + <span class="string">"("</span> + stacks[<span class="number">2</span>].getLineNumber() + <span class="string">")"</span>;</div><div class="line">            </div><div class="line">            <span class="comment">/*** 是否是异常  ***/</span></div><div class="line">            <span class="keyword">if</span> (obj <span class="keyword">instanceof</span> Exception) &#123;</div><div class="line">                Exception e = (Exception) obj;</div><div class="line">                StringWriter sw = <span class="keyword">new</span> StringWriter();</div><div class="line">                e.printStackTrace(<span class="keyword">new</span> PrintWriter(sw, <span class="keyword">true</span>));</div><div class="line">                String str = sw.toString();</div><div class="line">                log.error(location + str);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                log.error(location + obj.toString());</div><div class="line">            &#125;</div><div class="line">        &#125;<span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            log.error(e);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * debug</span></div><div class="line"><span class="comment">     * </span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> obj</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">debug</span><span class="params">(Object obj)</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span>&#123;</div><div class="line">            <span class="comment">/*** 获取输出信息的代码的位置 ***/</span></div><div class="line">            String location = <span class="string">""</span>;</div><div class="line">            StackTraceElement[] stacks = Thread.currentThread().getStackTrace();</div><div class="line">            location = stacks[<span class="number">2</span>].getClassName() + <span class="string">"."</span> + stacks[<span class="number">2</span>].getMethodName()</div><div class="line">                    + <span class="string">"("</span> + stacks[<span class="number">2</span>].getLineNumber() + <span class="string">")"</span>;</div><div class="line">            </div><div class="line">            <span class="comment">/*** 是否是异常  ***/</span></div><div class="line">            <span class="keyword">if</span> (obj <span class="keyword">instanceof</span> Exception) &#123;</div><div class="line">                Exception e = (Exception) obj;</div><div class="line">                StringWriter sw = <span class="keyword">new</span> StringWriter();</div><div class="line">                e.printStackTrace(<span class="keyword">new</span> PrintWriter(sw, <span class="keyword">true</span>));</div><div class="line">                String str = sw.toString();</div><div class="line">                log.debug(location + str);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                log.debug(location + obj.toString());</div><div class="line">            &#125;</div><div class="line">        &#125;<span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            log.error(e);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>代码忘了从哪里copy 过来的，暂时是这么用的，感觉可以自己定制打印这个规则很好，而且使用的时候直接调用静态方法就可以了，在也不用去各个类上面获取Logger 。</p>
<h5 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.devframe.util; </div><div class="line"></div><div class="line"><span class="keyword">import</span> org.junit.Test; </div><div class="line"><span class="keyword">import</span> org.junit.Before; </div><div class="line"><span class="keyword">import</span> org.junit.After; </div><div class="line"></div><div class="line"><span class="comment">/** </span></div><div class="line"><span class="comment">* Log Tester. </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">* <span class="doctag">@author</span> Zhang Kai </span></div><div class="line"><span class="comment">* <span class="doctag">@since</span> &lt;pre&gt;10/17/2017&lt;/pre&gt; </span></div><div class="line"><span class="comment">* <span class="doctag">@version</span> 1.0 </span></div><div class="line"><span class="comment">*/</span> </div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LogTest</span> </span>&#123; </div><div class="line"></div><div class="line"><span class="meta">@Before</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123; </div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="meta">@After</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123; </div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="comment">/** </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">* Method: warn(Object obj) </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">*/</span> </div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testWarn</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123; </div><div class="line"><span class="comment">//<span class="doctag">TODO:</span> Test goes here...</span></div><div class="line">    Log.warn(<span class="string">"他真的很喜欢你 像春雨下得淅淅沥沥"</span>);</div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="comment">/** </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">* Method: info(Object obj) </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">*/</span> </div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testInfo</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123; </div><div class="line"><span class="comment">//<span class="doctag">TODO:</span> Test goes here...</span></div><div class="line">    Log.info(<span class="string">"他真的很喜欢你 像夏日聒噪的蝉鸣"</span>);</div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="comment">/** </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">* Method: error(Object obj) </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">*/</span> </div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testError</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123; </div><div class="line"><span class="comment">//<span class="doctag">TODO:</span> Test goes here...</span></div><div class="line">    Log.error(<span class="string">"他真的很想念你 像秋叶落得悄无声息"</span>);</div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="comment">/** </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">* Method: debug(Object obj) </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">*/</span> </div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDebug</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123; </div><div class="line"><span class="comment">//<span class="doctag">TODO:</span> Test goes here...</span></div><div class="line">    Log.debug(<span class="string">"他真的很喜欢你 想冬天的雪沁在心里"</span>);</div><div class="line">&#125; </div><div class="line"></div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>测试结果， 这样定制的结果，更符合我们的阅读习惯，更加清晰的查看日志内容<br><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171017111758.png" alt="image"></p>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> log4j </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Java中Log4j的使用及配置详情]]></title>
      <url>/java-log4j.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><code>Log4j</code>是Apache的一个开源项目，通过使用Log4j，我们可以控制日志信息输送的目的地是控制台、文件、GUI组件，甚至是套接口服务器、NT的事件记录器、UNIX Syslog守护进程等；我们也可以控制每一条日志的输出格式；通过定义每一条日志信息的级别，我们能够更加细致地控制日志的生成过程。最令人感兴趣的就是，这些可以通过一个配置文件来灵活地进行配置，而不需要修改应用的代码。</p>
</blockquote>
<p>项目中日志功能十分强大，可以实时监控你的代码的运行情况，并且就像书页一样清晰可见。<br><a id="more"></a></p>
<h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><p>首先在pom.xml 配置好相关依赖，我这里只使用Log4j，当然还可以使用slf4j 可以管理，<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">log4j.version</span>&gt;</span>1.2.16<span class="tag">&lt;/<span class="name">log4j.version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;log4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>在web.xml 监听 log4j.properties<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 启动Log4j --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">context-param</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">param-name</span>&gt;</span>log4jConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:log4j.properties<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">listener</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.util.Log4jConfigListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">listener</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="配置log4j-properties-配置文件"><a href="#配置log4j-properties-配置文件" class="headerlink" title="配置log4j.properties 配置文件"></a>配置log4j.properties 配置文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">log4j.rootLogger=DEBUG, stdout , R  </div><div class="line">log4j.appender.stdout=org.apache.log4j.ConsoleAppender  </div><div class="line">log4j.appender.stdout.layout=org.apache.log4j.PatternLayout  </div><div class="line">log4j.appender.stdout.layout.ConversionPattern=[QC] %p [%t] %C.%M(%L) | %m%n  </div><div class="line">log4j.appender.R=org.apache.log4j.DailyRollingFileAppender  </div><div class="line">log4j.appender.R.File=d://log//FTASWorkFlow.log  </div><div class="line">log4j.appender.R.layout=org.apache.log4j.PatternLayout  </div><div class="line">log4j.appender.R.layout.ConversionPattern=%d-[TS] %p %t %c - %m%n&lt;/span&gt;</div></pre></td></tr></table></figure>
<h5 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h5><p><code>rootLogger</code>也可以写作<code>rootCategory</code>,<br>rootLogger value的含义<br>第一个逗号前表示log的级别：<code>FATAL</code>,<code>ERROR</code>,<code>WARN</code>,<code>INFO</code>,<code>DEBUG</code>,级别依次降低，开发的时候一般选作DEBUG，上线前期可以INFO或者DEBUG，版本稳定了可以WARN或者ERROR。稳定以后可以每天将日志发送到你的邮箱（至于怎么发，看最下面的Appender），这样就不需要每天去看检查上线的项目有没有异常。</p>
<p>第一个逗号后面的表示你定义的<code>appender</code>，比如我们这里定义了stdout和R，这个名字可以随便定，和下面的对应就好了。这里的stdout代表控制台输出，上线的时候别忘记关掉，直接在rootLogger里去掉stdout就好了。</p>
<h5 id="Log4j提供的appender有以下几种："><a href="#Log4j提供的appender有以下几种：" class="headerlink" title="Log4j提供的appender有以下几种："></a>Log4j提供的appender有以下几种：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">org.apache.log4j.ConsoleAppender（控制台）</div><div class="line">org.apache.log4j.FileAppender（文件）</div><div class="line">org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件）</div><div class="line">org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生新文件）</div><div class="line">org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）</div><div class="line">ConsoleAppender和DailyRollingFileAppender以及RollingFileAppender用的比较多，后面两个用哪个看需求。</div></pre></td></tr></table></figure>
<h5 id="log4j提供以下4种布局样式："><a href="#log4j提供以下4种布局样式：" class="headerlink" title="log4j提供以下4种布局样式："></a>log4j提供以下4种布局样式：</h5><p>不同的Appender有不同的属性，但是Appender都会有一个属性layout，layout又有一个属性PatternLayout<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">org.apache.log4j.HTMLLayout（以HTML表格形式布局）</div><div class="line">org.apache.log4j.PatternLayout（可以灵活地指定布局模式，就是可以自定义输出样式），</div><div class="line">org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），</div><div class="line">org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）</div></pre></td></tr></table></figure></p>
<h5 id="再看一下PatternLayout的值代表的什么意思"><a href="#再看一下PatternLayout的值代表的什么意思" class="headerlink" title="再看一下PatternLayout的值代表的什么意思"></a>再看一下PatternLayout的值代表的什么意思</h5><p><code>%d</code> 输出日志时间点的日期或时间，紧跟一对花括号进行自定义格式<br><code>%t</code> 输出产生该日志事件的线程名<br><code>%c</code> 输出所属的类目，通常就是所在类的全名<br><code>%l</code>  输出行号<br><code>%m</code> 输出代码中指定的消息<br><code>%n</code> 输出一个回车换行符，Windows平台为 <code>\r\n</code>，Unix平台为 <code>\n</code>，也就是一跳消息占用一行，所以<code>%m%n</code>基本都是一起用<br><code>%p</code> 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL<br>   我们经常会看到[%-5p]这样的用法，就是对%p进行格式化，占用几个字符空间，因为INFO，DEBUG他们有的占用4个有的占用5个，日志看起来不对其，进行一个格式化而已。<br><code>%r</code> 输出自应用启动到输出该log信息耗费的毫秒数<br><code>%c</code> 输出所属的类目，通常就是所在类的全名<br><code>%x</code> 输出对齐  </p>
<h5 id="再看看appender的其他属性"><a href="#再看看appender的其他属性" class="headerlink" title="再看看appender的其他属性"></a>再看看appender的其他属性</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">log4j.appender.FILE.File=D:/logs/log4j.log      --------定义输出文件的位置及文件名</div><div class="line">log4j.appender.FILE.MaxFileSize=1MB             --------定义每个文件的大小，超过这个大小，则新建一个文件，注意单位 MB 或 KB</div><div class="line">log4j.appender.D.Threshold = DEBUG              --------输出DEBUG级别以上的日志</div></pre></td></tr></table></figure>
<h5 id="输出到邮件"><a href="#输出到邮件" class="headerlink" title="输出到邮件"></a>输出到邮件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">log4j.appender.MAIL=org.apache.log4j.net.SMTPAppender（指定输出到邮件）</div><div class="line">log4j.appender.MAIL.Threshold=FATAL</div><div class="line">log4j.appender.MAIL.BufferSize=10</div><div class="line">log4j.appender.MAIL.From=chenyl@hollycrm.com（发件人）</div><div class="line">log4j.appender.MAIL.SMTPHost=mail.hollycrm.com（SMTP服务器）</div><div class="line">log4j.appender.MAIL.Subject=Log4J Message</div><div class="line">log4j.appender.MAIL.To=chenyl@hollycrm.com（收件人）</div><div class="line">log4j.appender.MAIL.layout=org.apache.log4j.PatternLayout（布局）</div><div class="line">log4j.appender.MAIL.layout.ConversionPattern=[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n（格式）</div><div class="line"> </div><div class="line">输出到数据库</div><div class="line">log4j.appender.DATABASE=org.apache.log4j.jdbc.JDBCAppender（指定输出到数据库）</div><div class="line">log4j.appender.DATABASE.URL=jdbc:mysql://localhost:3306/test（指定数据库URL）</div><div class="line">log4j.appender.DATABASE.driver=com.mysql.jdbc.Driver（指定数据库driver）</div><div class="line">log4j.appender.DATABASE.user=root（指定数据库用户）</div><div class="line">log4j.appender.DATABASE.password=root（指定数据库用户密码）</div><div class="line">log4j.appender.DATABASE.sql=INSERT INTO LOG4J (Message) VALUES (&apos;[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n&apos;)（组织SQL语句）</div><div class="line">log4j.appender.DATABASE.layout=org.apache.log4j.PatternLayout（布局）</div><div class="line">log4j.appender.DATABASE.layout.ConversionPattern=[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n（格式）</div></pre></td></tr></table></figure>
<h5 id="我的项目最终配置"><a href="#我的项目最终配置" class="headerlink" title="我的项目最终配置"></a>我的项目最终配置</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">### 设置级别和目的地(这里多个目的地) ###</div><div class="line">#级别为DEBUG</div><div class="line">#目的地为CONSOLE，zhangLog；zhangLog为自定义输出端，可随意命名</div><div class="line">log4j.rootLogger = DEBUG,CONSOLE,zhangLog</div><div class="line">### 这里的com.wuwii是包，也就是在这个包记录日志时，是只记录debug及以上级别的日志</div><div class="line">#### 当然就可以设定特定包打印的级别</div><div class="line">log4j.logger.com.wuwii=DEBUG</div><div class="line"></div><div class="line">#Log4j提供的appender有以下几种：</div><div class="line">#org.apache.log4j.ConsoleAppender（控制台），</div><div class="line">#org.apache.log4j.FileAppender（文件），</div><div class="line">#org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件），</div><div class="line">#org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件），</div><div class="line">#org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）</div><div class="line"></div><div class="line">### 输出到控制台 ###</div><div class="line">log4j.appender.CONSOLE = org.apache.log4j.ConsoleAppender</div><div class="line">log4j.appender.CONSOLE.Target = System.out</div><div class="line">log4j.appender.CONSOLE.layout = org.apache.log4j.PatternLayout</div><div class="line">log4j.appender.CONSOLE.layout.ConversionPattern =  %d&#123;ABSOLUTE&#125; %5p %c&#123;1&#125;:%L - %m%n</div><div class="line"></div><div class="line">### 输出到日志文件 ###</div><div class="line">#写到文件中，并且追加</div><div class="line">log4j.appender.zhangLog = org.apache.log4j.DailyRollingFileAppender</div><div class="line">log4j.appender.zhangLog.File =D\:\\debug.log</div><div class="line">#log4j.appender.zhangLog.File =/var/debug/debug.log</div><div class="line">log4j.appender.zhangLog.Append = true</div><div class="line">## 只输出DEBUG级别以上的日志</div><div class="line">log4j.appender.zhangLog.Threshold = DEBUG</div><div class="line">#&apos;.&apos;yyyy-MM-dd: 设置为每天产生一个新的文件</div><div class="line">#1)’.’yyyy-MM: 每月</div><div class="line">#2)’.’yyyy-ww: 每周</div><div class="line">#3)’.’yyyy-MM-dd: 每天</div><div class="line">#4)’.’yyyy-MM-dd-a: 每天两次</div><div class="line">#5)’.’yyyy-MM-dd-HH: 每小时</div><div class="line">#6)’.’yyyy-MM-dd-HH-mm: 每分钟</div><div class="line">log4j.appender.zhangLog.DatePattern = &apos;.&apos;yyyy-MM-dd</div><div class="line">#当文件达到2kb时，文件会被备份成&quot;debug.txt.1&quot;，新的&quot;log.txt&quot;继续记录log信息</div><div class="line">## 在DailyRollingFileAppender 没这个属性</div><div class="line">log4j.appender.zhangLog.MaxFileSize = 2KB </div><div class="line">#最多建5个文件，当文件个数较多时，后面不再新建文件</div><div class="line">## 在DailyRollingFileAppender 没这个属性</div><div class="line">log4j.appender.zhangLog.MaxBackupIndex = 5</div><div class="line">log4j.appender.zhangLog.layout = org.apache.log4j.PatternLayout</div><div class="line">log4j.appender.zhangLog.layout.ConversionPattern = %-d&#123;yyyy-MM-dd HH:mm:ss&#125; [%t:%r] - [%p] [%c&#123;1&#125;:%L] [%M] %m%n</div><div class="line">#设置子Logger是否继承父Logger的输出源</div><div class="line">#默认情况下子Logger会继承父Logger的appender，也就是说子Logger会在父Logger的appender里输出</div><div class="line">log4j.additivity.zhangLog = false</div></pre></td></tr></table></figure>
<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>测试的类没有启动 web ，默认的是查找 resources 根目录下的  <code>log4j.properties</code> ，没有则找不到。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">package com.wuwii.test;</div><div class="line">import org.apache.log4j.Logger;</div><div class="line"></div><div class="line">public class Log4jTest &#123;</div><div class="line">    public static Logger logger1 = Logger.getLogger(Log4jTest.class);</div><div class="line">    public static void main(String[] args) &#123;</div><div class="line">        //logger1</div><div class="line">        logger1.trace(&quot;他真的很喜欢你 像春雨下得淅淅沥沥，trace&quot;);</div><div class="line">        logger1.debug(&quot;他真的很喜欢你 像夏日聒噪的蝉鸣，debug&quot;);</div><div class="line">        logger1.info(&quot;他真的很想念你 像秋叶落得悄无声息，info&quot;);</div><div class="line">        logger1.warn(&quot;他真的很喜欢你 想冬天的雪沁在心里，warn&quot;);</div><div class="line">        logger1.error(&quot;他真的很喜欢你 像狗本性难移，error&quot;);</div><div class="line">        logger1.fatal(&quot;他真的很喜欢你 所以他可以一直没脸没皮，fatal&quot;);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>运行代码后，我们可以看到控制台打印了：</p>
<p><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171016224024.png" alt="image"></p>
<p>因为我们设置了输入到控制台了，再去查看我们的打印日志文件的位置，也可以看到报错信息，使用的 是<code>org.apache.log4j.DailyRollingFileAppender</code>，并没有 <code>maxBackupIndex</code> 和 <code>maxFileSize</code> 属性，所以上面的配置文件也不正确，需要删掉这两行，</p>
<p><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171016224226.png" alt="image"></p>
<p>使用的是每天生成一个文件，前一天的备份成<code>yyyy-MM-dd</code> 符合。</p>
<p>打开文件看到</p>
<p><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171016224532.png" alt="image"></p>
<p>正确写入，</p>
<p>Log4j的使用及配置就是这样的了。</p>
<p><strong>参考博客</strong> <a rel="external nofollow" target="_blank" href="http://blog.csdn.net/zhengliusu/article/details/44619023">http://blog.csdn.net/zhengliusu/article/details/44619023</a></p>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> log4j </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[使用spring-test 结合JUnit完成单元测试]]></title>
      <url>/spring-test.html</url>
      <content type="html"><![CDATA[<p>Java web项目怎么能少了spring ,当然少不了代码的单元测试，学习一下spring-test 结合 JUnit 完成单元测试，这样做会有很多好处，可以不用写额外一些方法去重复加载 applicationContext ，而且可以事务回滚等特点。下面再详细介绍。<br><a id="more"></a></p>
<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>很多人做单元测试的时候，还要在Before方法中，初始化Spring容器，导致容器被初始化多次。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Before</span>  </div><div class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;  </div><div class="line">      ApplicationContext ctx = <span class="keyword">new</span> FileSystemXmlApplicationContext( <span class="string">"classpath:spring/spring-basic.xml"</span>);  </div><div class="line">      baseDao = (IBaseDao) ctx.getBean(<span class="string">"baseDao"</span>);  </div><div class="line">      assertNotNull(baseDao);  </div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<p>在开发基于Spring的应用时，如果你还直接使用Junit进行单元测试，那你就错过了Spring满汉全席中最重要的一道硬菜。</p>
<p>再说这道菜之前，我们先来讨论下，在基于Spring的javaweb项目中使用Junit直接进行单元测试有什么不足</p>
<h4 id="导致多次Spring容器初始化问题"><a href="#导致多次Spring容器初始化问题" class="headerlink" title="导致多次Spring容器初始化问题"></a>导致多次Spring容器初始化问题</h4><p>根据JUnit测试方法的调用流程，每执行一个测试方法都会创建一个测试用例的实例并调用setUp()方法。由于一般情况下，我们在setUp()方法中初始化Spring容器，这意味着如果测试用例有多少个测试方法，Spring容器就会被重复初始化多次。虽然初始化Spring容器的速度并不会太慢，但由于可能会在Spring容器初始化时执行加载Hibernate映射文件等耗时的操作，如果每执行一个测试方法都必须重复初始化Spring容器，则对测试性能的影响是不容忽视的；<br> /////////使用Spring测试套件，Spring容器只会初始化一次！ </p>
<h4 id="需要使用硬编码方式手工获取Bean"><a href="#需要使用硬编码方式手工获取Bean" class="headerlink" title="需要使用硬编码方式手工获取Bean"></a>需要使用硬编码方式手工获取Bean</h4><p>  在测试用例类中我们需要通过ctx.getBean()方法从Spirng容器中获取需要测试的目标Bean，并且还要进行强制类型转换的造型操作。这种乏味的操作迷漫在测试用例的代码中，让人觉得烦琐不堪； </p>
<p>////////使用Spring测试套件，测试用例类中的属性会被自动填充Spring容器的对应Bean ，无须在手工设置Bean！ </p>
<h4 id="数据库现场容易遭受破坏"><a href="#数据库现场容易遭受破坏" class="headerlink" title="数据库现场容易遭受破坏"></a>数据库现场容易遭受破坏</h4><p>  测试方法对数据库的更改操作会持久化到数据库中。虽然是针对开发数据库进行操作，但如果数据操作的影响是持久的，可能会影响到后面的测试行为。举个例子，用户在测试方法中插入一条ID为1的User记录，第一次运行不会有问题，第二次运行时，就会因为主键冲突而导致测试用例失败。所以应该既能够完成功能逻辑检查，又能够在测试完成后恢复现场，不会留下“后遗症”； </p>
<p>////////使用Spring测试套件，Spring会在你验证后，自动回滚对数据库的操作，保证数据库的现场不被破坏，因此重复测试不会发生问题！ </p>
<h4 id="不方便对数据操作正确性进行检查"><a href="#不方便对数据操作正确性进行检查" class="headerlink" title="不方便对数据操作正确性进行检查"></a>不方便对数据操作正确性进行检查</h4><p>假如我们向登录日志表插入了一条成功登录日志，可是我们却没有对t_login_log表中是否确实添加了一条记录进行检查。一般情况下，我们可能是打开数据库，肉眼观察是否插入了相应的记录，但这严重违背了自动测试的原则。试想在测试包括成千上万个数据操作行为的程序时，如何用肉眼进行检查？ </p>
<p>////////只要你继承Spring的测试套件的用例类，你就可以通过jdbcTemplate在同一事务中访问数据库，查询数据的变化，验证操作的正确性！ </p>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h4 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h4><p>在pom.xml中加入相关依赖 spring-test,  JUnit</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">junit.version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">junit.version</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>4.2.4.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;junit.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure>
<p>需要注意使用前查看两个包相关版本能否兼容使用</p>
<h4 id="创建测试类"><a href="#创建测试类" class="headerlink" title="创建测试类"></a>创建测试类</h4><p>我使用的是<code>JUnitGenerator</code>自动生成的测试文件，后面再加入相关的 加载配置文件的注解，最后的代码是这样的：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">import</span> com.devframe.entity.FarmEntity;</div><div class="line"><span class="keyword">import</span> com.devframe.service.FarmService;</div><div class="line"><span class="keyword">import</span> org.junit.Test;</div><div class="line"><span class="keyword">import</span> org.junit.Before; </div><div class="line"><span class="keyword">import</span> org.junit.After;</div><div class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.test.annotation.Rollback;</div><div class="line"><span class="keyword">import</span> org.springframework.test.context.ContextConfiguration;</div><div class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringJUnit4ClassRunner;</div><div class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</div><div class="line"></div><div class="line"><span class="keyword">import</span> javax.annotation.Resource;</div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"><span class="comment">/** </span></div><div class="line"><span class="comment">* FarmServiceImpl Tester. </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">* <span class="doctag">@author</span> Zhang Kai </span></div><div class="line"><span class="comment">* <span class="doctag">@since</span> &lt;pre&gt;10/16/2017&lt;/pre&gt; </span></div><div class="line"><span class="comment">* <span class="doctag">@version</span> 1.0 </span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="meta">@RunWith</span>(SpringJUnit4ClassRunner.class)</div><div class="line"><span class="meta">@ContextConfiguration</span>(locations = &#123;<span class="string">"classpath:spring/applicationContext-base.xml"</span>&#125;)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FarmServiceImplTest</span> </span>&#123; </div><div class="line"></div><div class="line"><span class="meta">@Resource</span></div><div class="line">FarmService service;</div><div class="line"></div><div class="line"><span class="meta">@Before</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123; </div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="meta">@After</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123; </div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="comment">/** </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">* Method: setBaseDao(FarmDao dao) </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">*/</span> </div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSetBaseDao</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123; </div><div class="line"><span class="comment">//<span class="doctag">TODO:</span> Test goes here... </span></div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="comment">/** </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">* Method: findByOrgids(String pageindex, String pagesize, String where) </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">*/</span> </div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByOrgids</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123; </div><div class="line"><span class="comment">//<span class="doctag">TODO:</span> Test goes here... </span></div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="comment">/** </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">* Method: updateFarm(FarmEntity farmEntity) </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">*/</span> </div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="meta">@Transactional</span></div><div class="line"><span class="meta">@Rollback</span>(<span class="keyword">false</span>)</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdateFarm</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123; </div><div class="line"><span class="comment">//<span class="doctag">TODO:</span> Test goes here...</span></div><div class="line">    String sql = <span class="string">"UPDATE \"AGRI_FARM\" SET \"REMARK\"='备注'"</span>;</div><div class="line">    service.executeUpdate(sql);</div><div class="line">    String sql1 = <span class="string">"SELECT * FROM \"AGRI_FARM\""</span>;</div><div class="line">    List&lt;FarmEntity&gt; list = service.getBySql(sql1);</div><div class="line">    System.out.println(list.get(<span class="number">0</span>).getRemark());</div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="comment">/** </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">* Method: exist(String name) </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">*/</span> </div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testExist</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123; </div><div class="line"><span class="comment">//<span class="doctag">TODO:</span> Test goes here... </span></div><div class="line">&#125; </div><div class="line"></div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>测试结果（表里面只有一条数据，简单写下，平时千万不要这样写，哈哈）</p>
<p><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171016131207.png" alt="image"></p>
<p>证明测试成功了</p>
<p>把rollback改成 true ,默认就是为true<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Resource</span></div><div class="line"><span class="keyword">private</span> FarmDao dao;</div><div class="line"></div><div class="line"><span class="comment">/** </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">* Method: updateFarm(FarmEntity farmEntity) </span></div><div class="line"><span class="comment">* </span></div><div class="line"><span class="comment">*/</span> </div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="meta">@Transactional</span></div><div class="line"><span class="comment">//@Rollback(true)</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdateFarm</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123; </div><div class="line"><span class="comment">//<span class="doctag">TODO:</span> Test goes here...</span></div><div class="line">    dao.setRemarkValue(<span class="string">"备注44"</span>);</div><div class="line">    String sql1 = <span class="string">"SELECT * FROM \"AGRI_FARM\""</span>;</div><div class="line">    List&lt;FarmEntity&gt; list = service.getBySql(sql1);</div><div class="line">    System.out.println(list.get(<span class="number">0</span>).getRemark());</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>测试结果  </p>
<p><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171016140842.png" alt="image"><br>我update 的值是 “备注44” 查询出来的是 “备注11” ，后来一想这样自己写得有点傻了，其实这个方法写的没有一点用，现在只能证明数据库还没更改，但是事务还没结束嘛，肯定没入库，就不要介意了，就是这个意思了，测试完成看下数据变了没有，可以验证成功。</p>
<p><strong>需要注意</strong>  的是不能使用自己写的事务，不然会覆盖掉spring 容器的Transactional，导致测试的事务不能回滚，直接保存到数据库中的。</p>
<p>之前一直被这个问题卡住了，设置了<code>@Rollback(true)</code>都不能成功回滚事务，睡了一觉才知道，这个<code>executeUpdate</code>方法中自己写了一个事务，<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 删除表中的数据通过条件</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> * <span class="doctag">@param</span> sql：删改命令</span></div><div class="line"><span class="comment"> * <span class="doctag">@return</span> 执行是否成功</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="meta">@Transactional</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">executeUpdate</span><span class="params">(String sql)</span> </span>&#123;</div><div class="line">	EntityManager em = emf.createEntityManager();</div><div class="line">	em.getTransaction().begin();</div><div class="line">	Query query = em.createNativeQuery(sql);</div><div class="line">	<span class="keyword">int</span> count = query.executeUpdate();</div><div class="line">	em.getTransaction().commit();</div><div class="line">	em.close();</div><div class="line">	<span class="keyword">return</span> count &gt; <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>就是这样的。改成自己再Dao层重新写了个测试方法。可以的了。到此结束了。</p>
<p><strong>参考文章</strong> <a rel="external nofollow" target="_blank" href="http://blog.csdn.net/shan9liang/article/details/40452469">http://blog.csdn.net/shan9liang/article/details/40452469</a></p>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> JUnit </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Maven Scope定义值说明]]></title>
      <url>/maven-scope.html</url>
      <content type="html"><![CDATA[<h4 id="maven依赖关系中Scope的作用"><a href="#maven依赖关系中Scope的作用" class="headerlink" title="maven依赖关系中Scope的作用"></a>maven依赖关系中Scope的作用</h4><p><code>Dependency Scope</code> </p>
<p>在POM 4中，<dependency>中还引入了<scope>，它主要管理依赖的部署。目前<scope>可以使用5个值： </scope></scope></dependency></p>
<ul>
<li>compile，缺省值，适用于所有阶段，会随着项目一起发布。 </li>
<li>provided，类似compile，期望JDK、容器或使用者会提供这个依赖。如servlet.jar。 </li>
<li>runtime，只在运行时使用，如JDBC驱动，适用运行和测试阶段。 </li>
<li>test，只在测试时使用，用于编译和运行测试代码。不会随项目发布。 </li>
<li>system，类似provided，需要显式提供包含依赖的jar，Maven不会在Repository中查找它。<a id="more"></a>
</li>
</ul>
<h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><p>依赖范围控制哪些依赖在哪些classpath 中可用，哪些依赖包含在一个应用中。让我们详细看一下每一种范围：</p>
<h5 id="compile-（编译范围）"><a href="#compile-（编译范围）" class="headerlink" title="compile （编译范围）"></a>compile （编译范围）</h5><p>compile是默认的范围；如果没有提供一个范围，那该依赖的范围就是编译范围。编译范围依赖在所有的classpath 中可用，同时它们也会被打包。</p>
<h5 id="provided-（已提供范围）"><a href="#provided-（已提供范围）" class="headerlink" title="provided （已提供范围）"></a>provided （已提供范围）</h5><p>provided 依赖只有在当JDK 或者一个容器已提供该依赖之后才使用。例如，<br>如果你开发了一个web 应用，你可能在编译 classpath 中需要可用的Servlet API 来编译一个servlet，但是你不会想要在打包好的WAR 中包含这个Servlet API；这个Servlet API JAR 由你的应用服务器或者servlet 容器提供。已提供范围的依赖在编译classpath （不是运行时）可用。它们不是传递性的，也不会被打包。</p>
<h5 id="runtime-（运行时范围）"><a href="#runtime-（运行时范围）" class="headerlink" title="runtime （运行时范围）"></a>runtime （运行时范围）</h5><p>runtime 依赖在运行和测试系统的时候需要，但在编译的时候不需要。比如，你可能在编译的时候只需要JDBC API JAR，<br>而只有在运行的时候才需要JDBC<br>驱动实现。</p>
<h5 id="test-（测试范围）"><a href="#test-（测试范围）" class="headerlink" title="test （测试范围）"></a>test （测试范围）</h5><p>test范围依赖 在一般的编译和运行时都不需要，它们只有在测试编译和测试运行阶段可用。</p>
<h5 id="system-（系统范围）"><a href="#system-（系统范围）" class="headerlink" title="system （系统范围）"></a>system （系统范围）</h5><p>system范围依赖与provided 类似，但是你必须显式的提供一个对于本地系统中JAR 文件的路径。<br>这么做是为了允许基于本地对象编译，而这些对象是系统类库的一部分。这样的构件应该是一直可用的，Maven 也不会在仓库中去寻找它。<br>如果你将一个依赖范围设置成系统范围，你必须同时提供一个 systemPath 元素。注意该范围是不推荐使用的（你应该一直尽量去从公共或定制的 Maven 仓库中引用依赖）。</p>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul>
<li>默认的依赖范围是complie</li>
<li>test范围指的是测试范围有效，在编译和打包时都不会使用这个依赖，<scope>为test的jar不会传递依赖项目；</scope></li>
<li>compile范围指的是编译范围有效，在编译和打包时都会讲依赖存储进去；</li>
<li>provided依赖，在编译和测试的过程有效，最后生成var包时不会加入，诸如：servlet——api，因为servlet-api，tomcat等web服务器已经存在了，如果再打包会冲突；</li>
<li>runtime在运行的时候依赖，在编译的时候不依赖；</li>
</ul>
<p><strong>参考博客</strong> <a rel="external nofollow" target="_blank" href="http://blog.csdn.net/ld513508088/article/details/23827945">http://blog.csdn.net/ld513508088/article/details/23827945</a></p>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> maven </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[20171015]]></title>
      <url>/20171015.html</url>
      <content type="html"><![CDATA[<p>每次看到你发的那些难过的句子，</p>
<p>我也感觉心快要化了，</p>
<p>你曾经说过，</p>
<p>不谈恋爱了就不会有烦恼了，</p>
<p>那现在我真的不希望你谈恋爱了，<br>幸福真是个大鬼头，<br>我从没有拥有过，<br>也都对它失望了。</p>
<p>姑娘，你一定要好好照顾自己，</p>
<p>我在想好的女生都是被这样被逼的不想谈恋爱了吗，</p>
<p>在这段时间里，曾经天真活泼的你，瞬间就变得忧郁，有脾气了， 可能很多人认为你变了，不认识了吧。</p>
<p>虽然了解的你不多，但是我想你根本没变吧，只是善于伪装吧，伪装得太好，让别人看不出伤疤，看不到疼痛。</p>
<p>姑娘，真的没必要不要这样了，你说 心比长相好，懂比爱重要。我想一个对的人最起码不会让身边得人这么的难受，我想我虽然一直抱有幻想，但我可能也不是你生命中那个对的人，因为，我也伤害过你，现在留下的只有伤口和已经上锁的心。你这么优秀，没有什么错过的青春，错过的爱情，只是没遇到对的，总有一天，你可以等到那个对的人，宠着你的人，不让你难过的人，愿生活有诗，有梦，有远方，还有一个懂你、爱你的可心人。</p>
]]></content>
      
        <categories>
            
            <category> 碎碎念 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 心情 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Intellij使用JUnitGenerator V2.0自动生成单元测试代码]]></title>
      <url>/junitgenerator.html</url>
      <content type="html"><![CDATA[<p>单元测试平时开发的时候是大有打交道了，使用Intellij后，发现有这个自动生成Junit 4 单元测试代码的插件，就是要说的 <code>JUnitGenerator</code>。<a id="more"></a></p>
<h4 id="安装工具"><a href="#安装工具" class="headerlink" title="安装工具"></a>安装工具</h4><p>首先我的Intellij 版本是201702</p>
<p>settings -&gt; 搜索 JUnitGenerator 下载V2.0版本，安装插件，重启Intellij</p>
<h4 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h4><p>安装完插件，我们就可以进行自动生成单元测试代码了。<br>在要测试的类的页面，使用快捷键 <code>Alt + Insert</code> ，安装了JUnitGenerator 插件就会出现这个<code>JUnit Test</code> 选项，我们选择<code>Junit 4</code></p>
<p><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171015170801.png" alt="image"></p>
<p>这个时候虽然能生成测试代码，但是你会发现，它生成的位置不是我们需要的，没有生成到<code>test source</code> 文件夹下，所以需要设置下它的生成目录，</p>
<p>打开首先我的Intellij的 settings -&gt; Other Settings -&gt; 选第一个。<br><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171015171518.png" alt="image"><br>其中 Output Path 是设置我们自动生成的测试文件的位置，需要重新设置下到<br><code>${SOURCEPATH}/../../test/java/${PACKAGE}/${FILENAME}</code></p>
<p>然后就是最后的日期格式乱码，点开JUnit 4 选项卡，将<code>date</code> 改成 <code>today</code>，里面是模板，可以根据自己的需求自己改，毕竟，测试代码的命名就没那么严格了。</p>
<h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><p>我们使用的是Junit 4 的，肯定得先引入Junit 的依赖包，在pom.xml中加入它得依赖：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>不然生成出来的代码会报错的，找不到Jar包。。</p>
<p>改了上面的，应该就没什么问题。</p>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Intellij </tag>
            
            <tag> JUnitGenerator </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[使用Intellij 打包maven 项目，忽略单元测试代码]]></title>
      <url>/install-skip-test.html</url>
      <content type="html"><![CDATA[<p>使用<code>Eclipse</code> 的maven 打包部署项目，以前都是直接直接勾选 <code>Skip Tests</code> <a id="more"></a></p>
<p><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171015152112.png" alt="image"></p>
<p><del>使用好像 Intellij 没有这个选项</del>，只能使用maven 的命令 来进行这个操作，可以在项目的根目录直接<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mvn install -DskipTests</div></pre></td></tr></table></figure></p>
<p>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mvn install -Dmaven.test.skip=true</div></pre></td></tr></table></figure></p>
<p>或者直接在 Intellij 中Install 的时候 带上参数，点开 Intellij中右侧 的 MAVEN PROJECT -&gt; Lifecycle -&gt; install -&gt;右键选择 Create… -&gt; 在 install 后面加上参数 <code>-DskipTests</code></p>
<p><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171015153116.png" alt="image"></p>
<p>再去执行</p>
<p><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171015153608.png" alt="image"></p>
<p>SUCCESS!再去看看项目，单元测试代码没有打包。</p>
<hr>
<p>更新，发现了Intellij，有 Skip Tests 选项<br><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171015155149.png" alt="image"></p>
<hr>
<p>上面的小选项卡里的功能以前并没有注意到，仔细看了看，主要的还是跟Eclipse maven相似，只是源码可以自动下载，更强大了。。</p>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> maven </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[他真的很喜欢你]]></title>
      <url>/really-love.html</url>
      <content type="html"><![CDATA[<blockquote>
<p>他真的很喜欢你，认真且怂，从一而终。</p>
</blockquote>
<p><img src="https://i.loli.net/2017/10/15/59e238a08a631.jpg" alt="image"></p>
<a id="more"></a>
<p>“何谓孤寂？”<br>“清风，艳日，无笑意。”<br>“可否具体？”<br>“左拥，右抱，无情欲。”<br>“可否再具体？”<br>“不得你。”</p>
<p>“何为思念？”<br>“日月，星辰，旷野雨落。”<br>“可否具体？”<br>“山川，江流，烟袅湖泊。”<br>“可否再具体？”<br>“万物是你，无可躲。</p>
<p>“何为无救？”<br>“良药、妙方，无可医。”<br>“可否具体？”<br>“扁鹊、华佗，俱无策。”<br>“可否再具体？”<br>“念你成疾。”</p>
<p>“何谓求索？”<br>“落霞，朝阳，七千里。”<br>“可否具体？”<br>“夏雨，冬雪，九万顷。”<br>“可否再具体？”<br>“追寻你。”</p>
<p>“何谓伴侣？”<br>“柴米，油盐，木栅栏。”<br>“可否具体？”<br>“粗茶，淡饭，执子手。”<br>“可否再具体？”<br>“和你。”</p>
<p>“何谓漂泊？”<br>“飞蓬，飘萍，无根底。”<br>“可否具体？”<br>“只鹤，孤雁，寒塘独下迟。”<br>“可否再具体？”<br>“南游，东出，客愁，旅思，离乡千万里。”<br>“可否更具体？”<br>“春行，秋度，杳杳无归期。”<br>“仍是不解。”<br>“浪迹云游，何处寻你。”</p>
<p>“何谓难得？”<br>“落虹，繁星，山间风。”<br>“可否具体？”<br>“雾凇，凤翎，黄粱梦。”<br>“可否再具体？”<br>“伴你而生，有始无终。”</p>
<p>“何谓欢喜？”<br>“清风，晓月，伴星辰。”<br>“可否具体？”<br>“一见，再见，已倾心。”<br>“可否再具体？”<br>“余光皆是你。”</p>
<p>“何谓欣悦？”<br>“四海，三山，两心。”<br>“可否具体？”<br>“两人，三餐，四季。”<br>“可否再具体？”<br>“与你。”</p>
<p>“何谓愁？”<br>“江湖，灯市，檐下躲雨。”<br>“可否具体？”<br>“孤舟，青衫，长亭垂柳。”<br>“可否再具体？”<br>“所见是你，无可避。”</p>
<p>“何谓美人？”<br>“纤手，漾眸，柔腰肢。”<br>“可否具体？”<br>“橘子香气。”<br>“可否再具体？”<br>“汝。”</p>
<p>“何谓忧？”<br>“无笑，无乐，郁积于心。”<br>“可否具体？”<br>“思你，念你，不得见你。”<br>“可否再具体？”<br>“你已无意。”</p>
<p>“何谓空寂？”<br>“抬头，艳阳，流云里。”<br>“可否具体？”<br>“飘摇，流浪，无归期。”<br>“可否再具体？”<br>“没等到你。”  </p>
<p>“何为习性？”<br>“清茶，浊酒，和音伴。”<br>“可否具体？”<br>“跋山，涉水，曲随行。”<br>“可否再具体？”<br>“予你。”  </p>
<p>“何为等待？”<br>“不知几分红颜悴，多少相思碎。”<br>“可否详言？”<br>“花开花落两不知，惟介音无回。”<br>“可否甚解？”<br>“一叶一追寻，待一人与归。”    </p>
<p>“何为距离？”<br>“白云，大地，止相望。”<br>“可否具体？”<br>“树木，微风，终轻拂。”<br>“可否再具体？”<br>“你与我。”  </p>
<p>“何为思兮？”<br>“惦念，不语，乱了心。”<br>“可否具体？”<br>“失神差可拟。”<br>“可否再具体？”<br>“哪里都是你。”  </p>
<p>“何谓心安？”<br>“同月沽酌，千诗可叙”<br>“可否具体？”<br>“红色屋顶，白色窗棂。”<br>“可否再具体？”<br>“身边有你。”   </p>
<p>“何为心寒？”<br>“白雪、冷雨，冻寒骨。”<br>“可否具体？”<br>“深夜、凌晨，无可分。”<br>“可否再具体？”<br>“你，已弃。”  </p>
<p>“何为归途？”<br>“夜鸟 荒路 漫漫无期。”<br>“可否具体 ？”<br>“碎言 华灯 喧嚣无际。”<br>“可否再具体？”<br>“一诗 一酌 不觉千里。”<br>“仍是不解。”<br>“与你，四处为安。”  </p>
<p>“何谓笑意？”<br>“单车，白衣，晴空万里”<br>“可否具体？”<br>“天台，茉莉，七月初七”<br>“可否再具体？”<br>“花裙，背影，安然静谧”<br>“可否更具体？”<br>“一看到你”  </p>
<p>“何谓卑微？”<br>“清水，野草，无艳色。”<br>“可否具体？”<br>“爱情，亲情，无回报。”<br>“可否再具体？”<br>“入尘埃。”  </p>
<p>“何为知己？”<br>“相视，不语，已了然”<br>“可否具体？”<br>“浮华万物皆可抛”<br>“可否再具体？”<br>“愿得你”  </p>
<hr>
<p><strong>内容来自网易云《浮生》下面的热门的评论</strong></p>
<p>侵删</p>
]]></content>
      
        <categories>
            
            <category> 那些很美的句子 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 他真的很喜欢你 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Java客户端使用Jedis操作Redis]]></title>
      <url>/catch-jedis.html</url>
      <content type="html"><![CDATA[<h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p>搭建好redis ，这是我们需要在java中操作它，在这里我使用<code>jedis</code>  ，这次主要使用redis，存储信息，到时间超时，并且自动删除超时信息，累计数据List，达到一定数量，入库，删除，所以这个时候为了数据安全，删除完，才去写入新数据，需要写一个简单的分布式锁。</p>
<a id="more"></a>
<h3 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h3><h4 id="准备，导入Jar包"><a href="#准备，导入Jar包" class="headerlink" title="准备，导入Jar包"></a>准备，导入Jar包</h4><p>首先在<code>pox.xml</code>加入所需要的Jar 包：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">jedis.version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">jedis.version</span>&gt;</span></div><div class="line"></div><div class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">	    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>redis.clients<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">	    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jedis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">	    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jedis.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="编写连接工具类"><a href="#编写连接工具类" class="headerlink" title="编写连接工具类"></a>编写连接工具类</h4><p>首先编写工具类去连接redis：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</div><div class="line"><span class="keyword">import</span> redis.clients.jedis.JedisPool;</div><div class="line"><span class="keyword">import</span> redis.clients.jedis.JedisPoolConfig;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.Serializable;</div><div class="line"></div><div class="line"><span class="comment">/** </span></div><div class="line"><span class="comment">* <span class="doctag">@ClassName</span>: RedisUtil </span></div><div class="line"><span class="comment">* <span class="doctag">@Description</span>: redis工具类 </span></div><div class="line"><span class="comment">* <span class="doctag">@author</span> zhangkai </span></div><div class="line"><span class="comment">* <span class="doctag">@date</span> 2017年9月26日 下午3:20:29 </span></div><div class="line"><span class="comment">*  </span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisUtil</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span>&#123;</div><div class="line">    </div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">1149678082569464779L</span>;</div><div class="line"></div><div class="line">    <span class="comment">//Redis服务器IP</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span>  String addr;</div><div class="line">    </div><div class="line">    <span class="comment">//Redis的端口号</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> port;</div><div class="line">    </div><div class="line">    <span class="comment">//访问密码</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String auth;</div><div class="line">    </div><div class="line">    <span class="comment">//可用连接实例的最大数目，默认值为8；</span></div><div class="line">    <span class="comment">//如果赋值为-1，则表示不限制；如果pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)。</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> maxActive;</div><div class="line">    </div><div class="line">    <span class="comment">//控制一个pool最多有多少个状态为idle(空闲的)的jedis实例，默认值也是8。</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> maxIdle;</div><div class="line">    </div><div class="line">    <span class="comment">//等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时。如果超过等待时间，则直接抛出JedisConnectionException；</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> maxWait;</div><div class="line">    </div><div class="line">    <span class="meta">@SuppressWarnings</span>(<span class="string">"unused"</span>)</div><div class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> timeOut;</div><div class="line">    </div><div class="line">    <span class="comment">//在borrow一个jedis实例时，是否提前进行validate操作；如果为true，则得到的jedis实例均是可用的；</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> testOnBorrow;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Jedis jedis;<span class="comment">//非切片额客户端连接</span></div><div class="line">    </div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JedisPool jedisPool;<span class="comment">//非切片连接池</span></div><div class="line">    </div><div class="line">   <span class="comment">// public static ShardedJedis shardedJedis;//切片额客户端连接</span></div><div class="line">    </div><div class="line">   <span class="comment">// public static ShardedJedisPool shardedJedisPool;//切片连接池</span></div><div class="line">    </div><div class="line">    <span class="keyword">static</span> &#123;</div><div class="line">    	addr = PropertyUtil.get(<span class="string">"redis.addr"</span>);</div><div class="line">    	auth = PropertyUtil.get(<span class="string">"redis.auth"</span>);</div><div class="line">    	port = Integer.parseInt(PropertyUtil.get(<span class="string">"redis.port"</span>));</div><div class="line">    	maxIdle = Integer.parseInt(PropertyUtil.get(<span class="string">"redis.maxIdle"</span>));</div><div class="line">    	maxActive = Integer.parseInt(PropertyUtil.get(<span class="string">"redis.maxActive"</span>));</div><div class="line">    	maxWait = Integer.parseInt(PropertyUtil.get(<span class="string">"redis.maxWait"</span>));</div><div class="line">    	timeOut = Integer.parseInt(PropertyUtil.get(<span class="string">"redis.timeOut"</span>));</div><div class="line">    	testOnBorrow = PropertyUtil.get(<span class="string">"redis.testOnBorrow"</span>).equals(<span class="string">"true"</span>) ? <span class="keyword">true</span> :<span class="keyword">false</span>;</div><div class="line">    	initialPool();</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RedisUtil</span><span class="params">()</span></span>&#123;</div><div class="line">    	initialPool(); </div><div class="line">        jedis = getJedis();</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 初始化非切片池</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">initialPool</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">// 池基本配置 </span></div><div class="line">        JedisPoolConfig config = <span class="keyword">new</span> JedisPoolConfig();</div><div class="line">        config.setMaxTotal(maxActive); </div><div class="line">        config.setMaxIdle(maxIdle); </div><div class="line">        config.setMaxWaitMillis(maxWait); </div><div class="line">        config.setTestOnBorrow(testOnBorrow);</div><div class="line">        jedisPool = <span class="keyword">new</span> JedisPool(config, addr, port);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 获取Jedis实例</span></div><div class="line"><span class="comment">     * <span class="doctag">@return</span></span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">static</span> Jedis <span class="title">getJedis</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">if</span> (jedisPool != <span class="keyword">null</span>) &#123;</div><div class="line">               jedis = jedisPool.getResource();</div><div class="line">               jedis.auth(auth);<span class="comment">//认证</span></div><div class="line">               <span class="keyword">return</span> jedis;</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            Log.error(e);</div><div class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 释放jedis资源</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> jedis</span></div><div class="line"><span class="comment">     */</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">returnResource</span><span class="params">(<span class="keyword">final</span> Jedis jedis)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (jedis != <span class="keyword">null</span>) &#123;</div><div class="line">        	jedis.close();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>连接上redis我们就可以使用jedis操作我们的redis，直接写业务</p>
<h5 id="登陆，保存会话"><a href="#登陆，保存会话" class="headerlink" title="登陆，保存会话"></a>登陆，保存会话</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">login</span><span class="params">(String ucid)</span> </span>&#123;</div><div class="line">        Jedis jedisindex = getJedis();</div><div class="line">        String key = <span class="string">"login"</span> + ucid;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="comment">//设置登陆时常保存到30m，每次操作都会过来重新存下，重新刷新时间;</span></div><div class="line">            jedisindex.expire(key,  <span class="number">1800</span>);</div><div class="line">            </div><div class="line">            <span class="comment">//TODO code </span></div><div class="line">            </div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            LOGGER.error(e.getMessage(), e);</div><div class="line">        &#125; <span class="keyword">finally</span> &#123;</div><div class="line">            returnResource(jedisindex);</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h5 id="使用redis完成分布式锁"><a href="#使用redis完成分布式锁" class="headerlink" title="使用redis完成分布式锁"></a>使用redis完成分布式锁</h5><p>当一个用户满60条数据，进行数据入库，使用分布式锁<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment">  * xxxxxxx</span></div><div class="line"><span class="comment">  *</span></div><div class="line"><span class="comment">  * <span class="doctag">@param</span> key</span></div><div class="line"><span class="comment">  * <span class="doctag">@param</span> track</span></div><div class="line"><span class="comment">  * 满到60个 TIDD add</span></div><div class="line"><span class="comment">  */</span></div><div class="line"> <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addTrack</span><span class="params">(String ucid, String track, Jedis jedisindex)</span> </span>&#123;</div><div class="line">     <span class="keyword">try</span> &#123;</div><div class="line">         Boolean lockFlag = <span class="keyword">false</span>;</div><div class="line">         <span class="keyword">while</span> (!lockFlag) &#123;</div><div class="line">             lockFlag = lock(<span class="string">"lock"</span> + ucid, jedisindex); <span class="comment">//上锁</span></div><div class="line">             jedisindex.lpush(ucid, track); <span class="comment">//添加数据</span></div><div class="line">             unlock(<span class="string">"lock"</span> + ucid, jedisindex); <span class="comment">//释放锁</span></div><div class="line">         &#125;</div><div class="line">         <span class="keyword">long</span> len = jedisindex.llen(ucid);</div><div class="line">         lockFlag = <span class="keyword">false</span>;</div><div class="line">         <span class="keyword">if</span> (len &gt;= <span class="number">60</span>) &#123;</div><div class="line">             <span class="keyword">while</span> (!lockFlag) &#123;</div><div class="line">                 lockFlag = lock(<span class="string">"lock"</span> + ucid, jedisindex); <span class="comment">//上锁</span></div><div class="line">                  <span class="comment">//满了60条数据 去数据入库，并且删除redis中的value,</span></div><div class="line">               <span class="comment">// 我的下个业务 addHistoryTrack(ucid, jedisindex.lrange(ucid, 0, 59), jedisindex);</span></div><div class="line">                 unlock(<span class="string">"lock"</span> + ucid, jedisindex); <span class="comment">//释放锁</span></div><div class="line">             &#125;</div><div class="line">         &#125;</div><div class="line">     &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">         LOGGER.error(e.getMessage(), e);</div><div class="line">     &#125;</div><div class="line"> &#125;</div><div class="line"> </div><div class="line"> <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> LOCK_TIMEOUT = <span class="number">1</span>; <span class="comment">//加锁超时时间 单位秒  意味着加锁期间内执行完操作 如果未完成会有并发现象</span></div><div class="line"> </div><div class="line"> </div><div class="line">  <span class="comment">/**</span></div><div class="line"><span class="comment">  * 上锁</span></div><div class="line"><span class="comment">  */</span></div><div class="line"> <span class="meta">@Override</span></div><div class="line"> <span class="function"><span class="keyword">public</span> Boolean <span class="title">lock</span><span class="params">(String lock, Jedis jedisindex)</span> </span>&#123;</div><div class="line">     <span class="comment">// 1. 通过SETNX试图获取一个lock</span></div><div class="line">     <span class="keyword">boolean</span> success = <span class="keyword">false</span>;</div><div class="line">     <span class="keyword">long</span> value = System.currentTimeMillis() + LOCK_TIMEOUT * <span class="number">1000</span> + <span class="number">1</span>;</div><div class="line">     <span class="keyword">long</span> acquired = jedis.setnx(lock, String.valueOf(value));</div><div class="line">     jedisindex.expire(lock, LOCK_TIMEOUT);<span class="comment">//设置1秒超时 ,到时候自动释放锁</span></div><div class="line">     <span class="comment">//SETNX成功，则成功获取一个锁  </span></div><div class="line">     <span class="keyword">if</span> (acquired == <span class="number">1</span>) success = <span class="keyword">true</span>;</div><div class="line">     <span class="keyword">return</span> success;</div><div class="line"> &#125;</div><div class="line"></div><div class="line"> <span class="comment">/**</span></div><div class="line"><span class="comment">  * 解锁</span></div><div class="line"><span class="comment">  */</span></div><div class="line"> <span class="meta">@Override</span></div><div class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">unlock</span><span class="params">(String lock, Jedis jedisindex)</span> </span>&#123;</div><div class="line">     jedisindex.del(lock);</div><div class="line"> &#125;</div></pre></td></tr></table></figure></p>
<h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><ol>
<li>使用jedis操作redis，使用的是spring 框架，可以使用<code>Spring Data Redis</code> ,更符合java spring框架依赖注入的特性，使用上大同小异。</li>
<li>使用多线程操作redis 不要把 jedis 存入到<code>ThreadLocal</code> 或各种全局变量中， 可能出现冲突。需要重新从<code>jedisPool</code>获取<code>jedis</code>，然后用完关闭连接就行。</li>
</ol>
<h4 id="学习："><a href="#学习：" class="headerlink" title="学习："></a>学习：</h4><ol>
<li>以后了解对jedis关于事务、管道和分布式的使用。</li>
</ol>
<h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div></pre></td><td class="code"><pre><div class="line">1）连接操作命令</div><div class="line">   quit：关闭连接（connection）</div><div class="line">   auth：简单密码认证</div><div class="line">   help cmd： 查看cmd帮助，例如：help quit</div><div class="line">   </div><div class="line">   2）持久化</div><div class="line">   save：将数据同步保存到磁盘</div><div class="line">   bgsave：将数据异步保存到磁盘</div><div class="line">   lastsave：返回上次成功将数据保存到磁盘的Unix时戳</div><div class="line">   shundown：将数据同步保存到磁盘，然后关闭服务</div><div class="line">   </div><div class="line">   3）远程服务控制</div><div class="line">   info：提供服务器的信息和统计</div><div class="line">   monitor：实时转储收到的请求</div><div class="line">   slaveof：改变复制策略设置</div><div class="line">   config：在运行时配置Redis服务器</div><div class="line">   </div><div class="line">   4）对value操作的命令</div><div class="line">   exists(key)：确认一个key是否存在</div><div class="line">   del(key)：删除一个key</div><div class="line">   type(key)：返回值的类型</div><div class="line">   keys(pattern)：返回满足给定pattern的所有key</div><div class="line">   randomkey：随机返回key空间的一个</div><div class="line">   keyrename(oldname, newname)：重命名key</div><div class="line">   dbsize：返回当前数据库中key的数目</div><div class="line">   expire：设定一个key的活动时间（s）</div><div class="line">   ttl：获得一个key的活动时间</div><div class="line">   select(index)：按索引查询</div><div class="line">   move(key, dbindex)：移动当前数据库中的key到dbindex数据库</div><div class="line">   flushdb：删除当前选择数据库中的所有key</div><div class="line">   flushall：删除所有数据库中的所有key</div><div class="line">   </div><div class="line">   5）String</div><div class="line">   set(key, value)：给数据库中名称为key的string赋予值value</div><div class="line">   get(key)：返回数据库中名称为key的string的value</div><div class="line">   getset(key, value)：给名称为key的string赋予上一次的value</div><div class="line">   mget(key1, key2,…, key N)：返回库中多个string的value</div><div class="line">   setnx(key, value)：添加string，名称为key，值为value</div><div class="line">   setex(key, time, value)：向库中添加string，设定过期时间time</div><div class="line">   mset(key N, value N)：批量设置多个string的值</div><div class="line">   msetnx(key N, value N)：如果所有名称为key i的string都不存在</div><div class="line">   incr(key)：名称为key的string增1操作</div><div class="line">   incrby(key, integer)：名称为key的string增加integer</div><div class="line">   decr(key)：名称为key的string减1操作</div><div class="line">   decrby(key, integer)：名称为key的string减少integer</div><div class="line">   append(key, value)：名称为key的string的值附加value</div><div class="line">   substr(key, start, end)：返回名称为key的string的value的子串</div><div class="line">   </div><div class="line">   6）List </div><div class="line">   rpush(key, value)：在名称为key的list尾添加一个值为value的元素</div><div class="line">   lpush(key, value)：在名称为key的list头添加一个值为value的 元素</div><div class="line">   llen(key)：返回名称为key的list的长度</div><div class="line">   lrange(key, start, end)：返回名称为key的list中start至end之间的元素</div><div class="line">   ltrim(key, start, end)：截取名称为key的list</div><div class="line">   lindex(key, index)：返回名称为key的list中index位置的元素</div><div class="line">   lset(key, index, value)：给名称为key的list中index位置的元素赋值</div><div class="line">   lrem(key, count, value)：删除count个key的list中值为value的元素</div><div class="line">   lpop(key)：返回并删除名称为key的list中的首元素</div><div class="line">   rpop(key)：返回并删除名称为key的list中的尾元素</div><div class="line">   blpop(key1, key2,… key N, timeout)：lpop命令的block版本。</div><div class="line">   brpop(key1, key2,… key N, timeout)：rpop的block版本。</div><div class="line">   rpoplpush(srckey, dstkey)：返回并删除名称为srckey的list的尾元素，并将该元素添加到名称为dstkey的list的头部</div><div class="line">   </div><div class="line">   7）Set</div><div class="line">   sadd(key, member)：向名称为key的set中添加元素member</div><div class="line">   srem(key, member) ：删除名称为key的set中的元素member</div><div class="line">   spop(key) ：随机返回并删除名称为key的set中一个元素</div><div class="line">   smove(srckey, dstkey, member) ：移到集合元素</div><div class="line">   scard(key) ：返回名称为key的set的基数</div><div class="line">   sismember(key, member) ：member是否是名称为key的set的元素</div><div class="line">   sinter(key1, key2,…key N) ：求交集</div><div class="line">   sinterstore(dstkey, (keys)) ：求交集并将交集保存到dstkey的集合</div><div class="line">   sunion(key1, (keys)) ：求并集</div><div class="line">   sunionstore(dstkey, (keys)) ：求并集并将并集保存到dstkey的集合</div><div class="line">   sdiff(key1, (keys)) ：求差集</div><div class="line">   sdiffstore(dstkey, (keys)) ：求差集并将差集保存到dstkey的集合</div><div class="line">   smembers(key) ：返回名称为key的set的所有元素</div><div class="line">   srandmember(key) ：随机返回名称为key的set的一个元素</div><div class="line">   </div><div class="line">   8）Hash</div><div class="line">   hset(key, field, value)：向名称为key的hash中添加元素field</div><div class="line">   hget(key, field)：返回名称为key的hash中field对应的value</div><div class="line">   hmget(key, (fields))：返回名称为key的hash中field i对应的value</div><div class="line">   hmset(key, (fields))：向名称为key的hash中添加元素field </div><div class="line">   hincrby(key, field, integer)：将名称为key的hash中field的value增加integer</div><div class="line">   hexists(key, field)：名称为key的hash中是否存在键为field的域</div><div class="line">   hdel(key, field)：删除名称为key的hash中键为field的域</div><div class="line">   hlen(key)：返回名称为key的hash中元素个数</div><div class="line">   hkeys(key)：返回名称为key的hash中所有键</div><div class="line">   hvals(key)：返回名称为key的hash中所有键对应的value</div><div class="line">   hgetall(key)：返回名称为key的hash中所有的键（field）及其对应的value</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> redis </tag>
            
            <tag> jedis </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[关于升级有道云笔记v6.0.0.1]]></title>
      <url>/youdao-note.html</url>
      <content type="html"><![CDATA[<p>升级后有道云笔记确实有很大的改变，界面变得大方简洁了许多，但是左下角的广告还是在，免费版就不要介意了，网上又办法去掉它。反应速度快上不少，而且最爱的markdown语法看起来反应又快了，以前输入上了百行，拖动就有点卡了，难受得很。细心的人估计发现了，右下角多了一个图标，对的新版本多了三种模式：三栏模式、精简模式和编辑模式。试了一下，很优秀的一个功能。</p>
<p><img src="https://i.loli.net/2017/10/13/59e0609fa7fe2.png" alt="image"></p>
<a id="more"></a>
<p>当然更新是好事，但是我出现了个奇怪的问题，单击导航栏的目录，竟然不能预览文章。</p>
<p><img src="https://i.loli.net/2017/10/13/59e0601f2a9db.png" alt="image"></p>
<p>就是直接说无预览，非要我进入编辑模式，才能看到文章。</p>
<p>无奈，网上搜也没搜到，只好去撩客服了。</p>
<p><img src="https://ooo.0o0.ooo/2017/10/13/59e060bb5c8ae.png" alt="image"></p>
<p>清空就好了，重新登陆账户信息，浪费了不少时间了。。希望有道云笔记能越做越好吧。</p>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Youdao Note </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CENTOS 7 中报错 java.net.ConnectException Connection refused]]></title>
      <url>/tomcat-error01.html</url>
      <content type="html"><![CDATA[<p>再<code>centos7</code> 中正常启动<code>tomcat 9</code>，但是发现项目都不能正常访问，去关闭tomcat 却报错，如下：<a id="more"></a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># /opt/apache-tomcat-9.0.0.M22/bin/shutdown.sh </span></div><div class="line">Using CATALINA_BASE:   /opt/apache-tomcat-9.0.0.M22</div><div class="line">Using CATALINA_HOME:   /opt/apache-tomcat-9.0.0.M22</div><div class="line">Using CATALINA_TMPDIR: /opt/apache-tomcat-9.0.0.M22/temp</div><div class="line">Using JRE_HOME:        /opt/jdk1.8.0_131/jre</div><div class="line">Using CLASSPATH:       /opt/apache-tomcat-9.0.0.M22/bin/bootstrap.jar:/opt/apache-tomcat-9.0.0.M22/bin/tomcat-juli.jar</div><div class="line">十月 12, 2017 7:08:00 下午 org.apache.catalina.startup.Catalina stopServer</div><div class="line">严重: Could not contact [localhost:[8005]]. Tomcat may not be running.</div><div class="line">十月 12, 2017 7:08:00 下午 org.apache.catalina.startup.Catalina stopServer</div><div class="line">严重: Catalina.stop: </div><div class="line">java.net.ConnectException: 拒绝连接 (Connection refused)</div><div class="line">        at java.net.PlainSocketImpl.socketConnect(Native Method)</div><div class="line">        at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)</div><div class="line">        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)</div><div class="line">        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)</div><div class="line">        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)</div><div class="line">        at java.net.Socket.connect(Socket.java:589)</div><div class="line">        at java.net.Socket.connect(Socket.java:538)</div><div class="line">        at java.net.Socket.&lt;init&gt;(Socket.java:434)</div><div class="line">        at java.net.Socket.&lt;init&gt;(Socket.java:211)</div><div class="line">        at org.apache.catalina.startup.Catalina.stopServer(Catalina.java:478)</div><div class="line">        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</div><div class="line">        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)</div><div class="line">        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</div><div class="line">        at java.lang.reflect.Method.invoke(Method.java:498)</div><div class="line">        at org.apache.catalina.startup.Bootstrap.stopServer(Bootstrap.java:408)</div><div class="line">        at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:497)</div></pre></td></tr></table></figure></p>
<p>发现这种奇怪的问题，去检查端口，发现根本没有tomcat进程的端口：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">[root@localhost bin]<span class="comment">#  netstat -tnlp</span></div><div class="line">Active Internet connections (only servers)</div><div class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </div><div class="line">tcp        0      0 0.0.0.0:22122           0.0.0.0:*               LISTEN      63455/fdfs_trackerd </div><div class="line">tcp        0      0 0.0.0.0:3690            0.0.0.0:*               LISTEN      2855/svnserve       </div><div class="line">tcp        0      0 0.0.0.0:6379            0.0.0.0:*               LISTEN      127481/redis-server </div><div class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      1396/sshd           </div><div class="line">tcp        0      0 0.0.0.0:5432            0.0.0.0:*               LISTEN      183014/postgres     </div><div class="line">tcp        0      0 0.0.0.0:23000           0.0.0.0:*               LISTEN      64278/fdfs_storaged </div><div class="line">tcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN      2229/master         </div><div class="line">tcp        0      0 0.0.0.0:8001            0.0.0.0:*               LISTEN      98427/mosquitto     </div><div class="line">tcp        0      0 0.0.0.0:8002            0.0.0.0:*               LISTEN      72040/nginx: master </div><div class="line">tcp        0      0 0.0.0.0:8004            0.0.0.0:*               LISTEN      109896/vsftpd       </div><div class="line">tcp6       0      0 :::8009                 :::*                    LISTEN      104964/java         </div><div class="line">tcp6       0      0 :::6379                 :::*                    LISTEN      127481/redis-server </div><div class="line">tcp6       0      0 :::22                   :::*                    LISTEN      1396/sshd           </div><div class="line">tcp6       0      0 :::5432                 :::*                    LISTEN      183014/postgres     </div><div class="line">tcp6       0      0 ::1:25                  :::*                    LISTEN      2229/master      </div><div class="line">tcp6       0      0 :::8001                 :::*                    LISTEN      98427/mosquitto     </div><div class="line">tcp6       0      0 127.0.0.1:8005          :::*                    LISTEN      104964/java</div></pre></td></tr></table></figure></p>
<p>只好重新启动但是，还是启动后，还是没成功访问到项目，日志里也看不到什么多余的错误信息。</p>
<p>只好把项目删除了，再去启动tomcat，启动成功后，再去把war 包丢进webapps中，发现项目居然能成功访问，搞半天，没搞明白，估计还是项目有点问题，不能正常启动，直接把tomcat 弄死了。先记录下，以后有时间深入了解下。。</p>
<p>启动：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@localhost bin]<span class="comment"># startup.sh              </span></div><div class="line">Using CATALINA_BASE:   /opt/apache-tomcat-9.0.0.M22</div><div class="line">Using CATALINA_HOME:   /opt/apache-tomcat-9.0.0.M22</div><div class="line">Using CATALINA_TMPDIR: /opt/apache-tomcat-9.0.0.M22/temp</div><div class="line">Using JRE_HOME:        /opt/jdk1.8.0_131/jre</div><div class="line">Using CLASSPATH:       /opt/apache-tomcat-9.0.0.M22/bin/bootstrap.jar:/opt/apache-tomcat-9.0.0.M22/bin/tomcat-juli.jar</div><div class="line">Tomcat started.</div></pre></td></tr></table></figure></p>
<p>监视端口进程：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@localhost bin]<span class="comment"># netstat -tnlp|grep 8000</span></div><div class="line">tcp6       0      0 :::8000                 :::*                    LISTEN      104964/java</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> tomcat </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[easyui完成日期验证，控制日期的输入范围]]></title>
      <url>/easyui-validate-datebox.html</url>
      <content type="html"><![CDATA[<p>今天改前端问题时候遇到了这个问题，其实easyui还好，看官网例子，也可以解决我们的问题，但是现实业务中却是要考虑到各方面的，要做到更全。<br><a id="more"></a></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"height: 100%; width: 200px; margin-left: 4px; display: inline-block;"</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"Title"</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"Icon icon-calendar"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"Text"</span>&gt;</span>上传时间<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width: 120px; height: 38px; line-height: 38px; display: inline-block; float: left; margin-left: 5px;"</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"uploadtime1"</span> <span class="attr">class</span>=<span class="string">"easyui-datebox"</span> <span class="attr">data-options</span>=<span class="string">"width:120,height:24,editable:false"</span> /&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"height: 38px; width: 146px; margin-left: 4px; display: inline-block;"</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width: 12px; height: 100%; display: inline-block; line-height: 38px; text-align: center; float: left; margin-left: 2px;"</span>&gt;</span>至<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width: 120px; height: 100%; line-height: 38px; display: inline-block; margin-left: 12px; float: left;"</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"uploadtime2"</span> <span class="attr">class</span>=<span class="string">"easyui-datebox"</span> <span class="attr">data-options</span>=<span class="string">"width:120,height:24,editable:false,validType:'validateDate[\'#uploadtime1\']'"</span> /&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$.extend($.fn.validatebox.defaults.rules, &#123;</div><div class="line">    validateDate: &#123;</div><div class="line">        validator: <span class="function"><span class="keyword">function</span> (<span class="params">value, param</span>) </span>&#123;</div><div class="line">            <span class="keyword">var</span> start = $(param[<span class="number">0</span>]).datetimebox(<span class="string">'getValue'</span>);  <span class="comment">//获取开始时间</span></div><div class="line">            <span class="keyword">return</span> value &gt;= start;                             <span class="comment">//有效范围为当前时间大于开始时间</span></div><div class="line">        &#125;,</div><div class="line">        message: <span class="string">'结束日期应不能小于开始日期!'</span>                     <span class="comment">//匹配失败消息</span></div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>效果图：<br><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171011171235.png" alt="image"><br>这种方法使用的是easyui的验证，提醒错误错误信息的样式比较好，而且不用手动输入，当然也又有缺点，就是，当用户先输入结束日期，再输入开始日期，就不好去验证了。<br>可以使用例外一种方式控制，官网上看到的，就是控制输入<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">			$(<span class="string">'#dd'</span>).datebox().datebox(<span class="string">'calendar'</span>).calendar(&#123;</div><div class="line">				validator: <span class="function"><span class="keyword">function</span>(<span class="params">date</span>)</span>&#123;</div><div class="line">					<span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>();</div><div class="line">					<span class="keyword">var</span> d1 = <span class="keyword">new</span> <span class="built_in">Date</span>(now.getFullYear(), now.getMonth(), now.getDate());</div><div class="line">					<span class="keyword">var</span> d2 = <span class="keyword">new</span> <span class="built_in">Date</span>(now.getFullYear(), now.getMonth(), now.getDate()+<span class="number">10</span>);</div><div class="line">					<span class="keyword">return</span> d1&lt;=date &amp;&amp; date&lt;=d2;</div><div class="line">				&#125;</div><div class="line">			&#125;);</div><div class="line">		&#125;);</div></pre></td></tr></table></figure></p>
<p>效果图：<br><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171011172502.png" alt="image"><br>只能选择设置区域的日期，其余的不能选择。</p>
<p>需要注意的是<code>date-box</code>需要加上<code>editable:false</code>这个属性，不能让手动输入，只能选择。</p>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> easyui </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[如何使用postman测试上传文件接口，正确提交文件数据]]></title>
      <url>/postman-upload.html</url>
      <content type="html"><![CDATA[<p>今天使用<code>POSTMAN</code>测试文件上传，不太会用这个东东，刚开始发现这个<code>binary</code>是用来上传文件的，<br><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171010142016.png" alt="image"><br>以为用这个没错，但是使用的时候报错信息如下：</p>
<a id="more"></a>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>Apache Tomcat/7.0.37 - Error report<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="xml"><span class="comment">&lt;!--H1 &#123;font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;&#125; H2 &#123;font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;&#125; H3 &#123;font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;&#125; BODY &#123;font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;&#125; B &#123;font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;&#125; P &#123;font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;&#125;A &#123;color : black;&#125;A.name &#123;color : black;&#125;HR &#123;color : #525D76;&#125;--&gt;</span></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span> <span class="tag">&lt;/<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>HTTP Status 500 - Request processing failed; nested exception is org.springframework.web.multipart.MultipartException: The current request is not a multipart request<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;<span class="name">HR</span> <span class="attr">size</span>=<span class="string">"1"</span> <span class="attr">noshade</span>=<span class="string">"noshade"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>type<span class="tag">&lt;/<span class="name">b</span>&gt;</span> Exception report<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>message<span class="tag">&lt;/<span class="name">b</span>&gt;</span> <span class="tag">&lt;<span class="name">u</span>&gt;</span>Request processing failed; nested exception is org.springframework.web.multipart.MultipartException: The current request is not a multipart request<span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>description<span class="tag">&lt;/<span class="name">b</span>&gt;</span> <span class="tag">&lt;<span class="name">u</span>&gt;</span>The server encountered an internal error that prevented it from fulfilling this request.<span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>exception<span class="tag">&lt;/<span class="name">b</span>&gt;</span> <span class="tag">&lt;<span class="name">pre</span>&gt;</span>org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.springframework.web.multipart.MultipartException: The current request is not a multipart request</div><div class="line">	org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:981)</div><div class="line">	org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:871)</div><div class="line">	javax.servlet.http.HttpServlet.service(HttpServlet.java:647)</div><div class="line">	org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:845)</div><div class="line">	javax.servlet.http.HttpServlet.service(HttpServlet.java:728)</div><div class="line">	org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)</div><div class="line">	org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)</div><div class="line">	com.devframe.util.CorsFilter.doFilter(CorsFilter.java:23)</div><div class="line"><span class="tag">&lt;/<span class="name">pre</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>root cause<span class="tag">&lt;/<span class="name">b</span>&gt;</span> <span class="tag">&lt;<span class="name">pre</span>&gt;</span>org.springframework.web.multipart.MultipartException: The current request is not a multipart request</div><div class="line">	org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.assertIsMultipartRequest(RequestParamMethodArgumentResolver.java:216)</div><div class="line">	org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.resolveName(RequestParamMethodArgumentResolver.java:177)</div><div class="line">	org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:90)</div><div class="line">	org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:78)</div><div class="line">	org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:162)</div><div class="line">	org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:129)</div><div class="line">	org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)</div><div class="line">	org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)</div><div class="line">	org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)</div><div class="line">	org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)</div><div class="line">	org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)</div><div class="line">	org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)</div><div class="line">	org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:969)</div><div class="line">	org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:871)</div><div class="line">	javax.servlet.http.HttpServlet.service(HttpServlet.java:647)</div><div class="line">	org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:845)</div><div class="line">	javax.servlet.http.HttpServlet.service(HttpServlet.java:728)</div><div class="line">	org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)</div><div class="line">	org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)</div><div class="line">	com.devframe.util.CorsFilter.doFilter(CorsFilter.java:23)</div><div class="line"><span class="tag">&lt;/<span class="name">pre</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>note<span class="tag">&lt;/<span class="name">b</span>&gt;</span> <span class="tag">&lt;<span class="name">u</span>&gt;</span>The full stack trace of the root cause is available in the Apache Tomcat/7.0.37 logs.<span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">HR</span> <span class="attr">size</span>=<span class="string">"1"</span> <span class="attr">noshade</span>=<span class="string">"noshade"</span>&gt;</span><span class="tag">&lt;<span class="name">h3</span>&gt;</span>Apache Tomcat/7.0.37<span class="tag">&lt;/<span class="name">h3</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p>项目使用的是springMVC的 <code>MultipartFile</code> 接收的，服务端识别不出来文件。项目中使用的 js 的<code>FormDate</code>上传的，以前使用的 form 表单提交<code>enctype=&quot;multipart/form-data&quot;</code>这两种方法可以解决这个问题，但是postman中不知道怎么设置，刚好还是发现postman中又form-data这中方法提交，仔细一看原来可以选择file类型的参数，尴尬：<br><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171010142039.png" alt="image"><br>但是还是报错，仔细检查了参数，发现，postman中<code>Headers</code>设置了 <code>Content-Type</code> 使用<code>form-data</code>提交数据的时候不需要这个属性，删除。<br><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171010143123.png" alt="img"><br>做好上面的准备，上传完成。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="string">"statusCode"</span>: <span class="number">200</span>,</div><div class="line">    <span class="string">"message"</span>: <span class="string">"完成"</span>,</div><div class="line">    <span class="string">"data"</span>: [</div><div class="line">        &#123;</div><div class="line">            <span class="string">"name"</span>: <span class="string">"722f95b1-261e-4f42-b7fb-45552e01b9f2"</span>,</div><div class="line">            <span class="string">"byname"</span>: <span class="string">"v2-f26272e386f127af2e9263c83082b4a2_b.jpg"</span>,</div><div class="line">            <span class="string">"extname"</span>: <span class="string">".jpg"</span>,</div><div class="line">            <span class="string">"type"</span>: <span class="string">"图片"</span>,</div><div class="line">            <span class="string">"size"</span>: <span class="number">25</span>,</div><div class="line">            <span class="string">"path"</span>: <span class="string">"外网地址，不方便透露了"</span></div><div class="line">        &#125;</div><div class="line">    ]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>终于完成了。。</p>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> postman </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[JavaScript和jQuery中forEach和each的用法，以及各种遍历的使用]]></title>
      <url>/js-array.html</url>
      <content type="html"><![CDATA[<p>今天做个选择出id前缀为imgpreviwe的img标签，给它们个背景图片，直接想都没想，forEach调了半天，没调出来，才知道用错了方法。。哈哈，以前的东西忘得差不多了，重新学习一遍。。</p>
<a id="more"></a>
<p>正确的是这样写，使用<code>each</code>：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"[id^='imgpreviwe']"</span>, $(<span class="string">".MachineEdit"</span>, Dev.App.FillPanel.Target)).each(<span class="function"><span class="keyword">function</span> (<span class="params">index</span>) </span>&#123;</div><div class="line">                $(<span class="keyword">this</span>).attr(<span class="string">"src"</span>, <span class="string">"image/authorization/default.jpg"</span>);</div><div class="line">            &#125;);</div></pre></td></tr></table></figure></p>
<p>下面来重新学习一遍：</p>
<p>首先声明一个数组：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> array = [<span class="string">"z"</span>, <span class="string">"s"</span>, <span class="string">"y"</span>, <span class="string">"l"</span>, <span class="string">"v"</span>];</div></pre></td></tr></table></figure></p>
<p>首先来个最简单的遍历：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, len = array.length; i &lt; len; i++)&#123;</div><div class="line">          <span class="built_in">console</span>.log(array[i]);</div><div class="line">      &#125;</div></pre></td></tr></table></figure></p>
<p>运行结果是：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">z</div><div class="line">s</div><div class="line">y</div><div class="line">i</div><div class="line">v</div></pre></td></tr></table></figure></p>
<p>再来看下<code>forEach</code>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">array.forEach(console.log);</div></pre></td></tr></table></figure></p>
<p>运行结果：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">z 0 (5) [&quot;z&quot;, &quot;s&quot;, &quot;y&quot;, &quot;l&quot;, &quot;v&quot;]</div><div class="line">s 1 (5) [&quot;z&quot;, &quot;s&quot;, &quot;y&quot;, &quot;l&quot;, &quot;v&quot;]</div><div class="line">y 2 (5) [&quot;z&quot;, &quot;s&quot;, &quot;y&quot;, &quot;l&quot;, &quot;v&quot;]</div><div class="line">l 3 (5) [&quot;z&quot;, &quot;s&quot;, &quot;y&quot;, &quot;l&quot;, &quot;v&quot;]</div><div class="line">v 4 (5) [&quot;z&quot;, &quot;s&quot;, &quot;y&quot;, &quot;l&quot;, &quot;v&quot;]</div></pre></td></tr></table></figure>
<p>其实结果是一样的。。</p>
<p>了解到forEach的源码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment">@param &#123;function(T=, number=, Array.&lt;T&gt;=)&#125; callback</span></div><div class="line"><span class="comment">@param &#123;*&#125; [thisArg]</span></div><div class="line"><span class="comment">@return &#123;void&#125;</span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="built_in">Array</span>.prototype.forEach = <span class="function"><span class="keyword">function</span>(<span class="params">callback,thisArg</span>) </span>&#123;&#125;;</div></pre></td></tr></table></figure></p>
<p>后来发现它的使用：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">array.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">value,index,array</span>)</span>&#123;</div><div class="line">            <span class="built_in">console</span>.log(index + <span class="string">" : "</span> + value + <span class="string">" ~ "</span> + array);</div><div class="line">      &#125;);</div></pre></td></tr></table></figure></p>
<ul>
<li><code>value</code> 是遍历的值</li>
<li><code>index</code> 索引</li>
<li><code>array</code> 数组本身<br>运行结果：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">0 : z ~ z,s,y,l,v</div><div class="line">1 : s ~ z,s,y,l,v</div><div class="line">2 : y ~ z,s,y,l,v</div><div class="line">3 : l ~ z,s,y,l,v</div><div class="line">4 : v ~ z,s,y,l,v</div></pre></td></tr></table></figure>
</li>
</ul>
<p><code>map</code>：map即是 “映射”的意思 用法与 forEach 相似：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">array.map(<span class="function"><span class="keyword">function</span>(<span class="params">value,index,array</span>)</span>&#123;</div><div class="line">            <span class="built_in">console</span>.log(index + <span class="string">" : "</span> + value + <span class="string">" ~ "</span> + array);</div><div class="line">      &#125;);</div></pre></td></tr></table></figure></p>
<p>使用<code>each</code>来遍历数组：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$.each(array, <span class="function"><span class="keyword">function</span> (<span class="params">index, value</span>) </span>&#123;</div><div class="line">          <span class="built_in">console</span>.log(index + <span class="string">" : "</span> + value);</div><div class="line">      &#125;)</div></pre></td></tr></table></figure>
<p>结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">0 : z </div><div class="line">1 : s</div><div class="line">2 : y</div><div class="line">3 : l </div><div class="line">4 : v</div></pre></td></tr></table></figure></p>
<p>回归正题了，上面我们使用的是$().each()，处理Dom对象：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$(“input[name=’type’]”).each(<span class="function"><span class="keyword">function</span>(<span class="params">index</span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>($(<span class="keyword">this</span>).attr(‘checked’)==<span class="literal">true</span>)&#123;</div><div class="line">        <span class="comment">//code</span></div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<ul>
<li>index 为索引<br>找到所有input dom的 name 属性为 type ，  </li>
</ul>
<p>看下<code>jQuery each</code>源码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">each: <span class="function"><span class="keyword">function</span>(<span class="params"> obj, callback </span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> length, i = <span class="number">0</span>;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> ( isArrayLike( obj ) ) &#123;</div><div class="line">            length = obj.length;</div><div class="line">            <span class="keyword">for</span> ( ; i &lt; length; i++ ) &#123;</div><div class="line">                <span class="keyword">if</span> ( callback.call( obj[ i ], i, obj[ i ] ) === <span class="literal">false</span> ) &#123;</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">for</span> ( i <span class="keyword">in</span> obj ) &#123;</div><div class="line">                <span class="keyword">if</span> ( callback.call( obj[ i ], i, obj[ i ] ) === <span class="literal">false</span> ) &#123;</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> obj;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>看到别人写到，jQuery里的each方法是通过js里的call方法来实现的。<br>call这个方法很奇妙，其实官方的说明是：“调用一个对象的一个方法，以另一个对象替换当前对象。”网上更多的解释是变换上下文环境，也有说是改变上下文this指针。<br><code>call([thisObj[,arg1[, arg2[,   [,.argN]]]]])</code></p>
<p><strong>参数</strong><br><code>thisObj</code><br>可选项。将被用作当前对象的对象。 </p>
<p><code>arg1, arg2,  , argN</code><br>可选项。将被传递方法参数序列。</p>
<p>说明<br>call 方法可以用来代替另一个对象调用一个方法。call 方法可将一个函数的对象上下文从初始的上下文改变为由 thisObj 指定的新对象。</p>
<p>引用网上有一个很经典的例子:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">a,b</span>)</span>&#123;</div><div class="line">    alert(a+b);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sub</span>(<span class="params">a,b</span>)</span>&#123;</div><div class="line">    alert(a-b);</div><div class="line">&#125;</div><div class="line"></div><div class="line">add.call(sub,<span class="number">3</span>,<span class="number">1</span>);</div></pre></td></tr></table></figure></p>
<p>用 add 来替换 sub，add.call(sub,3,1) == add(3,1) ，所以运行结果为：<strong>alert(4)</strong>; </p>
<p>感觉有点厉害了。</p>
<p><strong>注意：</strong> js 中的函数其实是对象，函数名是对 Function 对象的引用。</p>
<p>需要注意的Javascript还有个<br><code>for/in</code> - 循环遍历对象的属性<br><strong>功能</strong> ：遍历对象属性，把属性名和属性值都提出来<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">(<span class="function"><span class="keyword">function</span> <span class="title">testForIn</span>(<span class="params"></span>) </span>&#123;</div><div class="line">          <span class="keyword">var</span> obj = &#123;</div><div class="line">              name: <span class="string">"zhangkai"</span>,</div><div class="line">              color: <span class="string">'green'</span>,</div><div class="line">              movie: <span class="string">'阿甘正传'</span>,</div><div class="line">          &#125;</div><div class="line">          <span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> obj)&#123;</div><div class="line">              <span class="built_in">console</span>.log(key + <span class="string">" : "</span> + obj[key]);</div><div class="line">          &#125;</div><div class="line">        &#125;)();</div></pre></td></tr></table></figure></p>
<p>结果:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">name : zhangkai</div><div class="line">color : green</div><div class="line">movie : 阿甘正传</div></pre></td></tr></table></figure>
<p>同样的for in 也能遍历数组:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">for (var i in array) &#123;</div><div class="line">          console.log(array[i]);</div><div class="line">      &#125;</div></pre></td></tr></table></figure></p>
<p>结果也是正常的，但是有时候，会打印出数组的函数<code>function</code>，遍历的时候不推荐使用这个。</p>
<p>当然还有while 遍历，那些就不仔细写了。</p>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> jQuery </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[一叶知秋]]></title>
      <url>/trend.html</url>
      <content type="html"><![CDATA[<p>今天晚上在小区里面慢跑，突然一个东西掉到我眼镜架上，塞在里面了，尬，拿下来一看，看到的是一片树叶。<br><img src="https://i.loli.net/2017/10/08/59da342e1af4a.jpg" alt="image"><br>时间过得真快，已经秋天了，今年国庆八天长假，也过完，我想，今后，再得过多少年，才有八天长假。</p>
<a id="more"></a>
<p>事情一直在发生，故事永远也写不完，我想我现在想什么，也许在眺望着什么，犹豫着什么，患得患失着什么。在每一刻，它都是好的。也许有一天，我老了，不再去疯了，就这么平静得下去。</p>
<p>我想我现在还是这么个人吧，一直以来也是，对身边的事情都是依依不舍的，但是我没有停留，紧跟着前进，真是想去浪迹天涯呀，但是那是不可能的，我有自己的牵挂与责任，我还是放不下，总有一天，我会老去，总是不想放过，但是时常会放弃自己的一些事情，为难着自己，不愿意离开。</p>
<p><img src="https://ooo.0o0.ooo/2017/10/08/59d9afb316e7f.png" alt="img"></p>
<p>也许是秋天总是会给人带来一丝惆怅的心情吧，不知不觉的，你就会触景生情，这个时候千万别拍照，别去看镜子，你会发现，不知不觉，多了一份沧桑，心里有一些焦灼，慢慢的会影响你的心绪。走的时候，又会浑然不知。</p>
<p>我想我现在还是正值好时光的年纪，即使不能清高，也要活出自我，最后像树叶一样洒脱的离开，因为，我想我正在它夏天的这个时候，还没到，还没到，还能享受最热烈的阳光。</p>
<p><img src="https://i.loli.net/2017/10/08/59da398b58f84.jpg" alt="image"></p>
<p>恍惚，秋分早已过，不用在意太多孰是孰非，早就没留退路，只能这样不顾一切，而你是否能明白了。</p>
]]></content>
      
        <categories>
            
            <category> 碎碎念 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 心情 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[log4j WARN No appenders could be found for logger]]></title>
      <url>/log-error.html</url>
      <content type="html"><![CDATA[<p>项目的日志以前没设置好，打印出来的东西一团糟。需要把项目的Log文件改一下，改好测试了，没问题，commit，结果突然发现项目启动不了，瞬间吓坏，倒退了，哈哈，机制。报错一大堆：<a id="more"></a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div></pre></td><td class="code"><pre><div class="line">严重: The web application [/devframe-server] created a ThreadLocal with key of <span class="built_in">type</span> [org.springframework.core.NamedThreadLocal] (value [Transactional resources]) and a value of <span class="built_in">type</span> [java.util.HashMap] (value [&#123;&#123;</div><div class="line">	CreateTime:<span class="string">"2017-10-08 16:24:04"</span>,</div><div class="line">	ActiveCount:1,</div><div class="line">	PoolingCount:0,</div><div class="line">	CreateCount:100,</div><div class="line">	DestroyCount:99,</div><div class="line">	CloseCount:1,</div><div class="line">	ConnectCount:2,</div><div class="line">	Connections:[</div><div class="line">	]</div><div class="line">&#125;</div><div class="line"></div><div class="line">[</div><div class="line">]=org.springframework.jdbc.datasource.ConnectionHolder@71579f16, org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@7998ca6f=org.springframework.orm.jpa.EntityManagerHolder@1fd59301&#125;]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.</div><div class="line">十月 08, 2017 4:24:25 下午 org.apache.catalina.loader.WebappClassLoader checkThreadLocalMapForLeaks</div><div class="line">严重: The web application [/devframe-server] created a ThreadLocal with key of <span class="built_in">type</span> [org.springframework.core.NamedThreadLocal] (value [Current AOP proxy]) and a value of <span class="built_in">type</span> [com.devframe.service.impl.DeviceServiceImpl$<span class="variable">$EnhancerBySpringCGLIB</span>$<span class="variable">$905a00fd</span>] (value [com.devframe.service.impl.DeviceServiceImpl@b16530c]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.</div><div class="line">十月 08, 2017 4:24:25 下午 org.apache.catalina.loader.WebappClassLoader checkThreadLocalMapForLeaks</div><div class="line">严重: The web application [/devframe-server] created a ThreadLocal with key of <span class="built_in">type</span> [org.springframework.core.NamedThreadLocal] (value [Actual transaction active]) and a value of <span class="built_in">type</span> [java.lang.Boolean] (value [<span class="literal">true</span>]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.</div><div class="line">十月 08, 2017 4:24:25 下午 org.apache.catalina.loader.WebappClassLoader checkThreadLocalMapForLeaks</div><div class="line">严重: The web application [/devframe-server] created a ThreadLocal with key of <span class="built_in">type</span> [org.springframework.core.NamedThreadLocal] (value [Transaction synchronizations]) and a value of <span class="built_in">type</span> [java.util.LinkedHashSet] (value [[]]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.</div><div class="line">十月 08, 2017 4:24:25 下午 org.apache.catalina.loader.WebappClassLoader checkThreadLocalMapForLeaks</div><div class="line">严重: The web application [/devframe-server] created a ThreadLocal with key of <span class="built_in">type</span> [org.springframework.core.NamedThreadLocal] (value [Current AOP method invocation]) and a value of <span class="built_in">type</span> [org.springframework.aop.framework.ReflectiveMethodInvocation] (value [ReflectiveMethodInvocation: public abstract java.util.List com.devframe.dao.DeviceDao.findBySerialnumber(java.lang.String); target is of class [org.springframework.data.jpa.repository.support.SimpleJpaRepository]]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.</div><div class="line">十月 08, 2017 4:24:25 下午 org.apache.catalina.loader.WebappClassLoader checkThreadLocalMapForLeaks</div><div class="line">严重: The web application [/devframe-server] created a ThreadLocal with key of <span class="built_in">type</span> [org.springframework.core.NamedThreadLocal] (value [Current transaction name]) and a value of <span class="built_in">type</span> [java.lang.String] (value [com.devframe.service.impl.DeviceServiceImpl.findBySerialnumber]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.</div><div class="line">十月 08, 2017 4:24:25 下午 org.apache.catalina.loader.WebappClassLoader checkThreadLocalMapForLeaks</div><div class="line">严重: Unable to determine string representation of value of <span class="built_in">type</span> [org.springframework.transaction.interceptor.TransactionAspectSupport.TransactionInfo]</div><div class="line">java.lang.NullPointerException</div><div class="line">	at org.springframework.transaction.interceptor.TransactionAspectSupport<span class="variable">$TransactionInfo</span>.toString(TransactionAspectSupport.java:624)</div><div class="line">	at org.apache.catalina.loader.WebappClassLoader.checkThreadLocalMapForLeaks(WebappClassLoader.java:2520)</div><div class="line">	at org.apache.catalina.loader.WebappClassLoader.checkThreadLocalsForLeaks(WebappClassLoader.java:2454)</div><div class="line">	at org.apache.catalina.loader.WebappClassLoader.clearReferences(WebappClassLoader.java:1995)</div><div class="line">	at org.apache.catalina.loader.WebappClassLoader.stop(WebappClassLoader.java:1901)</div><div class="line">	at org.apache.catalina.loader.WebappLoader.stopInternal(WebappLoader.java:662)</div><div class="line">	at org.apache.catalina.util.LifecycleBase.stop(LifecycleBase.java:232)</div><div class="line">	at org.apache.catalina.core.StandardContext.stopInternal(StandardContext.java:5526)</div><div class="line">	at org.apache.catalina.util.LifecycleBase.stop(LifecycleBase.java:232)</div><div class="line">	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:160)</div><div class="line">	at org.apache.catalina.core.ContainerBase<span class="variable">$StartChild</span>.call(ContainerBase.java:1559)</div><div class="line">	at org.apache.catalina.core.ContainerBase<span class="variable">$StartChild</span>.call(ContainerBase.java:1549)</div><div class="line">	at java.util.concurrent.FutureTask.run(FutureTask.java:266)</div><div class="line">	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)</div><div class="line">	at java.util.concurrent.ThreadPoolExecutor<span class="variable">$Worker</span>.run(ThreadPoolExecutor.java:624)</div><div class="line">	at java.lang.Thread.run(Thread.java:748)</div><div class="line"></div><div class="line">十月 08, 2017 4:24:25 下午 org.apache.catalina.loader.WebappClassLoader checkThreadLocalMapForLeaks</div><div class="line">严重: The web application [/devframe-server] created a ThreadLocal with key of <span class="built_in">type</span> [org.springframework.core.NamedThreadLocal] (value [Current aspect-driven transaction]) and a value of <span class="built_in">type</span> [org.springframework.transaction.interceptor.TransactionAspectSupport.TransactionInfo] (value [Unknown]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.</div><div class="line">十月 08, 2017 4:24:25 下午 org.apache.coyote.AbstractProtocol start</div><div class="line">信息: Starting ProtocolHandler [<span class="string">"http-bio-8081"</span>]</div><div class="line">十月 08, 2017 4:24:25 下午 org.apache.catalina.loader.WebappClassLoader loadClass</div><div class="line">信息: Illegal access: this web application instance has been stopped already.  Could not load org.hibernate.engine.transaction.internal.jta.JtaStatusHelper.  The eventual following stack trace is caused by an error thrown <span class="keyword">for</span> debugging purposes as well as to attempt to terminate the thread <span class="built_in">which</span> caused the illegal access, and has no functional impact.</div><div class="line">java.lang.IllegalStateException</div><div class="line">	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1599)</div><div class="line">	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1558)</div><div class="line">	at org.hibernate.engine.transaction.internal.TransactionCoordinatorImpl.afterTransaction(TransactionCoordinatorImpl.java:142)</div><div class="line">	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.afterTransactionCompletion(JdbcTransaction.java:138)</div><div class="line">	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.rollback(AbstractTransactionImpl.java:213)</div><div class="line">	at org.hibernate.jpa.internal.TransactionImpl.rollback(TransactionImpl.java:108)</div><div class="line">	at org.springframework.orm.jpa.JpaTransactionManager.doRollback(JpaTransactionManager.java:544)</div><div class="line">	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:853)</div><div class="line">	at org.springframework.transaction.support.AbstractPlatformTransactionManager.rollback(AbstractPlatformTransactionManager.java:830)</div><div class="line">	at org.springframework.transaction.interceptor.TransactionAspectSupport.completeTransactionAfterThrowing(TransactionAspectSupport.java:503)</div><div class="line">	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:285)</div><div class="line">	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)</div><div class="line">	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)</div><div class="line">	at org.springframework.aop.framework.CglibAopProxy<span class="variable">$DynamicAdvisedInterceptor</span>.intercept(CglibAopProxy.java:655)</div><div class="line">	at com.devframe.service.impl.DeviceServiceImpl$<span class="variable">$EnhancerBySpringCGLIB</span>$<span class="variable">$905a00fd</span>.findBySerialnumber(&lt;generated&gt;)</div><div class="line">	at com.devframe.util.mqtt.TimingPublish.run(TimingPublish.java:241)</div><div class="line">	at com.devframe.service.impl.MqttServerImpl.callBackChoose(MqttServerImpl.java:108)</div><div class="line">	at com.devframe.util.mqtt.ServerMQTT.messageArrived(ServerMQTT.java:161)</div><div class="line">	at org.eclipse.paho.client.mqttv3.internal.CommsCallback.deliverMessage(CommsCallback.java:499)</div><div class="line">	at org.eclipse.paho.client.mqttv3.internal.CommsCallback.handleMessage(CommsCallback.java:402)</div><div class="line">	at org.eclipse.paho.client.mqttv3.internal.CommsCallback.run(CommsCallback.java:206)</div><div class="line">	at java.util.concurrent.Executors<span class="variable">$RunnableAdapter</span>.call(Executors.java:511)</div><div class="line">	at java.util.concurrent.FutureTask.run(FutureTask.java:266)</div><div class="line">	at java.util.concurrent.ScheduledThreadPoolExecutor<span class="variable">$ScheduledFutureTask</span>.access<span class="variable">$201</span>(ScheduledThreadPoolExecutor.java:180)</div><div class="line">	at java.util.concurrent.ScheduledThreadPoolExecutor<span class="variable">$ScheduledFutureTask</span>.run(ScheduledThreadPoolExecutor.java:293)</div><div class="line">	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)</div><div class="line">	at java.util.concurrent.ThreadPoolExecutor<span class="variable">$Worker</span>.run(ThreadPoolExecutor.java:624)</div><div class="line">	at java.lang.Thread.run(Thread.java:748)</div><div class="line"></div><div class="line">十月 08, 2017 4:24:25 下午 org.apache.catalina.loader.WebappClassLoader loadClass</div><div class="line">信息: Illegal access: this web application instance has been stopped already.  Could not load org.eclipse.paho.client.mqttv3.internal.MessageCatalog.  The eventual following stack trace is caused by an error thrown <span class="keyword">for</span> debugging purposes as well as to attempt to terminate the thread <span class="built_in">which</span> caused the illegal access, and has no functional impact.</div><div class="line">java.lang.IllegalStateException</div><div class="line">	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1599)</div><div class="line">	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1558)</div><div class="line">	at org.eclipse.paho.client.mqttv3.MqttException.getMessage(MqttException.java:225)</div><div class="line">	at org.eclipse.paho.client.mqttv3.MqttException.toString(MqttException.java:233)</div><div class="line">	at java.lang.String.valueOf(String.java:2994)</div><div class="line">	at java.io.PrintStream.println(PrintStream.java:821)</div><div class="line">	at java.lang.Throwable<span class="variable">$WrappedPrintStream</span>.println(Throwable.java:748)</div><div class="line">	at java.lang.Throwable.printStackTrace(Throwable.java:655)</div><div class="line">	at java.lang.Throwable.printStackTrace(Throwable.java:643)</div><div class="line">	at java.lang.Throwable.printStackTrace(Throwable.java:634)</div><div class="line">	at com.devframe.util.mqtt.ServerMQTT.connectionLost(ServerMQTT.java:144)</div><div class="line">	at org.eclipse.paho.client.mqttv3.internal.CommsCallback.connectionLost(CommsCallback.java:292)</div><div class="line">	at org.eclipse.paho.client.mqttv3.internal.ClientComms.shutdownConnection(ClientComms.java:423)</div><div class="line">	at org.eclipse.paho.client.mqttv3.internal.CommsCallback.run(CommsCallback.java:220)</div><div class="line">	at java.util.concurrent.Executors<span class="variable">$RunnableAdapter</span>.call(Executors.java:511)</div><div class="line">	at java.util.concurrent.FutureTask.run(FutureTask.java:266)</div><div class="line">	at java.util.concurrent.ScheduledThreadPoolExecutor<span class="variable">$ScheduledFutureTask</span>.access<span class="variable">$201</span>(ScheduledThreadPoolExecutor.java:180)</div><div class="line">	at java.util.concurrent.ScheduledThreadPoolExecutor<span class="variable">$ScheduledFutureTask</span>.run(ScheduledThreadPoolExecutor.java:293)</div><div class="line">	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)</div><div class="line">	at java.util.concurrent.ThreadPoolExecutor<span class="variable">$Worker</span>.run(ThreadPoolExecutor.java:624)</div><div class="line">	at java.lang.Thread.run(Thread.java:748)</div><div class="line"></div><div class="line">十月 08, 2017 4:24:38 下午 org.apache.catalina.loader.WebappClassLoader loadClass</div><div class="line">信息: Illegal access: this web application instance has been stopped already.  Could not load org.apache.commons.pool2.impl.EvictionConfig.  The eventual following stack trace is caused by an error thrown <span class="keyword">for</span> debugging purposes as well as to attempt to terminate the thread <span class="built_in">which</span> caused the illegal access, and has no functional impact.</div><div class="line">java.lang.IllegalStateException</div><div class="line">	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1599)</div><div class="line">	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1558)</div><div class="line">	at org.apache.commons.pool2.impl.GenericObjectPool.evict(GenericObjectPool.java:743)</div><div class="line">	at org.apache.commons.pool2.impl.BaseGenericObjectPool<span class="variable">$Evictor</span>.run(BaseGenericObjectPool.java:1036)</div><div class="line">	at java.util.TimerThread.mainLoop(Timer.java:555)</div><div class="line">	at java.util.TimerThread.run(Timer.java:505)</div></pre></td></tr></table></figure>
<p>根据上面查找问题，刚开始一直以为是 mqtt 出现错误了，检查完全没问题，而且最近只是修改了其他的内容，一想到我刚刚改了log4j，估计是它除了错误，但是上面的错误信息完全没给我有用的提示信息，只能知道<code>web root</code> 都没能启动，就去各个spring配置文件看，但是没发现有配置log4j的位置，最后功夫不负有心人终于在<code>web.xml</code>看到了一段话</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 启动Log4j --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">context-param</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">param-name</span>&gt;</span>log4jConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:log4j.properties<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">listener</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.util.Log4jConfigListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">listener</span>&gt;</span></div></pre></td></tr></table></figure>
<p>跟我目前路径不一致，改好后，成功启动。。。莫名其妙了。</p>
<p>网上查了下，日志出现错误，找不到<code>log4j.properties</code>报错是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">log4j:WARN No appenders could be found for logger (org.apache.ibatis.logging.LogFactory).   </div><div class="line">log4j:WARN Please initialize the log4j system properly.</div></pre></td></tr></table></figure></p>
<p>那就不得而知了。</p>
<p>总算解决了。。</p>
<p>总结：</p>
<ol>
<li>部署的项目在<code>WEB-INF/classes/</code>路径下加上文件 <code>log4j.properties</code> ,开发中，我使用的是maven构建项目的，所以，在<code>resources</code> 文件下加入 <code>log4j.properties</code> 就可以了。</li>
<li>这样下去启动下去仍然会报错，Web开发的时候，spring容器启动去读取这个log4j的配置文件的时候，找不到它，所以要在 <code>web.xml</code> 中重新配置文件位置：<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 启动Log4j --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">context-param</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">param-name</span>&gt;</span>log4jConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:log4j.properties<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">listener</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.util.Log4jConfigListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">listener</span>&gt;</span></div></pre></td></tr></table></figure></li>
</ol>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> log4j </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[我想分享你的悲伤]]></title>
      <url>/share-sadness.html</url>
      <content type="html"><![CDATA[<h3 id="我想分享你的悲伤"><a href="#我想分享你的悲伤" class="headerlink" title="我想分享你的悲伤"></a>我想分享你的悲伤</h3><p>我想分享你的悲伤，</p>
<p>我要成为故事中的小丑，</p>
<p>将悲伤写进喜剧中。</p>
<p>我想分享你的悲伤，</p>
<p>我会强颜为笑，</p>
<p>带上面具，</p>
<p>安慰你。</p>
<p>我想分享你的悲伤</p>
<p>但我不能将悲伤带给你，</p>
<p>因为哄你开心，</p>
<p>才是我的责任，</p>
<p>即便是伤痕累累，</p>
<p>你一笑，</p>
<p>我便好。</p>
<p>我想分享你的悲伤，</p>
<p>永远微笑，</p>
<p>不贪婪。</p>
]]></content>
      
        <categories>
            
            <category> 碎碎念 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 心情 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[jQuery实现多文件上传并预览]]></title>
      <url>/multiple-file-upload.html</url>
      <content type="html"><![CDATA[<p>自己做了个文件上传，样式有些简陋，功能还需以后完善。中间遇到了一些问题，在这里记录下。<a id="more"></a></p>
<h3 id="样式"><a href="#样式" class="headerlink" title="样式"></a>样式</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"height: 82px; width: 100%; border-bottom: 1px solid #ddd;padding-top: 5px"</span>&gt;</span></div><div class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width: 80px; height: 82px;float: left;text-align: right; line-height: 72px;"</span>&gt;</span>反馈图片<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">           <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">class</span>=<span class="string">"file"</span>&gt;</span>选择文件</div><div class="line">               <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">accept</span>=<span class="string">"image/png,image/gif,image/jpg,image/jpeg"</span> <span class="attr">id</span>=<span class="string">"files"</span> <span class="attr">name</span>=<span class="string">"files"</span> <span class="attr">multiple</span> /&gt;</span></div><div class="line">           <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"preview"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.file</span> &#123;</div><div class="line">    <span class="attribute">float</span>: left;</div><div class="line">    <span class="attribute">position</span>: relative;</div><div class="line">    <span class="attribute">display</span>: block;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#03afD9</span>;</div><div class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#99D3F5</span>;</div><div class="line">    <span class="attribute">border-radius</span>: <span class="number">4px</span>;</div><div class="line">    <span class="attribute">margin-left</span>: <span class="number">5px</span>;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">4px</span> <span class="number">12px</span>;</div><div class="line">    <span class="attribute">overflow</span>: hidden;</div><div class="line">    <span class="attribute">color</span>: white;</div><div class="line">    <span class="attribute">text-decoration</span>: none;</div><div class="line">    <span class="attribute">text-indent</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">line-height</span>: <span class="number">20px</span>;</div><div class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.file</span> <span class="selector-tag">input</span> &#123;</div><div class="line">    <span class="attribute">position</span>: absolute;</div><div class="line">    <span class="attribute">font-size</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.file</span><span class="selector-pseudo">:hover</span> &#123;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#95B8E7</span>;</div><div class="line">    <span class="attribute">border-color</span>: <span class="number">#78C3F3</span>;</div><div class="line">    <span class="attribute">color</span>: white;</div><div class="line">    <span class="attribute">text-decoration</span>: none;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//下面用于多图片上传预览功能</span></div><div class="line">        <span class="function"><span class="keyword">function</span> <span class="title">setImagePreviews</span>(<span class="params">docObj</span>) </span>&#123;</div><div class="line">            <span class="keyword">var</span> preview = $(<span class="string">"#preview"</span>, $(<span class="string">".MachineEdit"</span>, Dev.App.FillPanel.Target));</div><div class="line">            preview.html(<span class="string">""</span>);</div><div class="line">            fileList = docObj.files;</div><div class="line">            <span class="keyword">if</span> (fileList.length &gt; <span class="number">3</span>)&#123;</div><div class="line">                <span class="keyword">return</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; fileList.length; i++) &#123;</div><div class="line">                <span class="keyword">if</span> (!checkType(fileList[i].name))&#123;</div><div class="line">                    preview.html(<span class="string">""</span>);</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">                preview.append(<span class="string">"&lt;div style='float:left;cursor:pointer;margin-left: 3px;' &gt;&lt;img id='img"</span> + i + <span class="string">"' /&gt; &lt;/div&gt;"</span>);</div><div class="line">                <span class="keyword">var</span> imgObjPreview = $(<span class="string">"#img"</span>+i, $(<span class="string">".MachineEdit"</span>, Dev.App.FillPanel.Target));</div><div class="line">                <span class="keyword">if</span> (fileList &amp;&amp; fileList[i]) &#123;</div><div class="line">                    <span class="comment">//火狐下，直接设img属性</span></div><div class="line">                    imgObjPreview.css(<span class="string">"display"</span>,<span class="string">"block"</span>);</div><div class="line">                    <span class="comment">//控制缩略图大小</span></div><div class="line">                    imgObjPreview.width(<span class="number">70</span>);</div><div class="line">                    imgObjPreview.height(<span class="number">70</span>);</div><div class="line">                    <span class="comment">//imgObjPreview.src = docObj.files[0].getAsDataURL();</span></div><div class="line">                    <span class="comment">//火狐7以上版本不能用上面的getAsDataURL()方式获取，需要一下方式</span></div><div class="line">                    imgObjPreview.attr(<span class="string">"src"</span>, <span class="built_in">window</span>.URL.createObjectURL(fileList[i]));</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">else</span> &#123;</div><div class="line">                    <span class="comment">//IE下，使用滤镜</span></div><div class="line">                    docObj.select();</div><div class="line">                    <span class="keyword">var</span> imgSrc = <span class="built_in">document</span>.selection.createRange().text;</div><div class="line">                    <span class="keyword">var</span> localImagId = $(<span class="string">"#img"</span>+i, $(<span class="string">".MachineEdit"</span>, Dev.App.FillPanel.Target));</div><div class="line">                    <span class="comment">//必须设置初始大小</span></div><div class="line">                    localImagId.width(<span class="number">70</span>);</div><div class="line">                    localImagId.height(<span class="number">70</span>);</div><div class="line">                    <span class="comment">//图片异常的捕捉，防止用户修改后缀来伪造图片</span></div><div class="line">                    imgObjPreview.css(<span class="string">"display"</span>, <span class="string">"none"</span>);</div><div class="line">                    <span class="built_in">document</span>.selection.empty();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">/*检测照片格式*/</span></div><div class="line">        <span class="function"><span class="keyword">function</span> <span class="title">checkType</span>(<span class="params">image</span>)</span>&#123;</div><div class="line">            <span class="keyword">var</span> extStart = image.lastIndexOf(<span class="string">"."</span>);</div><div class="line">            <span class="keyword">var</span> ext = image.substring(extStart, image.length).toUpperCase();</div><div class="line">            <span class="keyword">if</span> ( ext != <span class="string">".PNG"</span> &amp;&amp; ext != <span class="string">".GIF"</span> &amp;&amp; ext != <span class="string">".JPG"</span> &amp;&amp; ext != <span class="string">".JPEG"</span>) &#123;</div><div class="line">                dialog.Alert(<span class="string">"图片限于png，gif，jpeg，jpg格式！"</span>, <span class="string">"error"</span>);</div><div class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">        &#125;</div></pre></td></tr></table></figure>
<p>调用方式<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"#files"</span>, $(<span class="string">".MachineEdit"</span>, Dev.App.FillPanel.Target)).bind(<span class="string">"change"</span>,<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    setImagePreviews(<span class="keyword">this</span>);</div><div class="line"> &#125;);</div></pre></td></tr></table></figure></p>
<p>效果展示：<br><img src="https://i.loli.net/2017/10/07/59d8a623e0921.png" alt="img"></p>
<p>上传的时候使用的是<code>FormData</code></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//以上省略</span></div><div class="line">            <span class="keyword">var</span> form = <span class="keyword">new</span> FormData();</div><div class="line">           <span class="comment">//注意参数数组的时候使用多次append就行了</span></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, len = fileList.length; i &lt; len; i++) &#123;</div><div class="line">                form.append(<span class="string">"files"</span>, fileList[i]);</div><div class="line">            &#125;</div><div class="line">           </div><div class="line">            form.append(<span class="string">"orgid"</span>, selectorgid);</div><div class="line">            form.append(<span class="string">"cautionid"</span>, selectAl);</div><div class="line">            form.append(<span class="string">"fkder"</span>,Dev.cookie.user.truename);</div><div class="line"></div><div class="line">            $.ajax(&#123;</div><div class="line">                type: <span class="string">"POST"</span>,</div><div class="line">                url: <span class="string">'~~省略~~'</span>,</div><div class="line">                data: form,</div><div class="line">                contentType: <span class="literal">false</span>,</div><div class="line">                processData: <span class="literal">false</span>, <span class="comment">//注意一定要设置为false</span></div><div class="line">                success: <span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</div><div class="line">                    <span class="keyword">if</span> (!Dev.IsNull(response) &amp;&amp; response.statusCode == <span class="number">200</span>) &#123;</div><div class="line">                        dialog.Alert(msg.addSuccess, <span class="string">"success"</span>);</div><div class="line">                    &#125; <span class="keyword">else</span> &#123;</div><div class="line">                        dialog.Alert(msg.addFailed, <span class="string">"error"</span>);</div><div class="line">                    &#125;</div><div class="line">                &#125;,</div><div class="line">                error: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</div><div class="line">                    dialog.Alert(msg.netout, <span class="string">"error"</span>);</div><div class="line">                &#125;</div><div class="line">            &#125;)</div></pre></td></tr></table></figure>
<p><code>processData</code>的默认值是<code>true</code>。用于对<code>data</code>参数进行序列化处理。</p>
<h3 id="后台"><a href="#后台" class="headerlink" title="后台"></a>后台</h3><p>java后台使用的是springMVC，相同的可以参考。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/***"</span>, method = RequestMethod.POST)</div><div class="line">	<span class="function"><span class="keyword">public</span> HttpResponse&lt;CautionFeedBackEntity&gt; <span class="title">addFile</span><span class="params">(@RequestParam(value=<span class="string">"files"</span>,required=<span class="keyword">false</span>)</span>MultipartFile[] files, CautionFeedBackEntity entity) </span>&#123;</div><div class="line">		<span class="keyword">try</span> &#123;</div><div class="line">			~~~处理~~~</div><div class="line">			<span class="keyword">return</span> <span class="keyword">new</span> HttpResponse&lt;CautionFeedBackEntity&gt;(ResponseStatusCode.C200);</div><div class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">			Log.error(<span class="string">"错误飘过~~~~"</span>);</div><div class="line">			<span class="keyword">return</span> <span class="keyword">new</span> HttpResponse&lt;CautionFeedBackEntity&gt;(ResponseStatusCode.C400);</div><div class="line">		&#125;</div><div class="line">	&#125;</div></pre></td></tr></table></figure></p>
<p>需要注意的是 <code>MultipartFile[]</code> 需要设置 <code>@RequestParam</code> 参数。</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ol>
<li>html优化。</li>
<li>脚本后期还需添加点击删除功能，并且还要更新input-file里的内容。</li>
<li>js中处理图片的过程，还需做更多的控制（文件大小，伪文件）。</li>
<li>使用fastDFS存储。</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> jQuery </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[这些只属于武汉的浪漫，看完幸福感爆棚]]></title>
      <url>/wh-romance.html</url>
      <content type="html"><![CDATA[<p>无意中看到个长图，感觉到身边的城市这边美，平时没什么时间去发现，倒是有点小小的遗憾吧，记下，有机会一定要转转/ y。<a id="more"></a></p>
<p><img src="https://i.loli.net/2017/10/05/59d6030110f9e.jpg" alt="img"></p>
<p>就是希望以后有个人能一起去我们想去的地方。。。</p>
]]></content>
      
        <categories>
            
            <category> 分享 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 武汉 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[我想她，是那么的美好吧]]></title>
      <url>/miss-you.html</url>
      <content type="html"><![CDATA[<p>我想她，是那么的美好吧。<a id="more"></a></p>
<p>不知道不觉就想起她，很难过，放不下。这么多年还记得她，不是因为长相，她长相清秀，但是没那么出众，可能因为她别样清脆的声音，但我也不是声控，可能是因为别的，总之，还在意她。</p>
<p>人就是这么奇怪，有时候遇到什么东西就容易出神，青春期的男生可能总是浮想翩翩，就是经常失神吧，我现在大概还是这个样子了，愣。</p>
<p>跟她说过的话不多吧，见面了的时候我也不敢跟她打招呼，因为我很内向，而且还是个很慢热的人，平时话也非常少，我了解的人也不多，实在是一个再也普通不过的人了。</p>
<p>但是在我眼中的她干净，就像不沾人间烟土的仙子。人很聪明，没什么心机，可以跟其他人玩的很合得来。</p>
<p>我觉得她最大的特点就是明媚了，为什么会用这个词了，应该来源于她当时的网名。人烦恼的时候总是会仰望天空，但是天空中也有阴云。看到她的眼睛，感觉就是一直散发着光，是真的明媚，而且带着淡淡的忧伤；说话的时候就像歌曲，安静优雅而又绵长。</p>
<p>就这样，抓走了我的心。后来做了傻事，表白了她，想当初太年轻了，她很懂事，果断拒绝了我。我当时很颓废，回想当初不应该那样的，后来高考完后，她又加了我，不知道当时是什么自尊心在作祟，居然没想到去追回她，什么高考失利都是借口，自己大概当时有些失望，是想放弃的吧。</p>
<p>后来上了大学应该简单联系了几句，但是没多说，我也忘了，曾经一度真的以为我忘了，但是qq还是一直存在我这里，特别关注，平时闲着没事就喜欢翻翻她的空间，但是也不想留下痕迹，简单看下她再干什么，去她去过的地方，看她想看的电影。看到她的照片，她还是以前那个样子，每次看到，心中会有暖意吧，偷偷的存下。直到毕业工作来到了武汉这个城市，不尽然的又想去找她，但是她的心已经对你上了一把锁了，你该用什么去打开它了，没感情经历的我该拿什么去追回她了。</p>
<p>回想当初，自己这个人真的是有点烂了，什么也没付出就像拿到什么，如果当初没能戳穿就好了，即使能远远的看着她，也是一件多么美好的事情啊。我想现在懂了，可能已经太晚了，自己已经不可能撩动她的心了，已经过了那个年纪了，这么长时间，早已经物是人非了，有可能，我这一辈子再也不能见到她了吧，但是只要还能想起她，看到她的消息，心中还是泛起了涟漪。反正现在人都这么烂了，只能用真心去等候吧。</p>
<p>在最好的年纪遇到这么个人真的很美好！虽然没经历过什么刻骨铭心的事情，但我不会忘记的，谢谢她，让我想变成更好的人。</p>
<p>愿她以后一直明媚，不再忧伤吧。</p>
<p>真的很美好！都要加油了。</p>
<hr>
<p>最终还是没能抓住她，让别人抓走了她的心。但是看到她现在纠结的感情问题，心都要快化了。很想去看看她，但犹豫她是不想见到我吧，弄巧成拙后，朋友也做不成。</p>
<p>是我真有点情绪了，我还是有些犹豫，只是我这个人就是这样的直吧，EQ不在线。确实啊，但是，喜欢的确实好辛苦啊，追一个人很久不回应该怎么办，苦笑，明知道是傻，还能怎么办了，从没退路的我，不知道游离在何处，发现真的好累，不曾想过什么多余的，可能我还是像从前那么单纯吧。</p>
<p>别人都说，想清楚了，没人会说自己的感情是最特别的，哪个人不深情，最终留给自己的才是最重要的。我想是这段时间打扰得厉害了，于人于己都不好，她幸福的时刻，不忍心再打扰下去了。看到她现在的空间和微博，尽是些伤感的句子，很想让她开心，但是我发现我并不能办到，在她面前真的感觉到好卑微，有些患得患失，情绪化了，真的错了，我是一个只能让她更难受的人，或许真的不是对的人，因为这个样子她并不是我想要的。</p>
<p>虽然我也很不想放弃，但是这样下去对谁都不好，真的好想戒了，就这样静静地看着吧，悄无声息。</p>
<p>希望她能幸福吧，走过的路，没什么可遗憾的。</p>
<p>我相信一定能遇到下一个对的人，现在能做的唯有努力提升自己，才能在对的时间不错过，耐心等待，不将就，不奢求。择一城，遇一人，终老。</p>
<p>给自己一个约定吧，三十岁之前，只为等待，死了心，再离去。</p>
<p>希望不会被暴露吧。</p>
<p>（完，不更新了</p>
]]></content>
      
        <categories>
            
            <category> 碎碎念 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 心情 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[使用java将gps时转换为utc时间方法]]></title>
      <url>/gps2utc.html</url>
      <content type="html"><![CDATA[<h3 id="gps时间系统"><a href="#gps时间系统" class="headerlink" title="gps时间系统"></a>gps时间系统</h3><blockquote>
<p><code>GPS时间系统</code>采用原子时AT1秒长作时间基准，秒长定义为铯原子CS133基态的两个超精细能级间跃迁辐射振荡9192631170周所持续的时间，时间起算的原点定义在1980年1月6日世界协调时UTC0时，启动后不跳秒，保证时间的连续。以后随着时间积累，GPS时与UTC时的整秒差以及秒以下的差异通过时间服务部门定期公布。<br>精密导航和测量的需要，GPS建立了专用的时间系统。该系统可简写为GPS由GPS主控站的原于钟控制，规定GPS与协调时的时刻于t980年1月6日o时相一致。其后随着时间的积累两者之间的差别将表现为秒的整倍数。</p>
</blockquote>
<a id="more"></a>
<h4 id="gps周"><a href="#gps周" class="headerlink" title="gps周"></a>gps周</h4><blockquote>
<p><code>GPS周</code>（GPS Week）是GPS系统内部所采用的时间系统。<br>时间零点定义的为：1980年1月5日夜晚与1980年1月6日凌晨之间0点。最大时间单位是周（一周：604800秒）。每1024周（即7168天）为一循环周期。第一个GPS周循环点为1999年8月22日0时0分0秒。即从这一刻起，周数重新从0开始算起。星期记数规则是：Sunday为0，Monday为1，以此类推，依次记作0~6，GPS周记数（GPS Week Number）为“GPS周 星期记数”。</p>
</blockquote>
<h3 id="使用java将gps时转换为utc时间方法"><a href="#使用java将gps时转换为utc时间方法" class="headerlink" title="使用java将gps时转换为utc时间方法"></a>使用java将gps时转换为utc时间方法</h3><p>看到了gps时间系统大概明白了 gps时由整周（7天）计数，与周内秒计数两部分组成。转换为utc时间可以从1980年1月6日0时,基本思路计算出总共的秒数，然后通过计算总秒数包含了多少整年，整年减掉后取余，计算年内多少整月，依次类推就可以计算出最后utc时刻的年月日时分秒.毫秒值了。</p>
<p>转换过程中需要主要的年中的闰年处理，还有GPS时与utc时的闰秒问题，如果是转换为北京时间要求时区的问题需要考虑。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.devframe.util.mqtt;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.Date;</div><div class="line"></div><div class="line"><span class="comment">/** </span></div><div class="line"><span class="comment">* <span class="doctag">@ClassName</span>: GPS2UTC </span></div><div class="line"><span class="comment">* <span class="doctag">@Description</span>: gps时间转成utc+8:00 北京时间</span></div><div class="line"><span class="comment">* <span class="doctag">@author</span> zhangkai </span></div><div class="line"><span class="comment">* <span class="doctag">@date</span> 2017年9月25日 下午3:08:07 </span></div><div class="line"><span class="comment">*  </span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GPS2UTC</span> </span>&#123;</div><div class="line"></div><div class="line">	 <span class="keyword">private</span> java.util.Date date;  </div><div class="line">	 <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>[] monthday = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">0</span>, <span class="number">31</span>, <span class="number">28</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>&#125;;</div><div class="line">	 <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> TIME_DAY_MS = <span class="number">3600</span>*<span class="number">24</span>*<span class="number">1000</span>;</div><div class="line">	 </div><div class="line">	 </div><div class="line">	 <span class="comment">/*</span></div><div class="line"><span class="comment">	  * @week gps周</span></div><div class="line"><span class="comment">	  * @tow  gps周内秒（单位毫秒）</span></div><div class="line"><span class="comment">	  * @leaps 闰秒数</span></div><div class="line"><span class="comment">	  */</span></div><div class="line">	<span class="meta">@SuppressWarnings</span>(<span class="string">"deprecation"</span>)</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">GPS2UTC</span><span class="params">(<span class="keyword">int</span> week, <span class="keyword">int</span> tow, <span class="keyword">int</span> leaps)</span> </span>&#123;</div><div class="line">		<span class="keyword">int</span> totalday;</div><div class="line">		<span class="keyword">int</span> year = <span class="number">1980</span>;</div><div class="line">		<span class="keyword">int</span> month;</div><div class="line">		<span class="keyword">int</span> day;</div><div class="line"></div><div class="line">		totalday = week * <span class="number">7</span>;</div><div class="line">		totalday += <span class="number">5</span>;</div><div class="line"></div><div class="line">		<span class="comment">// 如果需要减去闰秒</span></div><div class="line">		<span class="keyword">if</span> (leaps != <span class="number">0</span> &amp;&amp; week &gt; <span class="number">0</span>) &#123;</div><div class="line">			<span class="keyword">if</span> (tow &lt; leaps * <span class="number">1000</span>) &#123;</div><div class="line">				totalday--;</div><div class="line">				tow = TIME_DAY_MS - leaps * <span class="number">1000</span> + tow;</div><div class="line">			&#125; <span class="keyword">else</span> &#123;</div><div class="line">				tow = tow - leaps * <span class="number">1000</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="keyword">while</span> (totalday &gt;= <span class="number">366</span>) &#123;</div><div class="line">			totalday -= <span class="number">365</span>;</div><div class="line">			<span class="keyword">if</span> (isLeapYear(year)) &#123;</div><div class="line">				totalday -= <span class="number">1</span>;</div><div class="line">			&#125;</div><div class="line">			year++;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(isLeapYear(year)) &#123;</div><div class="line">			monthday[<span class="number">2</span>] = <span class="number">29</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> &#123;</div><div class="line">			monthday[<span class="number">2</span>] = <span class="number">28</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span> (month = <span class="number">1</span>; month &lt;= <span class="number">12</span>; month++) &#123;</div><div class="line">			<span class="keyword">if</span> (totalday &lt; monthday[month]) &#123;</div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			&#125;</div><div class="line">			totalday -= monthday[month];</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		day = totalday;</div><div class="line">		day++;</div><div class="line"></div><div class="line">		<span class="keyword">while</span> (tow &gt; TIME_DAY_MS) &#123;</div><div class="line">			tow -= TIME_DAY_MS;</div><div class="line">			day++;</div><div class="line">			<span class="keyword">if</span> (day &gt; monthday[month]) &#123;</div><div class="line">				day = <span class="number">1</span>;</div><div class="line">				month++;</div><div class="line">				<span class="keyword">if</span> (month &gt; <span class="number">12</span>) &#123;</div><div class="line">					month = <span class="number">1</span>;</div><div class="line">					year++;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		tow /= <span class="number">10</span>;</div><div class="line">		<span class="comment">//int msecond = tow % 100;</span></div><div class="line">		tow /= <span class="number">100</span>;</div><div class="line">		<span class="keyword">int</span> second = tow % <span class="number">60</span>;</div><div class="line">		tow /= <span class="number">60</span>;</div><div class="line">		<span class="keyword">int</span> minute = tow % <span class="number">60</span>;</div><div class="line">		<span class="keyword">int</span> hour = tow / <span class="number">60</span>;</div><div class="line">		<span class="comment">//转成Utc时候 北京时间UTC+8:00</span></div><div class="line">		year -= <span class="number">1900</span>;</div><div class="line">		month -= <span class="number">1</span>;</div><div class="line">		hour += <span class="number">8</span>;</div><div class="line">		date = <span class="keyword">new</span> Date(year, month,day,hour,minute,second);</div><div class="line">	 &#125;</div><div class="line">	</div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	 * 判断闰年</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> year</span></div><div class="line"><span class="comment">	 * <span class="doctag">@return</span></span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isLeapYear</span><span class="params">(<span class="keyword">int</span> year)</span> </span>&#123;</div><div class="line">		<span class="keyword">if</span> (((year % <span class="number">4</span> == <span class="number">0</span>) &amp;&amp; (year % <span class="number">100</span> != <span class="number">0</span>)) || (year % <span class="number">400</span> == <span class="number">0</span>)) </div><div class="line">			<span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			<span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">public</span> Date <span class="title">getDate</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">return</span> date;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>其实可以把时区参数放到函数中，<br>为什么要减去1900年，这要说到java中<code>new Date</code>这个方法的定义，<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Deprecated</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Date</span><span class="params">(<span class="keyword">int</span> year, <span class="keyword">int</span> month, <span class="keyword">int</span> date, <span class="keyword">int</span> hrs, <span class="keyword">int</span> min, <span class="keyword">int</span> sec)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> y = year + <span class="number">1900</span>;</div><div class="line">        <span class="comment">// month is 0-based. So we have to normalize month to support Long.MAX_VALUE.</span></div><div class="line">        <span class="keyword">if</span> (month &gt;= <span class="number">12</span>) &#123;</div><div class="line">            y += month / <span class="number">12</span>;</div><div class="line">            month %= <span class="number">12</span>;</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (month &lt; <span class="number">0</span>) &#123;</div><div class="line">            y += CalendarUtils.floorDivide(month, <span class="number">12</span>);</div><div class="line">            month = CalendarUtils.mod(month, <span class="number">12</span>);</div><div class="line">        &#125;</div><div class="line">        BaseCalendar cal = getCalendarSystem(y);</div><div class="line">        cdate = (BaseCalendar.Date) cal.newCalendarDate(TimeZone.getDefaultRef());</div><div class="line">        cdate.setNormalizedDate(y, month + <span class="number">1</span>, date).setTimeOfDay(hrs, min, sec, <span class="number">0</span>);</div><div class="line">        getTimeImpl();</div><div class="line">        cdate = <span class="keyword">null</span>;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>看出来年是按照1900基数来算的。</p>
<p>通过上面的算法可以将gps时间转换成北京时间 </p>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[WIN10家庭版安装Doby 4]]></title>
      <url>/doby4-install.html</url>
      <content type="html"><![CDATA[<p>笔记本电脑的音效确实好差劲啊，无聊还是准备安装了一个杜比装X，效果还是不错的，<code>家庭版</code>安装过程中，跟以前<code>专业版</code>有所不同。<a id="more"></a></p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p><a rel="external nofollow" target="_blank" href="http://pan.baidu.com/s/1cdIQpo">http://pan.baidu.com/s/1cdIQpo</a></p>
<p>密码 <code>k8sa</code></p>
<p>下载好解压，</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ul>
<li>进入解压的文件夹中直接执行安装程序<code>.exe文件</code>，记住不要修改软件的安装的路径，让软件自行解压到<code>C:\DRIVERS\WIN\DOLBY</code>，最后记住取消<code>勾勾</code>再点finish。我们会在C盘的安装目录里看到如下的文件:    <img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171003132434.png" alt="image"></li>
<li>WIN10电脑有个蛋疼的驱动自动更新，它会自动下载和更新我们电脑上的相关驱动，我们需要取消这个功能，步骤：</li>
</ul>
<blockquote>
<p>控制面板\所有控制面板项\系统\高级系统设置\硬件\设备安装设置<br>选择否<br>保存设置</p>
</blockquote>
<p>通过上面的设置，系统不会自动更新我们的驱动了，</p>
<ul>
<li>现在需要重启，注意不是一般的重启，我们需要禁用驱动程序强制签名，为什么会这样，我想应该是微软系统还没收录这类的驱动程序，（ps:以前玩腾讯游戏也是，WIN10已更新把腾讯驱动给屏蔽了，全挂了）<br>回归正题，按住<code>shirt键</code>，再去点击计算机<code>重启</code>按钮，进入<code>疑难解答</code>这一项，再点<code>启动设置</code>，电脑重启后，会让我们选择一个列表的东西，我们直接按键盘 <code>7键</code> 禁用驱动程序强制签名 的选项。</li>
<li>然后，进入我们第一步安装问价的路径 <code>C:\DRIVERS\WIN\DOLBY</code> 64位系统进入 <code>X64</code>文件夹中运行安装 <code>DTCP</code><br><img src="http://ov62kaxkk.bkt.clouddn.com/6bba7eed2e738bd4cf4228eaa38b87d6267ff99d.jpg" alt="image"><br><img src="http://ov62kaxkk.bkt.clouddn.com/fbe31a738bd4b31cfa5f0e6085d6277f9f2ff89d%5B1%5D.jpg" alt="image"></li>
</ul>
<p>安装完成后，可以看到电脑右下角有杜比的图标，放音乐有频谱，表明杜比接管声卡驱动成功了。<br><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171003134123.png" alt="image"></p>
<p>贴张音效图</p>
<p><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171003134455.png" alt="image"></p>
<h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><ol>
<li>安装时候不需要卸载原来的声卡，安装时候不需要卸载原来的声卡，安装时候不需要卸载原来的声卡，重要的说三遍。</li>
<li>WIN10家庭版相比专业版没有<code>策略组</code>，不能去设置设置安装限制，但是还是能正常安装，我想不需要设置  （禁止安装未由其他策略设置描述的设备设置），所以专业版也可以使用这个方式安装。</li>
<li>台式电脑要注意了，杜比不支持前置声卡接口。</li>
<li>有厂商制定的声卡或者软件，可能有一些兼容问题，我的HP笔记本就是静音没有键盘灯提示了。</li>
<li>最后，渣渣笔记本的扬声器，随便淘宝买个50块以内的音响就完爆了，哈哈，提升硬件才是硬道理。</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> doby </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[请告诉女儿：嫁人就嫁心机男]]></title>
      <url>/thinking-boy.html</url>
      <content type="html"><![CDATA[<p>本来是昨天听FM听到这篇文章的，文章非常好，虽然自己也没感情经历，突然感觉自己这么是个直男好吓人啊😭，就算是一段认识吧，分享下这个文章，也不转载了，（哭。<br><a id="more"></a></p>
<p>直接挂个链接吧。</p>
<p><strong>文章作者：</strong> 国馆</p>
<p><strong>原文链接：</strong> <a rel="external nofollow" target="_blank" href="https://www.douban.com/note/638049932/">https://www.douban.com/note/638049932/</a></p>
]]></content>
      
        <categories>
            
            <category> 分享 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 感情 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Travis CI 持续集成]]></title>
      <url>/TravisCI.html</url>
      <content type="html"><![CDATA[<h3 id="Travis-CI-持续集成"><a href="#Travis-CI-持续集成" class="headerlink" title="Travis CI 持续集成"></a>Travis CI 持续集成</h3><p>到这一步，你其实已经可以很简便的使用 <code>Hexo</code> 来写博客了，可人是一种永远不满足的动物。使用 Hexo 来写博客有一个问题就是，我只能在安装了 Hexo 的计算机上写东西，然后 hexo generate 再 hexo deploy 到托管服务器。如果我想在没有安装 Hexo 的电脑上写博客呢？如果我想随时随地修改，或者写一下博客呢？<br>当然一个简单办法就是把自己博客的源文件也托管到 Github，每次都把源文件 clone 下来，然后安装 Hexo，再构建发布就好了。可是这样做的话，始终不太优雅。那可以搞一个远程的服务器，把构建博客的事情交给服务器，每次要写博客的时候连接到服务器上去就行了。可既然我们把博客都托管到了 Github，为甚么博客的构建还需要服务呢？不行，这样还是不够优雅。如果有什么服务能够代替上述的那个服务器就好了，答案是确实有的——持续集成。<br><a id="more"></a></p>
<h4 id="什么是持续集成"><a href="#什么是持续集成" class="headerlink" title="什么是持续集成"></a>什么是持续集成</h4><blockquote>
<p><code>持续集成</code>（Continuous Integration）是一种软件开发实践。 在持续集成中，团队成员频繁集成他们的工作成果，一般每人每天至少集成一次，也可以多次。 每次集成会经过自动构建（包括自动测试）的检验，以尽快发现集成错误。</p>
</blockquote>
<h4 id="什么是-Travis-CI"><a href="#什么是-Travis-CI" class="headerlink" title="什么是 Travis CI"></a>什么是 Travis CI</h4><blockquote>
<p><code>Travis CI</code> 是目前新兴的开源持续集成构建项目，它与 jenkins，GO 的很明显的特别在于采用 yaml 格式，同时它是在线的服务，不像 jenkins 需要你本地搭建服务器，简洁清新独树一帜。目前大多数的 Github 项目都已经移入到 Travis CI 的构建队列中，据说Travis CI 每天运行超过 4000 次完整构建。对于做开源项目或者 Github 的使用者，如果你的项目还没有加入 Travis CI 构建队列，那么我真的想对你说 OUT 了。</p>
</blockquote>
<h4 id="Travis-和-Hexo"><a href="#Travis-和-Hexo" class="headerlink" title="Travis 和 Hexo"></a>Travis 和 Hexo</h4><p>为什么我们要选择 Travis 呢，因为它和 Github 集成的程度非常高，对于 Github 上的开源项目，可以免费在 Travis 上构建（我们是不是该为免费的互联网精神干杯🍻），而非开源的私有项目想在 Travis 上构建价格还是非常感人的。<br>我先把在 Travis 上进行自动构建的思路说一下：<br><img src="http://7xin49.com1.z0.glb.clouddn.com/mac_qrsync/cbc37bcd05062212564fe2aaaee6631f.png-960.jpg" alt="Travis"></p>
<ul>
<li>我们在在 Github 的博客仓库里新建一个 <code>blog-source</code> 分支，然后把博客的源码托管到这个分支</li>
<li>每当我们在本地写好了博文之后，把修改 <code>push</code> 到该分支</li>
<li>Travis 上可以对这个项目的 <code>blog-source</code> 分支设置钩子，每当检测到 <code>push</code> 的时候就去仓库 <code>clone</code> 源代码</li>
<li>Travis 执行构建脚本</li>
<li>Travis 把构建结果通过 <code>push</code> 部署到 <code>master</code> 分支或者 Coding.net 的仓库里 </li>
</ul>
<p>在这样的自动化流程下，我们唯一需要做的事情就是 <code>push</code> 我们的博文到源代码分支，其他的事情交给 Travis，当然，这一流程是需要我们配置的。</p>
<h4 id="配置-Travis"><a href="#配置-Travis" class="headerlink" title="配置 Travis"></a>配置 Travis</h4><h5 id="注册-Travis"><a href="#注册-Travis" class="headerlink" title="注册 Travis"></a>注册 Travis</h5><p>Travis CI 不需要单独注册，直接使用 GitHub 账号登录就可以了。<br>上<a rel="external nofollow" target="_blank" href="https://travis-ci.org/">官网</a> 会发现有 Sign in with GitHub（使用GitHUb登录）和 Sign Up（注册），其实这俩做的事情都一样，就是用 GitHub 账号登录。登录后界面会显示你的 GitHub Repository，默认全部全部没有勾选，选择你的博客的 Repository 后完成第一步，如图：<br><img src="http://7xin49.com1.z0.glb.clouddn.com/mac_qrsync/c5c4ae39bc22681ccf481119befbe363.png-960.jpg" alt="image"><br>如果你没有看到自己的项目，请点击右上角的 <code>Sync with Github</code>。</p>
<h4 id="安装-Travis-CML"><a href="#安装-Travis-CML" class="headerlink" title="安装 Travis CML"></a>安装 Travis CML</h4><p>在进行下面的步骤之前，我们需要先安装 Travis 的 CML，因为后面的部署需要我们加密的自己的 SSH 私钥和 Github、Coding.net 通信。安装过程请看 <a rel="external nofollow" target="_blank" href="https://github.com/travis-ci/travis.rb#installation">Travis CML Installation</a>：<br>首先必须有 <a rel="external nofollow" target="_blank" href="http://www.ruby-lang.org/en/downloads/">Ruby 1.9.3</a> 以上，检查了版本之后，安装 Travis，检查版本即可： </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ruby -v</div><div class="line">gem install travis -v 1.8.4 --no-rdoc --no-ri</div><div class="line">travis version</div></pre></td></tr></table></figure>
<p>如上，如果出现 1.8.2 这样的版本信息，则说明 Travis CI Command Line Client 安装成功。之后进行登录，执行：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">travis login</div></pre></td></tr></table></figure></p>
<p>按照提示登录就好了。  </p>
<h4 id="配置-Travis-1"><a href="#配置-Travis-1" class="headerlink" title="配置 Travis"></a>配置 Travis</h4><p>在博客根目录下添加 Travis CI 所需要的配置文件 <code>.travis.yml</code>，配置文件内容和一些说明如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">language: node_js</div><div class="line">node_js: stable</div><div class="line"></div><div class="line"># assign build branches</div><div class="line">branches:</div><div class="line">  only:</div><div class="line">    - blog-source</div><div class="line"></div><div class="line"># cache this directory</div><div class="line">cache:</div><div class="line">  directories:</div><div class="line">    - node_modules</div><div class="line"></div><div class="line"># S: Build Lifecycle</div><div class="line">before_install:</div><div class="line">  - openssl aes-256-cbc -K $encrypted_a0b7f0848317_key -iv $encrypted_a0b7f0848317_iv -in ./.travis/id_rsa.enc -out ~/.ssh/id_rsa -d</div><div class="line">  - chmod 600 ~/.ssh/id_rsa</div><div class="line">  - eval $(ssh-agent)</div><div class="line">  - ssh-add ~/.ssh/id_rsa</div><div class="line">  - cp .travis/ssh_config ~/.ssh/config</div><div class="line">  - npm install -g hexo-cli # 安装 hexo</div><div class="line">  - git clone -b mod https://github.com/quentin-chen/hexo-theme-even.git themes/even</div><div class="line"></div><div class="line">install:</div><div class="line">  - npm install # 安装 package.json 中的插件</div><div class="line"></div><div class="line">script:</div><div class="line">  - hexo generate</div><div class="line"></div><div class="line">after_success:</div><div class="line">  - git config --global user.name &quot;Quentin_Chen&quot;</div><div class="line">  - git config --global user.email &quot;quentin.chen@foxmail.com&quot;</div><div class="line">  - sed -i&apos;&apos; &quot;/^ *repo/s~github\.com~$&#123;githubToken&#125;@github.com~&quot; _config.yml</div><div class="line">  - hexo deploy</div><div class="line"># E: Build LifeCycle</div></pre></td></tr></table></figure>
<p>我逐步来讲解一下每一个配置项的意思。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">language: node_js</div><div class="line">node_js: stable</div><div class="line"></div><div class="line"># assign build branches</div><div class="line">branches:</div><div class="line">  only:</div><div class="line">    - blog-source</div><div class="line"></div><div class="line"># cache this directory</div><div class="line">cache:</div><div class="line">  directories:</div><div class="line">    - node_modules</div></pre></td></tr></table></figure></p>
<p>这里指定了构建的环境是 Node.js，版本是当前稳定版本。设置的 <code>WebHook</code> 钩子只检测 <code>blog-source</code> 分支的 <code>push</code> 变动。另外我们把 <code>node_modules</code> 文件夹放入缓存，这样可以大大节约每次构建的时间（2min -&gt; 30s）。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">before_install:</div><div class="line">  - openssl aes-256-cbc -K &lt;you_key&gt; -iv &lt;your_iv&gt; -in ./.travis/id_rsa.enc -out ~/.ssh/id_rsa -d</div><div class="line">  - chmod 600 ~/.ssh/id_rsa</div><div class="line">  - eval $(ssh-agent)</div><div class="line">  - ssh-add ~/.ssh/id_rsa</div><div class="line">  - cp .travis/ssh_config ~/.ssh/config</div><div class="line">  - npm install -g hexo-cli # 安装 hexo</div><div class="line">  - git clone &lt;theme_repo&gt; themes/&lt;theme&gt;</div></pre></td></tr></table></figure>
<p>其实每次 Travis 构建的时候，相当于创建了一个干净的虚拟机，除了 Git 等必须的工具，甚至连 Node.js 的环境都是现安装的。所以我们在构建自己的博客之前，需要做一些环境的准备。<br>其中 2-6 行是用来配置 SSH 私钥的，这样才能让 Github 和 Coding.net 知道你的身份。这一部分我们后面再说。<br>第 7 行是在 Travis 中安装 Hexo 环境，第 8 行是安装主题。</p>
<blockquote>
<p>关于主题这里，如果你对自己的主题做了修改（包括配置文件），那么应该把自己修改过的主题托管到 Github，这里填的 <code>&lt;theme_repo&gt;</code> 应是你自己地址。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">install:</div><div class="line">  - npm install # 安装 package.json 中的插件</div><div class="line"></div><div class="line">script:</div><div class="line">  - hexo generate</div><div class="line"></div><div class="line">after_success:</div><div class="line">  - git config --global user.name &quot;&lt;You Name&gt;&quot;</div><div class="line">  - git config --global user.email &quot;&lt;email&gt;&quot;</div><div class="line">  - hexo deploy</div></pre></td></tr></table></figure>
<p>这一部分，就是在 Travis 上模拟部署过程。因为要使用 Git，所以要提前配置好 Committer 的信息。<br>生成私钥加密文件 </p>
<blockquote>
<p>什么是私钥？<br>私钥就是密钥对（密钥对指一对公钥和私钥），我们在使用 Github 的时候，首先需要在 Github 上配置公钥，这是最基础的。那么，存在我们本地的私钥就是你的个人身份标示，如果你的项目 git 地址配置的是 git@github.com:username/projectname.git（相对的还有 <a href="https://github.com/username/projectname.git），" target="_blank" rel="external">https://github.com/username/projectname.git），</a> 当你在对 Repository 在一些操作（比如 push 等），则需要私钥进行身份验证了（这是自动验证的，如果是使用 https 的配置，则需要提供用户名和密码）。<br>我们在 Travis CI 上自动部署代码，就牵扯到了 push 操作，那么就需要提供私钥了。</p>
<p>为什么生成私钥加密文件？</p>
</blockquote>
<p>将私钥直接放在项目里，那么人人都能看到。私钥的泄露将会发生一系列的问题，比如有坏人拿你的私钥直接操作你的 git 项目，你能干啥他也能干啥（原理上面讲了），这咋整？我们需要对私钥进行加密。<br>Travis 提供了加密文件的支持，什么意思呢？我们可以对文件（这里指私钥）在本地进行加密，然后把加密过后的文件放在项目里，那么别人就无法获取里面的真实内容。然后我们在让 Travis 执行脚本的时候，在读取加密文件之前对文件进行解密（使用的解密密码提前在 Travis 上配置好了），这样就可以达到不将文件内容暴露，并且让 Travis 获取到真实内容的目的了，大概的时序图如下：<br><img src="http://7xin49.com1.z0.glb.clouddn.com/mac_qrsync/8801dc034d298600bfc9b7124a0f42cd.png-960.jpg" alt="image"><br>开始吧，我们首先把自己的在博客的根目录下建立 .travis 文件夹来存放相关的资料：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir .travis &amp;&amp; <span class="built_in">cd</span> .travis</div></pre></td></tr></table></figure></p>
<p>把本地的私钥复制一份过来，用 Travis 加密，然后删除（切记加密完了一定要删除原始密钥！！！）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cp ~/.ssh/id_rsa .</div><div class="line">travis encrypt-file id_rsa</div><div class="line">rm id_rsa</div></pre></td></tr></table></figure></p>
<p>现在 ls 命令查看一下 <code>.travis</code> 目录应该只有 <code>id_rsa.enc</code> 这一个文件才对。然后我们再在当前目录下新建一个 <code>ssh_config</code> 用来配置 Travis 上的 SSH Client。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Host *</div><div class="line">  User git</div><div class="line">  StrictHostKeyChecking no</div><div class="line">  IdentityFile ~/.ssh/id_rsa</div><div class="line">  IdentitiesOnly yes</div></pre></td></tr></table></figure>
<p>现在，我们在 Travis 网站，博客项目的设置（项目右上角）里可以看到两个用于解密私钥的环境变量：  <img src="http://7xin49.com1.z0.glb.clouddn.com/mac_qrsync/c180cfd5996f2b3c1d43f9017a11b7c9.png-960.jpg" alt="image"></p>
<p>把这两个环境变量名复制到上面的 <code>.travis.yaml</code> 文件里替换相应部分：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">before_install:</div><div class="line">  - openssl aes-256-cbc -K &lt;you_key&gt; -iv &lt;your_iv&gt; -in ./.travis/id_rsa.enc -out ~/.ssh/id_rsa -d</div></pre></td></tr></table></figure></p>
<p>这样，全部的配置就完成了。</p>
<blockquote>
<p>Tips： Github 还支持 Application Token 的方式来认证身份，比使用 SSH 私钥要更简便，但考虑到 Coding.net 并不支持，我还是选择普适的方法。有兴趣的同学可以自己研究一下，就当做课后作业吧:D。</p>
</blockquote>
<h4 id="完成工作流"><a href="#完成工作流" class="headerlink" title="完成工作流"></a>完成工作流</h4><p>在进行工作流之前我们来检查一下我们现在工作目录和所有必须的东西：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">.</div><div class="line">├── .travis*</div><div class="line">│   ├── id_rsa.enc</div><div class="line">│   └── ssh_config</div><div class="line">├── _config.yml*</div><div class="line">├── db.json*</div><div class="line">├── node_modules</div><div class="line">├── package.json*</div><div class="line">├── scaffolds*</div><div class="line">├── <span class="built_in">source</span>*</div><div class="line">│   ├── CNAME*</div><div class="line">│   ├── _posts</div><div class="line">│   ├── about</div><div class="line">│   ├── categories</div><div class="line">│   ├── img</div><div class="line">│   ├── media</div><div class="line">│   └── tags</div><div class="line">└── themes</div></pre></td></tr></table></figure></p>
<p>我用星号标记的文件和文件夹都是十分重要的，确保 Git 覆盖了这些文件和目录，然后我们把目录 <code>push</code> 到 <code>github/blog-source</code> 仓库分支。Travis WebHook 立马就会检测到 <code>push</code>，然后开始构建了：<br><img src="http://7xin49.com1.z0.glb.clouddn.com/mac_qrsync/e0f11bcfb411c5b73bdcac015ee87b3d.png-960.jpg" alt="image"></p>
<p>上图是一次成功的构建，我们可以点开 <code>Job log</code> 看一下构建过程的 Log 文件，特别是构建没有成功的话，我们更要仔细阅读，找准问题，对症下药。<br>构建成功以后再去刷新你的网页，是不是已经是最新的了呢？</p>
<p>以上是<strong>利用 <code>Travis</code> 实现全自动部署</strong></p>
<p><strong>文章作者写的非常详细，我就完全复制转载过来了，非常感谢。</strong></p>
<p><strong>原文作者: Kun Chen</strong></p>
<p><strong>原文链接：<a rel="external nofollow" target="_blank" href="http://kchen.cc/2016/11/12/hexo-instructions/">http://kchen.cc/2016/11/12/hexo-instructions/</a> </strong></p>
<p><strong>侵删</strong></p>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> Travis CI </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[随便写点]]></title>
      <url>/to-self.html</url>
      <content type="html"><![CDATA[<p>想起曾今为了买电脑，每天都要去看下评测，总是感觉那是个莫大的荣誉，可是现在，都不愿意摸电脑了，哈哈，朋友圈、空间这些东西不再玩了，牢骚也不再去分享了。感觉人都要变老了，没那么大精力去玩了。</p>
<p>看看镜子里的自己，可能没感觉，还是这么的年轻，突然拿起以前刚入大学的照片，真是一个天上，一个地下，现在人也变黑了，感觉脸上的棱角也要抹平了。世界的一切都没有变，只是我变了，变老了，生命从来都不等人，朋友们现在都开始展示自己的高调生活了，手机、车子还有房子了，现在自己虽然说刚毕业，义务所有，一切还需要自己打拼。我也想成为了不起的人，但是你想成为的人，也会失去大把周围的美丽的风景。</p>
<p>可能从小到大，我都是个很闷的人吧，可能还很小气，不想跟别人分享任何东西吧，却往往忽视了这个世界上关心我的人了。对的，不管什么什么时候，都不能忘记曾经对自己好的人，即使只是一餐饭，还是一声关心问候，甚至只是一句玩笑话。应该留点时间给老爸老妈了，他们的头发都开始白了。现在在武汉工作，尽可能的近一点，方便一点吧，多点时间回家吧。  </p>
<p>我想，自己已经早已经过了那个年少的年纪了，不能再不顾后果的做一件事情，即使是自己多么喜爱，多么不想放弃的一件事，一个东西，还是一个人。<strong>最美好的时光，莫过于再一个人的年少，无知者无畏。“花有重开日，人无再少年。”</strong>   </p>
<p>虽然想成熟了，但是自己也没经历过什么大事，心里还是那个满心忐忑的少年吧，嗯，其实我也没变什么，还是那么简单：去做自己喜欢做的事情，去爱自己想爱的人。</p>
<p>年轻可能是现在我剩下最好的礼物可，不能浪费了，前面的时光我放弃了很多的东西，如今追回来虽然好难，但是我是不会轻易言弃的。不管在经历着什么，都要记得每一天，认认真真的，不要去放弃了。</p>
<p>我这个人的圈子很小，没什么朋友，很闷，也很慢热，，遇到苦难了，想坚持，也想放弃，不想逗留。曾经也想改变性格，但是实在是很无力，反而让自己很难受，反正这是上天给予我的礼物，现在我的工作和生活也不必在乎这个性格的弊端，我已经接受了。</p>
<p>说过<strong>生活要晶莹剔透柔软善良，想对待第一次自己喜欢的人儿一样去对待它。没有好坏，没有歧视，只用想去付出，然后得到。</strong></p>
<p>我总是这么的心急，只要一切都来得及。</p>
]]></content>
      
        <categories>
            
            <category> 碎碎念 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 心情 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[《苦橙》-- 歌词]]></title>
      <url>/melangolo.html</url>
      <content type="html"><![CDATA[<p>以前听的一首很美的歌，欣赏下歌词。<a id="more"></a></p>
<blockquote class="blockquote-center"><h2 id="苦橙"><a href="#苦橙" class="headerlink" title="苦橙"></a>苦橙</h2><h5 id="林力尧"><a href="#林力尧" class="headerlink" title="林力尧"></a>林力尧</h5><p>越沉默 越用心包裹<br>忽略 越多难过 容易更乐活<br>可终究 郁结如核的感受<br>还是被自己品尝出浅薄<br>不甘被冷落<br>心甘情愿被你利用<br>榨尽真心<br>难怪换被丢弃的理由<br>其实我也知道我<br>并不算成熟<br>所以更渴望能有<br>风雨的承受<br>无奈连光都照不够<br>也没有人来收获<br>只能自己结果<br>和坠地的疼痛<br>其实我也知道我<br>是有些懦弱<br>表里不一的坚强<br>难道也有错<br>我只是不愿意<br>一直妥协昧心到腐朽<br>成色不足的苦橙<br>难道注定就<br>不如那些罐头<br>讨喜地被拥有</p>
<p>越肺腑 越失心袒露<br>他们 都多事故 而我多冲动<br>学不会 深加工过的笑容<br>就留给他们<br>礼貌地对我<br>你也别内疚<br>反正我被笑过很多<br>卖相不好<br>又怎么能怪人不识货<br>其实我也知道我<br>并不算成熟<br>所以更渴望能有<br>风雨的承受<br>无奈连光都照不够<br>也没有人来收获<br>只能自己结果<br>和坠地的疼痛<br>其实我也知道我<br>是有些懦弱<br>表里不一的坚强<br>难道也有错<br>我只是不愿意<br>一直妥协昧心到腐朽<br>成色不足的苦橙<br>难道注定就<br>不如那些罐头<br>讨喜地被拥有<br>你别内疚<br>反正现在我已想通<br>卖相不好<br>也许才有真心等候</p>
</blockquote>]]></content>
      
        <categories>
            
            <category> 那些很美的句子 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 歌词 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[《浮生》-- 歌词]]></title>
      <url>/floating-life.html</url>
      <content type="html"><![CDATA[<p>今天听到这首歌，第一次听到它，我感觉无穷的想念都涌出来了，说真的，我哭了。<a id="more"></a></p>
<blockquote class="blockquote-center"><h2 id="浮生"><a href="#浮生" class="headerlink" title="浮生"></a>浮生</h2><h5 id="刘莱斯"><a href="#刘莱斯" class="headerlink" title="刘莱斯"></a>刘莱斯</h5><p>无人与我把酒分<br>无人告我夜已深<br>无人问我粥可暖<br>无人与我立黄昏<br>他真的很喜欢你 像风走了八千里<br>他真的很喜欢你 像阵雨下到了南极<br>他真的很想念你 像珊瑚沉在海底<br>他真的很喜欢你 不问归期不远万里<br>他真的很喜欢你 像盲人看一出哑剧<br>他真的很喜欢你 像第一首诗不尽人意<br>他真的很喜欢你 像太阳自转无论朝夕<br>他真的很喜欢你 千言万语乐此不疲</p>
<p>他真的很喜欢你 像春雨下得淅淅沥沥<br>他真的很喜欢你 像夏日聒噪的蝉鸣<br>他真的很想念你 像秋叶落得悄无声息<br>他真的很喜欢你 想冬天的雪沁在心里<br>他真的很喜欢你 像狗本性难移<br>他真的很喜欢你 所以他可以一直没脸没皮<br>他真的很想念你 无时不刻不在想你<br>他真的很喜欢你 所以他把你捧在手心<br>他真的很喜欢你 所以固执地排比比喻<br>他真的很喜欢你 虽然他的感情实在细腻<br>他真的很想念你 真的无时不刻不再想你<br>他真的很喜欢你 不想浪费时间的一点一滴<br>他真的 很喜欢你<br>他真的 很喜欢你<br>他真的 很想念你<br>他真的 很喜欢你 很喜欢很喜欢你<br>有人与我把酒分<br>有人告我夜已深<br>有人问我粥可暖<br>有人与我立黄昏<br>有人待我诚且真<br>有人忧我细无声<br>有人知我冷与暖<br>有人伴我度余生</p>
</blockquote>]]></content>
      
        <categories>
            
            <category> 那些很美的句子 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 歌词 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[不眠]]></title>
      <url>/never-sleeping.html</url>
      <content type="html"><![CDATA[<p>一直在想起你，<br>反反复复告诉自己不要打扰你了，<br>其实我总是这么的固执，<br>一次次骗自己，<br>但还是没能停下颤抖的手，<br>向你发送了一个憨笑的表情。  </p>
<p>每次发送一条消息，<br>有时候要想半天，<br>怎么能去撩动你的心，<br>虽然大多数的时候没能得到回应，<br>但每次发完我得内心，<br>总是还是很期待的，<br>不知道这种感觉是从什么时候开始的，<br>是多年前的高中，<br>还是现在，  </p>
<p>我想，<br>不期待太多的回应，<br>但愿一切安好吧，<br>我想，<br>我还是太懦弱了，<br>虽然想追回你，<br>照顾你，<br>但我真不知道该用什么来追回你，<br>可能我这个人真有点烂了，<br>没付出过什么，<br>也没做过什么刻骨铭心的事情，<br>只有等待，<br>等待就等于没有结果。</p>
<p>一个又一个夜晚吧，<br>一次又一次的念，<br>我的生活就是这样的吧，<br>做自己想做的事，<br>买想买的东西，<br>去和喜欢的人聊聊天，<br>很快乐，<br>虽然很打扰，<br>但是抱歉，<br>我很自私。</p>
]]></content>
      
        <categories>
            
            <category> 碎碎念 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 心情 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[gzip stdin not in gzip format的错误]]></title>
      <url>/gzip-error.html</url>
      <content type="html"><![CDATA[<p>出现这个错误，觉得很奇怪，网上全部都说是去掉文件后缀<code>.gz</code>，要不就是使用<code>-xvf</code>，不要加上参数<code>z</code>。但是这种方法不能解决我的错误。</p>
<a id="more"></a>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@localhost opt]<span class="comment">#  tar -xvf redis-3.2.4.tar.gz</span></div><div class="line"></div><div class="line">gzip: stdin: not <span class="keyword">in</span> gzip format</div><div class="line">tar: Child returned status 1</div><div class="line">tar: Error is not recoverable: exiting now</div><div class="line">[root@localhost opt]<span class="comment"># file redis-3.2.4.tar.gz </span></div><div class="line">redis-3.2.4.tar.gz: HTML document, UTF-8 Unicode text</div></pre></td></tr></table></figure>
<p>语　　法：<code>file [-beLvz][-f &lt;名称文件&gt;][-m &lt;魔法数字文件&gt;...][文件或目录...]</code></p>
<p><strong>可以看出来，我们下载下来的文件并不是我们想要的，弄了半天，它只是一个<code>html</code>页面，气死人是吧。</strong></p>
<p>补充说明：通过file指令，我们得以辨识该文件的类型。</p>
<p>参　　数：<br>　<code>-b</code> 　列出辨识结果时，不显示文件名称。<br>　<code>-c</code>　 详细显示指令执行过程，便于排错或分析程序执行的情形。<br>　<code>-f</code>     &lt;名称文件&gt; 　指定名称文件，其内容有一个或多个文件名称呢感，让file依序辨识这些文件，格式为每列一个文件名称。<br>　<code>-L</code> 　直接显示符号连接所指向的文件的类别。<br>　<code>-m</code>    &lt;魔法数字文件&gt; 　指定魔法数字文件。<br>　<code>-v</code> 　显示版本信息。<br>　<code>-z</code>　 尝试去解读压缩文件的内容。</p>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[redies安装]]></title>
      <url>/redis.html</url>
      <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><p>直接去官网下载最新版的，前面使用<code>wget</code>下载半天下载下来的全是错误文件，浪费了大把时间，最重要的是浪费心情。<a id="more"></a></p>
<p>Redis官网(redis.io)</p>
<h4 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost bin]<span class="comment"># tar xzf redis-4.0.2.tar.gz</span></div></pre></td></tr></table></figure>
<h4 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h4><p>进入解压的文件中</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> redis-4.0.2</div></pre></td></tr></table></figure>
<p>编译<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">make</div><div class="line"><span class="built_in">cd</span> src</div><div class="line">make install PREFIX=/usr/<span class="built_in">local</span>/redis</div></pre></td></tr></table></figure></p>
<h4 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h4><p>新建文件夹<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir -p /usr/<span class="built_in">local</span>/redis/etc</div></pre></td></tr></table></figure></p>
<p>移动config文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mv ./redis.conf /usr/<span class="built_in">local</span>/redis/etc/</div></pre></td></tr></table></figure>
<h3 id="启动Redis服务"><a href="#启动Redis服务" class="headerlink" title="启动Redis服务"></a>启动Redis服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/<span class="built_in">local</span>/redis/bin/redis-server</div></pre></td></tr></table></figure>
<p>前台运行中</p>
<p>想要后台运行修改配置文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /usr/<span class="built_in">local</span>/redis/etc/redis.conf</div></pre></td></tr></table></figure></p>
<p>将<code>daemonize</code>的值改为<code>yes</code></p>
<p>后台运行命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">　/usr/<span class="built_in">local</span>/redis/bin/redis-server /usr/<span class="built_in">local</span>/redis/etc/redis.conf</div></pre></td></tr></table></figure></p>
<p>查看端口<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@localhost bin]<span class="comment"># netstat -tunpl | grep 6379                    </span></div><div class="line">tcp        0      0 127.0.0.1:6379          0.0.0.0:*               LISTEN      5769/./redis-server</div></pre></td></tr></table></figure></p>
<p>启动成功。  </p>
<p>客户端登陆<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@localhost bin]<span class="comment"># /usr/local/redis/bin/redis-cli </span></div><div class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> foo bar</div><div class="line">OK</div><div class="line">127.0.0.1:6379&gt; get foo</div><div class="line"><span class="string">"bar"</span></div></pre></td></tr></table></figure></p>
<p>关闭服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/<span class="built_in">local</span>/redis/bin/redis-cli shutdown</div></pre></td></tr></table></figure></p>
<p>redis开机自启  </p>
<p><code>vim /etc/rc.local</code><br>底部添加<br>　<code>/usr/local/redis/bin/redis-server /usr/local/redis/etc/redis-conf</code></p>
<h3 id="了解"><a href="#了解" class="headerlink" title="了解"></a>了解</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">redis-benchmark：redis性能测试工具</div><div class="line"></div><div class="line">　　redis-check-aof：检查aof日志的工具</div><div class="line"></div><div class="line">　　redis-check-dump：检查rdb日志的工具</div><div class="line"></div><div class="line">　　redis-cli：连接用的客户端</div><div class="line"></div><div class="line">　　redis-server：redis服务进程</div></pre></td></tr></table></figure>
<h3 id="剩下就是配置"><a href="#剩下就是配置" class="headerlink" title="剩下就是配置"></a>剩下就是配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">daemonize：如需要在后台运行，把该项的值改为yes</div><div class="line"></div><div class="line">　　pdifile：把pid文件放在/var/run/redis.pid，可以配置到其他地址</div><div class="line"></div><div class="line">　　<span class="built_in">bind</span>：指定redis只接收来自该IP的请求，如果不设置，那么将处理所有请求，在生产环节中最好设置该项</div><div class="line"></div><div class="line">　　port：监听端口，默认为6379</div><div class="line"></div><div class="line">　　timeout：设置客户端连接时的超时时间，单位为秒</div><div class="line"></div><div class="line">　　loglevel：等级分为4级，debug，revbose，notice和warning。生产环境下一般开启notice</div><div class="line"></div><div class="line">　　logfile：配置<span class="built_in">log</span>文件地址，默认使用标准输出，即打印在命令行终端的端口上</div><div class="line"></div><div class="line">　　database：设置数据库的个数，默认使用的数据库是0</div><div class="line"></div><div class="line">　　save：设置redis进行数据库镜像的频率</div><div class="line"></div><div class="line">　　rdbcompression：在进行镜像备份时，是否进行压缩</div><div class="line"></div><div class="line">　　dbfilename：镜像备份文件的文件名</div><div class="line"></div><div class="line">　　dir：数据库镜像备份的文件放置的路径</div><div class="line"></div><div class="line">　　slaveof：设置该数据库为其他数据库的从数据库</div><div class="line"></div><div class="line">　　masterauth：当主数据库连接需要密码验证时，在这里设定</div><div class="line"></div><div class="line">　　requirepass：设置客户端连接后进行任何其他指定前需要使用的密码</div><div class="line"></div><div class="line">　　maxclients：限制同时连接的客户端数量</div><div class="line"></div><div class="line">　　maxmemory：设置redis能够使用的最大内存</div><div class="line"></div><div class="line">　　appendonly：开启appendonly模式后，redis会把每一次所接收到的写操作都追加到appendonly.aof文件中，当redis重新启动时，会从该文件恢复出之前的状态</div><div class="line"></div><div class="line">　　appendfsync：设置appendonly.aof文件进行同步的频率</div><div class="line"></div><div class="line">　　vm_enabled：是否开启虚拟内存支持</div><div class="line"></div><div class="line">　　vm_swap_file：设置虚拟内存的交换文件的路径</div><div class="line"></div><div class="line">　　vm_max_momery：设置开启虚拟内存后，redis将使用的最大物理内存的大小，默认为0</div><div class="line"></div><div class="line">　　vm_page_size：设置虚拟内存页的大小</div><div class="line"></div><div class="line">　　vm_pages：设置交换文件的总的page数量</div><div class="line"></div><div class="line">　　vm_max_thrrads：设置vm IO同时使用的线程数量</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> redis </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[关于SEO]]></title>
      <url>/seo.html</url>
      <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><blockquote>
<p><code>SEO</code>是由英文<code>Search Engine Optimization</code>缩写而来， 中文意译为“搜索引擎优化”！SEO是指通过对网站进行站内优化和修复(网站Web结构调整、网站内容建设、网站代码优化和编码等)和站外优化，从而提高网站的网站关键词排名以及公司产品的曝光度。通过搜索引擎查找信息是当今网民们寻找网上信息和资源的主要手段。(来自百度百科)</p>
</blockquote>
<a id="more"></a>
<h3 id="关于谷歌站长平台Google-Search-Console"><a href="#关于谷歌站长平台Google-Search-Console" class="headerlink" title="关于谷歌站长平台Google Search Console"></a>关于谷歌站长平台Google Search Console</h3><p>在国内使用谷歌大家都懂的，这里就说下谷歌收录我们的网站</p>
<p>登陆谷歌站长平台，验证我们的网站的所有权，推荐使用html验证，方便。</p>
<p>然后提交我们的sitemap.xml站点地图，谷歌爬虫就会自动去抓取我们的网站了。</p>
<p>网站提交到谷歌大约一到两天就会被收录，速度是相当快的。</p>
<h3 id="关于百度站长平台"><a href="#关于百度站长平台" class="headerlink" title="关于百度站长平台"></a>关于百度站长平台</h3><p>在国内的网站，离开了百度，就可以回去玩泥巴了。</p>
<p>所以，在国内的网站优先做好百度这边的相关优化，相对于谷歌，百度这边的东西稍微复杂点，需要花点时间研究下。</p>
<h4 id="链接提交"><a href="#链接提交" class="headerlink" title="链接提交"></a>链接提交</h4><p>百度上分为两种链接提交方式，当然你可以都是用，或者使用其中一种。<br><img src="http://ov62kaxkk.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20170924215007.png" alt="image"></p>
<h5 id="自动提交"><a href="#自动提交" class="headerlink" title="自动提交"></a>自动提交</h5><p>自动提交又分三种方式，一样的你也可以都使用。</p>
<h6 id="主动推送"><a href="#主动推送" class="headerlink" title="主动推送"></a>主动推送</h6><p><img src="http://ov62kaxkk.bkt.clouddn.com/3333.png" alt="image"><br>调用百度给我们生成的接口，在我们推送网页到服务器的时候，可以自动提交我们的网站到百度站长平台。（推荐）</p>
<h6 id="自动推送"><a href="#自动推送" class="headerlink" title="自动推送"></a>自动推送</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> bp = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</div><div class="line">    <span class="keyword">var</span> curProtocol = <span class="built_in">window</span>.location.protocol.split(<span class="string">':'</span>)[<span class="number">0</span>];</div><div class="line">    <span class="keyword">if</span> (curProtocol === <span class="string">'https'</span>) &#123;</div><div class="line">        bp.src = <span class="string">'https://zz.bdstatic.com/linksubmit/push.js'</span>;        </div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> &#123;</div><div class="line">        bp.src = <span class="string">'http://push.zhanzhang.baidu.com/push.js'</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">var</span> s = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"script"</span>)[<span class="number">0</span>];</div><div class="line">    s.parentNode.insertBefore(bp, s);</div><div class="line">&#125;)();</div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure>
<p>在我们需要推送的网页上加上这个js脚本，每次打开这个网页，都会自动将网页推送给百度。</p>
<h6 id="sitemap"><a href="#sitemap" class="headerlink" title="sitemap"></a>sitemap</h6><p>提交我们的sitemap.xml，百度爬虫可以自动抓取我们的网站。</p>
<h5 id="手动提交"><a href="#手动提交" class="headerlink" title="手动提交"></a>手动提交</h5><p>故名思意，把我们的网页都填上去，手动提交。相对上面的自动提交，就显得比较麻烦。</p>
<h4 id="robots"><a href="#robots" class="headerlink" title="robots"></a>robots</h4><p>百度上的说明：</p>
<blockquote>
<p>使用说明<br>1、robots.txt可以告诉百度您网站的哪些页面可以被抓取，哪些页面不可以被抓取。<br>2、您可以通过Robots工具来创建、校验、更新您的robots.txt文件，或查看您网站robots.txt文件在百度生效的情况。<br>3、Robots工具目前支持48k的文件内容检测，请保证您的robots.txt文件不要过大，目录最长不超过250个字符。 </p>
</blockquote>
<p>很容易理解，不知道怎么生成，可以去网站百度robots有自动生成的站长工具。</p>
<h3 id="优化网站"><a href="#优化网站" class="headerlink" title="优化网站"></a>优化网站</h3><p>按道理说目录结构越简单，爬虫越容易抓取。</p>
<p>网页尾缀改成.html</p>
<p>国内网站不要挂在Github Page上面，百度爬虫抓取不到。</p>
<p>给非友情链接的出站链接添加 “nofollow” 标签，<br>爬虫会从你网站跑出去，再也回不来了，加上这个标签，爬虫不回去爬取这个链接，便签避免不必要的PR输出。</p>
<p>网站关键字keywords</p>
<p>网站简介 description</p>
<p>网站 title</p>
<blockquote>
<p>关键字出现在title标题里是有利于seo优化的，前提是你的目标关键词已经确定好。如果确定好的话，尽可能让它们在title标题尽量靠前，同时标题总字数注意控制在80个字符以内，切勿堆砌关键字。title的标点符号：关键词分割符号英文半角逗号，_ | ;品牌与关键词分割符号 -</p>
</blockquote>
<p>周末了，休息了。这个国庆要加班，难受。。。</p>
<p>update20171002</p>
<p>哈哈 <code>今日头条销售威胁</code> 这个新闻看了下，</p>
<blockquote>
<p>9月30日消息，近日某锁具商家老板表示，遭到今日头条销售威胁，如果继续在百度投放广告，而不在今日头条投放广告，将让自己团队的人一起点击直到商家百度余额为负。<br>据该商家老板的录音，近日，他接到今日头条销售电话，“你们百度这边还有多少余额啊？我看看要不要再点一下。你这边真的不考虑一下其他平台吗？”<br>在老板表示不考虑其他平台后，该销售称刚才已经让团队每个人都点一下了，大概一千个人吧，可能让该商家百度的余额等一会是负的。“所以说没事呀，不是挺好的嘛，你做（百度）嘛！你做！我们点嘛！做，一直做得你做到什么时候我们点到什么时候。”<br>随后，在威胁商家后，该销售向推荐今日头条，不过并未多加介绍，直接向商家表示，现在把微信加一下，把我的账号发给你，然后你打一下款就好了。</p>
</blockquote>
<p>如果在以前，对这个事件可能感觉到不可思议，但是，目前，<code>百度凤巢</code> 推广后，导致这个国内互联网竞价有点变化，以前都是看谁出的钱多，谁往上，现在还要看质量，网页排版，体验有很大影响。所以现在要竞价更高，而且还是在背后计算，才能出结果。</p>
<p>据说莆田系医院的广告，点一次，需要付1000以上，可怕，大家为了<code>正义</code>keyi 多点点，当然每天每个IP只生效一次，就是那种带金色V的。<br><img src="https://i.loli.net/2017/10/09/59db8508b75aa.png" alt="img"></p>
<p>update20171009</p>
<p>关于博客长时间没更新后，导致收录量降低的问题</p>
<p>总结就是博客质量不行咯，扎心了/。<br>当然坚持更新下，估计还是会回来的，真是心累，百度这种算法要累死人。</p>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> SEO </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[高四位，低四位]]></title>
      <url>/byte.html</url>
      <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>今天做业务的时候，遇到个问题，做协议的消息处理中，有个档位类型，分<code>高四位</code>是一种档位，<code>低四位</code>是例外的一种档位，当时看到需求一阵懵，百度了下，才了解了下，才清楚。<br><a id="more"></a></p>
<p>其实这个就是4个位加上四个位，刚好一个字节，就是一个byte，例如<code>00011000</code>，我们需要把它拆开。</p>
<h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/** </span></div><div class="line"><span class="comment">* <span class="doctag">@ClassName</span>: GearsType </span></div><div class="line"><span class="comment">* <span class="doctag">@Description</span>: 档位类型 </span></div><div class="line"><span class="comment">* <span class="doctag">@author</span> zhangkai </span></div><div class="line"><span class="comment">* <span class="doctag">@date</span> 2017年9月23日 下午2:16:23 </span></div><div class="line"><span class="comment">*  </span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="keyword">enum</span> GearsType &#123;</div><div class="line">	<span class="comment">//空挡</span></div><div class="line">	G00((<span class="keyword">byte</span>)<span class="number">0</span>, <span class="string">"空档"</span>, <span class="keyword">true</span>),</div><div class="line">	<span class="comment">//高4位档</span></div><div class="line">	G01((<span class="keyword">byte</span>)<span class="number">1</span>, <span class="string">"倒车档"</span>, <span class="keyword">true</span>), G02((<span class="keyword">byte</span>)<span class="number">2</span>, <span class="string">"低速档"</span>, <span class="keyword">true</span>), G03((<span class="keyword">byte</span>)<span class="number">4</span>, <span class="string">"中速档"</span>, <span class="keyword">true</span>), G04((<span class="keyword">byte</span>)<span class="number">8</span>, <span class="string">"高速挡"</span>, <span class="keyword">true</span>), </div><div class="line">	<span class="comment">//低4位档</span></div><div class="line">	G05((<span class="keyword">byte</span>)<span class="number">1</span>, <span class="string">"1档"</span>, <span class="keyword">false</span>), G06((<span class="keyword">byte</span>)<span class="number">2</span>, <span class="string">"2档"</span>, <span class="keyword">false</span>), G07((<span class="keyword">byte</span>)<span class="number">4</span>, <span class="string">"3档"</span>, <span class="keyword">false</span>), G08((<span class="keyword">byte</span>)<span class="number">8</span>, <span class="string">"4档"</span>, <span class="keyword">false</span>);</div><div class="line">	</div><div class="line">	<span class="keyword">private</span> Byte name;</div><div class="line">	</div><div class="line">	<span class="keyword">private</span> String value;</div><div class="line">	</div><div class="line">	<span class="keyword">private</span> Boolean flag;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> name</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> value</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> flag</span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="function"><span class="keyword">private</span> <span class="title">GearsType</span><span class="params">(Byte name, String value, Boolean flag)</span> </span>&#123;</div><div class="line">		<span class="keyword">this</span>.name = name;</div><div class="line">		<span class="keyword">this</span>.value = value;</div><div class="line">		<span class="keyword">this</span>.flag = flag;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	 * 获取档位</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> string</span></div><div class="line"><span class="comment">	 * <span class="doctag">@return</span></span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getValue</span><span class="params">(String string)</span> </span>&#123;</div><div class="line">		Byte index = Byte.parseByte(string);</div><div class="line">		<span class="keyword">if</span> (index == G00.name) &#123;</div><div class="line">			<span class="keyword">return</span> G00.value;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">byte</span> high = (<span class="keyword">byte</span>) ((index &amp; <span class="number">0xf0</span>) &gt;&gt; <span class="number">4</span>);<span class="comment">// 高四位</span></div><div class="line">		<span class="keyword">byte</span> low = (<span class="keyword">byte</span>) (index &amp; <span class="number">0x0f</span>);<span class="comment">// 低四位</span></div><div class="line">		String highResult = <span class="keyword">null</span>;</div><div class="line">		String lowResult = <span class="keyword">null</span>;</div><div class="line">		<span class="keyword">for</span> (GearsType g : GearsType.values()) &#123;</div><div class="line">			<span class="comment">// 高四位</span></div><div class="line">			<span class="keyword">if</span> (g.flag &amp;&amp; g.name == high &amp;&amp; highResult == <span class="keyword">null</span>) &#123;</div><div class="line">				highResult = g.value;</div><div class="line">				<span class="comment">// 低四位</span></div><div class="line">			&#125; <span class="keyword">else</span> <span class="keyword">if</span> (!g.flag &amp;&amp; g.name == low &amp;&amp; lowResult == <span class="keyword">null</span>) &#123;</div><div class="line">				lowResult = g.value;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> highResult == <span class="keyword">null</span> || lowResult == <span class="keyword">null</span> ? <span class="keyword">null</span> : highResult + <span class="string">"/"</span> + lowResult;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h3><p><code>0xf0</code> 是 8位 ：<code>1111 0000</code><br>使用位与操作符<code>&amp;</code>，再将它右移4位，就可以得到高四位了，同理可以得到低四位。</p>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[20170917]]></title>
      <url>/20170917.html</url>
      <content type="html"><![CDATA[<p>今天是周日，作为个程序员，就不要在这个好日子出去浪了，安心，最该就是要注意养好身体，哈哈，因为上班确实有点累。</p>
<p>但是，但是了，个人生活也不能太糟蹋了，都说程序员的生活就像只无头的苍蝇，邋遢的很，这句话，说点就有点不对了，我今天就要来个大扫除了，毕竟，这个狗窝我还得住好长一段日子。</p>
<p>一大早做个早餐吃下，就把被褥，都扔进洗衣机了，接下来搞卫生了，突然发现门上有只壁虎，但是，它已经憋成一坨了。。难受，很明显，它被门真的夹坏了。只能小心清理下它的身体，祈祷不要怪我啊啊啊，我不是有意的。</p>
<p>只能说经历这个就遭报应了啊，拿起简单划个快递箱子半天划不开，结果弄完，发现手上一滩血，bbb，受伤了，手上两道口子，刚才没发觉，剪刀什么时候这么快，完全没知觉。。。</p>
<p>现在都感觉后怕了。。明天还能去上班吗？</p>
]]></content>
      
        <categories>
            
            <category> 生活 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[maven错误 Plugin execution not covered by lifecycle configuration org.codehaus.mo...]]></title>
      <url>/maven-error-one.html</url>
      <content type="html"><![CDATA[<p>导<code>geoserver</code>源码时发现，我的<code>maven</code>项目<code>pom.xml</code>有几个都报错了，一时没解决记录下。<a id="more"></a></p>
<h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><ul>
<li>eclipse  - 4.61</li>
<li>maven 3.3.9</li>
<li>项目 geoserver 源码 2.11.2 </li>
</ul>
<h3 id="出现错误"><a href="#出现错误" class="headerlink" title="出现错误"></a>出现错误</h3><p>正常import源码maven项目报错<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Multiple annotations found at this line:</div><div class="line">- maven-enforcer-plugin ...</div><div class="line">- Plugin execution not covered by lifecycle configuration: org.codehaus.mojo:aspectj-maven-plugin:1.3.1:compile (execution: </div><div class="line"> default, phase: compile)</div></pre></td></tr></table></figure></p>
<h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span> ... <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span> ... <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">                  ....</div><div class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><plugins> 标签外再套一个 <code>&lt;pluginManagement&gt;</code> 标签  </plugins></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> maven </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MQTT在JAVA中使用]]></title>
      <url>/java-mqtt.html</url>
      <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><blockquote>
<p>由于项目中需求，多个客户机终端不断发送位置给服务机，服务机根据消息，准确判断信息，并返回响应，回复该客户机。</p>
</blockquote>
<p>在这里我们的服务机，不但要订阅所有客户机的主题，还要根据客户机消息做出相应的响应，服务机同时充当客户机使用，客户机也推送主题消息，充当服务器。<br><a id="more"></a> </p>
<blockquote>
<p>关键问题：</p>
<ol>
<li>服务器怎么区分各个客户机</li>
<li>主题配置方面的问题，不可能每个机器配个主题</li>
<li>通信方面，选择哪种消息级别</li>
</ol>
</blockquote>
<h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><h4 id="使用maven项目，刚好在仓库导包了，可以使用（推荐）"><a href="#使用maven项目，刚好在仓库导包了，可以使用（推荐）" class="headerlink" title="使用maven项目，刚好在仓库导包了，可以使用（推荐）"></a>使用maven项目，刚好在仓库导包了，可以使用（推荐）</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.eclipse.paho<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>org.eclipse.paho.client.mqttv3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="仓库没有包，直接去网上下，可以直接导包到Lib中"><a href="#仓库没有包，直接去网上下，可以直接导包到Lib中" class="headerlink" title="仓库没有包，直接去网上下，可以直接导包到Lib中"></a>仓库没有包，直接去网上下，可以直接导包到Lib中</h4><h3 id="编写"><a href="#编写" class="headerlink" title="编写"></a>编写</h3><h4 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.devframe.mqtt.test;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.MqttClient;</div><div class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.MqttConnectOptions;</div><div class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.MqttException;</div><div class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.persist.MemoryPersistence;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">/** </span></div><div class="line"><span class="comment">* <span class="doctag">@ClassName</span>: ServerMQTT </span></div><div class="line"><span class="comment">* <span class="doctag">@Description</span>:  服务器接收多个客户端的主题，同时要像客户端反馈</span></div><div class="line"><span class="comment">* <span class="doctag">@author</span> zhangkai </span></div><div class="line"><span class="comment">* <span class="doctag">@date</span> 2017年9月12日 下午12:52:01 </span></div><div class="line"><span class="comment">*  </span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerMQTT</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="comment">// 连接参数</span></div><div class="line">	<span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String CONNECTION_STRING = <span class="string">"tcp://192.168.19.200:8001"</span>; <span class="comment">//host</span></div><div class="line">	<span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">boolean</span> CLEAN_START = <span class="keyword">true</span>;  <span class="comment">//是否清空session，false保留</span></div><div class="line">	<span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">short</span> KEEP_ALIVE = <span class="number">30</span>;<span class="comment">// 低耗网络，但是又需要及时获取数据，心跳30*1.5s</span></div><div class="line">	<span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">short</span> KEEP_TIME_OUT = <span class="number">10</span>; <span class="comment">//连接超时</span></div><div class="line">	<span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String CLIENT_ID = <span class="string">"master"</span>;<span class="comment">// 客户端标识</span></div><div class="line">	<span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span>[] QOS_VALUES = &#123; <span class="number">0</span> &#125;;<span class="comment">// 对应主题的消息级别</span></div><div class="line">	<span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String[] TOPICS = &#123; <span class="string">"agri/#"</span>&#125;; <span class="comment">//匹配agri/下所有的主题</span></div><div class="line">	<span class="keyword">private</span> <span class="keyword">final</span> String userName = <span class="string">"agri"</span>;</div><div class="line">	<span class="keyword">private</span> <span class="keyword">final</span> String passWord = <span class="string">"admin@123"</span>;</div><div class="line">	<span class="keyword">private</span> MqttConnectOptions options;</div><div class="line">	<span class="keyword">private</span> MqttClient mqttClient;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	 * 构造函数</span></div><div class="line"><span class="comment">	 * </span></div><div class="line"><span class="comment">	 * <span class="doctag">@throws</span> MqttException</span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">ServerMQTT</span><span class="params">()</span> <span class="keyword">throws</span> MqttException </span>&#123;</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	 * 发送消息</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> topic 主题</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> message 消息</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> qos 消息级别&#123;0,1,2&#125;</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> retained 是否是实时发送的消息(false=实时，true=服务器上保留的最后消息)</span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMessage</span><span class="params">(String topic, String message, <span class="keyword">int</span> qos, <span class="keyword">boolean</span> retained)</span> </span>&#123;</div><div class="line">		<span class="keyword">try</span> &#123;</div><div class="line">			<span class="comment">//断开重连</span></div><div class="line">			<span class="keyword">if</span> (mqttClient == <span class="keyword">null</span> || !mqttClient.isConnected()) &#123;</div><div class="line">				connect();</div><div class="line">			&#125;</div><div class="line">			<span class="comment">// 发布消息</span></div><div class="line">			mqttClient.publish(topic, message.getBytes(), qos, retained);</div><div class="line">		&#125; <span class="keyword">catch</span> (MqttException e) &#123;</div><div class="line">			e.printStackTrace();</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	 * 重新连接服务</span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">connect</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">try</span> &#123;</div><div class="line">			mqttClient = <span class="keyword">new</span> MqttClient(CONNECTION_STRING, CLIENT_ID, <span class="keyword">new</span> MemoryPersistence());</div><div class="line">			<span class="comment">// MQTT的连接设置</span></div><div class="line">			options = <span class="keyword">new</span> MqttConnectOptions();</div><div class="line">			<span class="comment">// 设置是否清空session,这里如果设置为false表示服务器会保留客户端的连接记录，这里设置为true表示每次连接到服务器都以新的身份连接</span></div><div class="line">			options.setCleanSession(CLEAN_START);</div><div class="line">			<span class="comment">// 设置连接的用户名</span></div><div class="line">			options.setUserName(userName);</div><div class="line">			<span class="comment">// 设置连接的密码</span></div><div class="line">			options.setPassword(passWord.toCharArray());</div><div class="line">			<span class="comment">// 设置超时时间 单位为秒</span></div><div class="line">			options.setConnectionTimeout(KEEP_TIME_OUT);</div><div class="line">			<span class="comment">// 设置会话心跳时间 单位为秒 服务器会每隔1.5*30秒的时间向客户端发送个消息判断客户端是否在线，但这个方法并没有重连的机制</span></div><div class="line">			options.setKeepAliveInterval(KEEP_ALIVE); </div><div class="line">			<span class="comment">// 设置回调</span></div><div class="line">			mqttClient.setCallback(<span class="keyword">new</span> PushCallback());</div><div class="line"></div><div class="line">			mqttClient.connect(options);</div><div class="line">			mqttClient.subscribe( TOPICS , QOS_VALUES);</div><div class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">			e.printStackTrace();</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	 * 启动入口</span></div><div class="line"><span class="comment">	 * </span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> args</span></div><div class="line"><span class="comment">	 * <span class="doctag">@throws</span> MqttException</span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> MqttException </span>&#123;</div><div class="line">		ServerMQTT server = <span class="keyword">new</span> ServerMQTT();</div><div class="line">		server.connect();</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="客户机"><a href="#客户机" class="headerlink" title="客户机"></a>客户机</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.devframe.mqtt.test;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.concurrent.Executors;</div><div class="line"><span class="keyword">import</span> java.util.concurrent.ScheduledExecutorService;</div><div class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.MqttClient;</div><div class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.MqttConnectOptions;</div><div class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.MqttException;</div><div class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.MqttSecurityException;</div><div class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.persist.MemoryPersistence;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClientMQTT</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="comment">// 连接参数</span></div><div class="line">	<span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String CONNECTION_STRING = <span class="string">"tcp://192.168.19.200:8001"</span>; <span class="comment">// host</span></div><div class="line">	<span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">boolean</span> CLEAN_START = <span class="keyword">true</span>; <span class="comment">// 是否清空session，false保留</span></div><div class="line">	<span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">short</span> KEEP_ALIVE = <span class="number">30</span>;<span class="comment">// 低耗网络，但是又需要及时获取数据，心跳30*1.5s</span></div><div class="line">	<span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">short</span> KEEP_TIME_OUT = <span class="number">10</span>; <span class="comment">// 连接超时</span></div><div class="line">	<span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String CLIENT_ID = <span class="string">"client1"</span>;<span class="comment">// 客户端标识</span></div><div class="line">	<span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span>[] QOS_VALUES = &#123; <span class="number">0</span> &#125;;<span class="comment">// 对应主题的消息级别</span></div><div class="line">	<span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String PUBLISH_TOPIC = <span class="string">"agri/index1"</span>;</div><div class="line">	<span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String[] RECEIVE_TOPIC = &#123;<span class="string">"agri/index1/back"</span>&#125;;</div><div class="line">	<span class="keyword">private</span> MqttClient client;</div><div class="line">	<span class="keyword">private</span> MqttConnectOptions options;</div><div class="line">	<span class="keyword">private</span> <span class="keyword">final</span> String userName = <span class="string">"agri"</span>;</div><div class="line">	<span class="keyword">private</span> <span class="keyword">final</span> String passWord = <span class="string">"admin@123"</span>;</div><div class="line">	<span class="keyword">private</span> ScheduledExecutorService scheduler;</div><div class="line"></div><div class="line">	<span class="comment">// 重新连接</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startReconnect</span><span class="params">()</span> </span>&#123;</div><div class="line">		scheduler = Executors.newSingleThreadScheduledExecutor();</div><div class="line">		scheduler.scheduleAtFixedRate(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">				<span class="keyword">if</span> (!client.isConnected()) &#123;</div><div class="line">					<span class="keyword">try</span> &#123;</div><div class="line">						client.connect(options);</div><div class="line">					&#125; <span class="keyword">catch</span> (MqttSecurityException e) &#123;</div><div class="line">						e.printStackTrace();</div><div class="line">					&#125; <span class="keyword">catch</span> (MqttException e) &#123;</div><div class="line">						e.printStackTrace();</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;, <span class="number">0</span> * <span class="number">1000</span>, <span class="number">10</span> * <span class="number">1000</span>, TimeUnit.MILLISECONDS);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	 * 发送消息</span></div><div class="line"><span class="comment">	 * </span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> topic</span></div><div class="line"><span class="comment">	 *            主题</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> message</span></div><div class="line"><span class="comment">	 *            消息</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> qos</span></div><div class="line"><span class="comment">	 *            消息级别&#123;0,1,2&#125;</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> retained</span></div><div class="line"><span class="comment">	 *            是否是实时发送的消息(false=实时，true=服务器上保留的最后消息)</span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMessage</span><span class="params">(String topic, String message, <span class="keyword">int</span> qos, <span class="keyword">boolean</span> retained)</span> </span>&#123;</div><div class="line">		<span class="keyword">try</span> &#123;</div><div class="line">			<span class="keyword">if</span> (client == <span class="keyword">null</span> || !client.isConnected()) &#123;</div><div class="line">				connect();</div><div class="line">			&#125;</div><div class="line">			<span class="comment">// 发布消息</span></div><div class="line">			client.publish(topic, message.getBytes(), qos, retained);</div><div class="line">		&#125; <span class="keyword">catch</span> (MqttException e) &#123;</div><div class="line">			e.printStackTrace();</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	 * 重新连接服务</span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">connect</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">try</span> &#123;</div><div class="line">			client = <span class="keyword">new</span> MqttClient(CONNECTION_STRING, CLIENT_ID, <span class="keyword">new</span> MemoryPersistence());</div><div class="line">			<span class="comment">// MQTT的连接设置</span></div><div class="line">			options = <span class="keyword">new</span> MqttConnectOptions();</div><div class="line">			<span class="comment">// 设置是否清空session,这里如果设置为false表示服务器会保留客户端的连接记录，这里设置为true表示每次连接到服务器都以新的身份连接</span></div><div class="line">			options.setCleanSession(CLEAN_START);</div><div class="line">			<span class="comment">// 设置连接的用户名</span></div><div class="line">			options.setUserName(userName);</div><div class="line">			<span class="comment">// 设置连接的密码</span></div><div class="line">			options.setPassword(passWord.toCharArray());</div><div class="line">			<span class="comment">// 设置超时时间 单位为秒</span></div><div class="line">			options.setConnectionTimeout(KEEP_TIME_OUT);</div><div class="line">			<span class="comment">// 设置会话心跳时间 单位为秒 服务器会每隔1.5*30秒的时间向客户端发送个消息判断客户端是否在线，但这个方法并没有重连的机制</span></div><div class="line">			options.setKeepAliveInterval(KEEP_ALIVE);</div><div class="line">			<span class="comment">// 设置回调</span></div><div class="line">			client.setCallback(<span class="keyword">new</span> PushCallback());</div><div class="line"></div><div class="line">			client.connect(options);</div><div class="line">			client.subscribe(RECEIVE_TOPIC, QOS_VALUES);</div><div class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">			e.printStackTrace();</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="comment">// TODO 每秒一次向服务端发送消息</span></div><div class="line">		<span class="keyword">try</span> &#123;</div><div class="line">			<span class="keyword">int</span> i = <span class="number">0</span>;</div><div class="line">			<span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</div><div class="line">				sendMessage(PUBLISH_TOPIC, <span class="string">"hello,topic"</span> + i, <span class="number">0</span>, <span class="keyword">true</span>);</div><div class="line">				i++;</div><div class="line">				Thread.sleep(<span class="number">1000</span>);</div><div class="line">			&#125;</div><div class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">			e.printStackTrace();</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> MqttException </span>&#123;</div><div class="line">		ClientMQTT client = <span class="keyword">new</span> ClientMQTT();</div><div class="line">		Thread thread = <span class="keyword">new</span> Thread(client, <span class="string">"th1"</span>);</div><div class="line">		thread.start();</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>测试的时候就是把客户机复制了几个，主题和clientid改下，clientid不能一样，不然不能登陆。</p>
<h3 id="回调类"><a href="#回调类" class="headerlink" title="回调类"></a>回调类</h3><p>发送完消息，Service需要在这里处理，着我们先做的事情啦。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.devframe.mqtt.test;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.IMqttDeliveryToken;  </div><div class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.MqttCallback;  </div><div class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.MqttMessage;  </div><div class="line">  </div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: PushCallback</span></div><div class="line"><span class="comment"> * <span class="doctag">@Description</span>: 发布消息的回调类</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> *               必须实现MqttCallback的接口并实现对应的相关接口方法CallBack 类将实现 MqttCallBack。</span></div><div class="line"><span class="comment"> *               每个客户机标识都需要一个回调实例。在此示例中，构造函数传递客户机标识以另存为实例数据。</span></div><div class="line"><span class="comment"> *               在回调中，将它用来标识已经启动了该回调的哪个实例。 必须在回调类中实现三个方法：</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> *               public void messageArrived(MqttTopic topic, MqttMessage</span></div><div class="line"><span class="comment"> *               message)接收已经预订的发布。</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> *               public void connectionLost(Throwable cause)在断开连接时调用。</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> *               public void deliveryComplete(MqttDeliveryToken token))</span></div><div class="line"><span class="comment"> *               接收到已经发布的QoS 0、 QoS 1 或 QoS 2 消息的传递令牌时调用。 由 MqttClient.connect</span></div><div class="line"><span class="comment"> *               激活此回调。</span></div><div class="line"><span class="comment"> * <span class="doctag">@author</span> zhangkai</span></div><div class="line"><span class="comment"> * <span class="doctag">@date</span> 2017年9月12日 上午11:30:44</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PushCallback</span> <span class="keyword">implements</span> <span class="title">MqttCallback</span> </span>&#123;  </div><div class="line">  </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">connectionLost</span><span class="params">(Throwable cause)</span> </span>&#123;  </div><div class="line">        <span class="comment">// TODO 连接丢失后，一般在这里面进行重连  </span></div><div class="line">        System.out.println(<span class="string">"连接断开，可以做重连"</span>);  </div><div class="line">    &#125;  </div><div class="line">  </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deliveryComplete</span><span class="params">(IMqttDeliveryToken token)</span> </span>&#123;  </div><div class="line">        System.out.println(<span class="string">"deliveryComplete---------"</span> + token.isComplete());  </div><div class="line">    &#125;  </div><div class="line">  </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">messageArrived</span><span class="params">(String topic, MqttMessage message)</span> <span class="keyword">throws</span> Exception </span>&#123;  </div><div class="line">        <span class="comment">// TODO subscribe后得到的消息会执行到这里面，后续工作将在这里进行  </span></div><div class="line">        System.out.println(<span class="string">"接收消息主题 : "</span> + topic);  </div><div class="line">        System.out.println(<span class="string">"接收消息Qos : "</span> + message.getQos());  </div><div class="line">        System.out.println(<span class="string">"接收消息内容 : "</span> + <span class="keyword">new</span> String(message.getPayload()));  </div><div class="line">    &#125; </div><div class="line">    </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ol>
<li>使用前缀通配符的方式加上特殊码区分各个机器的主题。</li>
<li>根据不同业务的需求，需要合理的选择不同级别的消息。</li>
<li>一般把发消息的参数 <code>retained</code> 设为 <code>false</code> 比较好，这个参数的说明是:<blockquote>
<p>设为true之后把消息保存到本地，每一个订阅该主题的subscriber都会收到，每次订阅的时候都会收到。</p>
</blockquote>
</li>
</ol>
<p>所以，刚开始做这个都得时候就是设置成true，包括上面的测试代码，还没改过来，业务代码已经全部改好了。不然没次去连接mqtt的时候，都会订阅到一大片消息，电脑跑到卡得不行，哈哈。</p>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> MQTT </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Mosquitto用户名密码配置]]></title>
      <url>/mqtt-user.html</url>
      <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>由于需要把<code>mqtt</code>部署到外网上面去，所以需要关闭<code>匿名登陆</code>，采取用户<code>认证模式</code>，而且还可能需要把主题加密。</p>
<a id="more"></a>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h4><p>配置参数在<code>/etc/mosquitto/mosquitto.conf</code>中，</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">allow_anonymous 允许匿名登陆</div><div class="line">password_file 账号密码文件</div><div class="line">acl_file 访问控制列表</div></pre></td></tr></table></figure>
<p>配置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">[root@localhost mosquitto]<span class="comment"># vim mosquitto.conf           </span></div><div class="line"><span class="comment"># Place your local configuration in /etc/mosquitto/conf.d/</span></div><div class="line"></div><div class="line">pid_file /var/run/mosquitto.pid</div><div class="line"></div><div class="line">persistence <span class="literal">true</span></div><div class="line">persistence_location /var/lib/mosquitto/</div><div class="line"></div><div class="line"><span class="comment">#log_dest file /var/log/mosquitto/mosquitto.log</span></div><div class="line"></div><div class="line">include_dir /etc/mosquitto/conf.d</div><div class="line">allow_anonymous <span class="literal">false</span></div><div class="line">password_file /etc/mosquitto/pwfile</div><div class="line">acl_file /etc/mosquitto/aclfile</div><div class="line">port 8001</div></pre></td></tr></table></figure></p>
<h4 id="查看用户"><a href="#查看用户" class="headerlink" title="查看用户"></a>查看用户</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@localhost mosquitto]<span class="comment"># cat pwfile                   </span></div><div class="line">agri:<span class="variable">$6</span><span class="variable">$NprvJLB</span>/CkEomWGy<span class="variable">$gNj5Mr6Wf</span>+2Xz16P6dIZYD/ladZZtyKQMJ/tdpy7WLepj5akpPB+hF8zolrNd5IacbsAxXDWX1vS5I9Pj4fnCA==</div></pre></td></tr></table></figure>
<p>添加用户<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mosquitto_passwd -c /etc/mosquitto/pwfile wuwii</div></pre></td></tr></table></figure></p>
<p>设置好密码</p>
<h4 id="添加Topic和用户的关系"><a href="#添加Topic和用户的关系" class="headerlink" title="添加Topic和用户的关系"></a>添加Topic和用户的关系</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># vim /etc/mosquitto/aclfile</span></div><div class="line"><span class="comment"># This affects access control for clients with no username.</span></div><div class="line"><span class="comment">#topic read $SYS/#</span></div><div class="line"></div><div class="line"><span class="comment"># This only affects clients with username "roger".</span></div><div class="line"><span class="comment">#user roger</span></div><div class="line"><span class="comment">#topic foo/bar</span></div><div class="line"><span class="comment">#user zhang</span></div><div class="line">user zhang</div><div class="line">topic <span class="built_in">read</span> mtopic/<span class="comment">#</span></div><div class="line"></div><div class="line">user zhang</div><div class="line">topic write mtopic/<span class="comment">#</span></div><div class="line"></div><div class="line"><span class="comment"># This affects all clients.</span></div><div class="line"><span class="comment"># pattern write $SYS/broker/connection/%c/state</span></div></pre></td></tr></table></figure>
<h4 id="重启测试"><a href="#重启测试" class="headerlink" title="重启测试"></a>重启测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@localhost mosquitto]<span class="comment"># /etc/init.d/mosquitto restart</span></div><div class="line">Restarting mosquitto (via systemctl):                      [  确定  ]</div></pre></td></tr></table></figure>
<p>ps:添加用户的时候会出现<code>覆盖</code>的问题，再看。</p>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
            <tag> MQTT </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS 7 下安装mosquitto]]></title>
      <url>/install-mosquitto.html</url>
      <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><blockquote>
<p><code>MQTT</code>（Message Queuing Telemetry Transport，消息队列遥测传输）是IBM开发的一个<code>即时通讯协议</code>，有可能成为物联网的重要组成部分。该协议支持所有平台，几乎可以把所有联网物品和外部连接起来，被用来当做传感器和制动器（比如通过Twitter让房屋联网）的通信协议。</p>
</blockquote>
<a id="more"></a>
<h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><blockquote>
<p><code>MQTT协议</code>是为大量计算能力有限，且工作在低带宽、不可靠的网络的远程传感器和控制设备通讯而设计的协议，它具有以下主要的几项特性：<br>1、使用发布/订阅消息模式，提供一对多的消息发布，解除应用程序耦合；<br>2、对负载内容屏蔽的消息传输；<br>3、使用 TCP/IP 提供网络连接；<br>4、有三种消息发布服务质量：<br>“至多一次”，消息发布完全依赖底层 TCP/IP   网络。会发生消息丢失或重复。这一级别可用于如下情况，环境传感器数据，丢失一次读记录无所谓，因为不久后还会有第二次发送。<br>“至少一次”，确保消息到达，但消息重复可能会发生。<br>“只有一次”，确保消息到达一次。这一级别可用于如下情况，在计费系统中，消息重复或丢失会导致不正确的结果。<br>5、小型传输，开销很小（固定长度的头部是 2 字节），协议交换最小化，以降低网络流量；<br>6、使用 Last Will 和 Testament 特性通知有关各方客户端异常中断的机制；</p>
</blockquote>
<h3 id="安装与配置"><a href="#安装与配置" class="headerlink" title="安装与配置"></a>安装与配置</h3><h4 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h4><p>在<code>/etc/yum.repos.d/</code>目录中新建一个<code>mosquitto.repo</code>文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">[home_oojah_mqtt]</div><div class="line"></div><div class="line">name=mqtt (CentOS_CentOS-7)</div><div class="line"></div><div class="line"><span class="built_in">type</span>=rpm-md</div><div class="line"></div><div class="line">baseurl=http://download.opensuse.org/repositories/home:/oojah:/mqtt/CentOS_CentOS-7/</div><div class="line"></div><div class="line">gpgcheck=1</div><div class="line"></div><div class="line">gpgkey=http://download.opensuse.org/repositories/home:/oojah:/mqtt/CentOS_CentOS-7//repodata/repomd.xml.key</div><div class="line"></div><div class="line">enabled=1</div></pre></td></tr></table></figure>
<p>执行 <code>yum search all mosquitto</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># yum search all mosquitto</span></div><div class="line">已加载插件：fastestmirror</div><div class="line">Loading mirror speeds from cached hostfile</div><div class="line"> * epel: mirrors.ustc.edu.cn</div><div class="line">============================================================================================================= 匹配：mosquitto ==============================================================================================================</div><div class="line">mosquitto-clients.x86_64 : Mosquitto <span class="built_in">command</span> line publish/subscribe clients</div><div class="line">mosquitto-debuginfo.x86_64 : Debug information <span class="keyword">for</span> package mosquitto</div><div class="line">mosquitto-devel.x86_64 : Development files <span class="keyword">for</span> mosquitto</div><div class="line">mosquitto.x86_64 : An Open Source MQTT v3.1/v3.1.1 Broker</div><div class="line">libmosquitto-devel.x86_64 : MQTT C client library development files</div><div class="line">libmosquitto1.x86_64 : MQTT C client library</div><div class="line">libmosquittopp-devel.x86_64 : MQTT C++ client library development files</div><div class="line">libmosquittopp1.x86_64 : MQTT C++ client library</div></pre></td></tr></table></figure></p>
<h4 id="安装mosquitto客户端"><a href="#安装mosquitto客户端" class="headerlink" title="安装mosquitto客户端"></a>安装mosquitto客户端</h4><p>执行 <code>yum install -y mosquitto-clients.x86_64</code>  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># yum install -y mosquitto-clients.x86_64</span></div></pre></td></tr></table></figure>
<h4 id="安装mosquitto服务"><a href="#安装mosquitto服务" class="headerlink" title="安装mosquitto服务"></a>安装mosquitto服务</h4><p>执行命令 <code>yum install mosquitto.x86_64</code>  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># yum -y install mosquitto.x86_64</span></div></pre></td></tr></table></figure>
<h4 id="修改mosquitto-conf文件"><a href="#修改mosquitto-conf文件" class="headerlink" title="修改mosquitto.conf文件"></a>修改mosquitto.conf文件</h4><p>文件在<code>/etc/mosquitto/mosquitto.conf</code><br>下面是可以选择的参数 在 <code>/etc/mosquitto/mosquitto.conf.example</code> 中 </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># =================================================================</span></div><div class="line">  <span class="comment"># General configuration</span></div><div class="line">  <span class="comment"># =================================================================</span></div><div class="line">  <span class="comment"># 客户端心跳的间隔时间</span></div><div class="line">  <span class="comment">#retry_interval 20</span></div><div class="line">  <span class="comment"># 系统状态的刷新时间</span></div><div class="line">  <span class="comment">#sys_interval 10</span></div><div class="line">  <span class="comment"># 系统资源的回收时间，0表示尽快处理</span></div><div class="line">  <span class="comment">#store_clean_interval 10</span></div><div class="line">  <span class="comment"># 服务进程的PID</span></div><div class="line"> <span class="comment">#pid_file /var/run/mosquitto.pid</span></div><div class="line"> <span class="comment"># 服务进程的系统用户</span></div><div class="line"> <span class="comment">#user mosquitto</span></div><div class="line"> <span class="comment"># 客户端心跳消息的最大并发数</span></div><div class="line"> <span class="comment">#max_inflight_messages 10</span></div><div class="line"> <span class="comment"># 客户端心跳消息缓存队列</span></div><div class="line"> <span class="comment">#max_queued_messages 100</span></div><div class="line"> <span class="comment"># 用于设置客户端长连接的过期时间，默认永不过期</span></div><div class="line"> <span class="comment">#persistent_client_expiration</span></div><div class="line"><span class="comment"># =================================================================</span></div><div class="line"><span class="comment"># Default listener</span></div><div class="line"><span class="comment"># =================================================================</span></div><div class="line"><span class="comment"># 服务绑定的IP地址</span></div><div class="line"><span class="comment">#bind_address</span></div><div class="line"><span class="comment"># 服务绑定的端口号</span></div><div class="line"><span class="comment">#port 1883</span></div><div class="line"><span class="comment"># 允许的最大连接数，-1表示没有限制</span></div><div class="line"><span class="comment">#max_connections -1</span></div><div class="line"><span class="comment"># cafile：CA证书文件</span></div><div class="line"><span class="comment"># capath：CA证书目录</span></div><div class="line"><span class="comment"># certfile：PEM证书文件</span></div><div class="line"><span class="comment"># keyfile：PEM密钥文件</span></div><div class="line"><span class="comment">#cafile</span></div><div class="line"><span class="comment">#capath</span></div><div class="line"><span class="comment">#certfile</span></div><div class="line"><span class="comment">#keyfile</span></div><div class="line"><span class="comment"># 必须提供证书以保证数据安全性</span></div><div class="line"><span class="comment">#require_certificate false</span></div><div class="line"><span class="comment"># 若require_certificate值为true，use_identity_as_username也必须为true</span></div><div class="line"><span class="comment">#use_identity_as_username false</span></div><div class="line"><span class="comment"># 启用PSK（Pre-shared-key）支持</span></div><div class="line"><span class="comment">#psk_hint</span></div><div class="line"><span class="comment"># SSL/TSL加密算法，可以使用“openssl ciphers”命令获取</span></div><div class="line"><span class="comment"># as the output of that command.</span></div><div class="line"><span class="comment">#ciphers</span></div><div class="line"><span class="comment"># =================================================================</span></div><div class="line"><span class="comment"># Persistence</span></div><div class="line"><span class="comment"># =================================================================</span></div><div class="line"><span class="comment"># 消息自动保存的间隔时间</span></div><div class="line"><span class="comment">#autosave_interval 1800</span></div><div class="line"><span class="comment"># 消息自动保存功能的开关</span></div><div class="line"><span class="comment">#autosave_on_changes false</span></div><div class="line"><span class="comment"># 持久化功能的开关</span></div><div class="line">persistence <span class="literal">true</span></div><div class="line"><span class="comment"># 持久化DB文件</span></div><div class="line"><span class="comment">#persistence_file mosquitto.db</span></div><div class="line"><span class="comment"># 持久化DB文件目录</span></div><div class="line"><span class="comment">#persistence_location /var/lib/mosquitto/</span></div><div class="line"><span class="comment"># =================================================================</span></div><div class="line"><span class="comment"># Logging</span></div><div class="line"><span class="comment"># =================================================================</span></div><div class="line"><span class="comment"># 4种日志模式：stdout、stderr、syslog、topic</span></div><div class="line"><span class="comment"># none 则表示不记日志，此配置可以提升些许性能</span></div><div class="line">log_dest none</div><div class="line"><span class="comment"># 选择日志的级别（可设置多项）</span></div><div class="line"><span class="comment">#log_type error</span></div><div class="line"><span class="comment">#log_type warning</span></div><div class="line"><span class="comment">#log_type notice</span></div><div class="line"><span class="comment">#log_type information</span></div><div class="line"><span class="comment"># 是否记录客户端连接信息</span></div><div class="line"><span class="comment">#connection_messages true</span></div><div class="line"><span class="comment"># 是否记录日志时间</span></div><div class="line"><span class="comment">#log_timestamp true</span></div><div class="line"><span class="comment"># =================================================================</span></div><div class="line"><span class="comment"># Security</span></div><div class="line"><span class="comment"># =================================================================</span></div><div class="line"><span class="comment"># 客户端ID的前缀限制，可用于保证安全性</span></div><div class="line"><span class="comment">#clientid_prefixes</span></div><div class="line"><span class="comment"># 允许匿名用户</span></div><div class="line"><span class="comment">#allow_anonymous true</span></div><div class="line"><span class="comment"># 用户/密码文件，默认格式：username:password</span></div><div class="line"><span class="comment">#password_file</span></div><div class="line"><span class="comment"># PSK格式密码文件，默认格式：identity:key</span></div><div class="line"><span class="comment">#psk_file</span></div><div class="line"><span class="comment"># pattern write sensor/%u/data</span></div><div class="line"><span class="comment"># ACL权限配置，常用语法如下：</span></div><div class="line"><span class="comment"># 用户限制：user &lt;username&gt;</span></div><div class="line"><span class="comment"># 话题限制：topic [read|write] &lt;topic&gt;</span></div><div class="line"><span class="comment"># 正则限制：pattern write sensor/%u/data</span></div><div class="line"><span class="comment">#acl_file</span></div><div class="line"><span class="comment"># =================================================================</span></div><div class="line"><span class="comment"># Bridges</span></div><div class="line"><span class="comment"># =================================================================</span></div><div class="line"><span class="comment"># 允许服务之间使用“桥接”模式（可用于分布式部署）</span></div><div class="line"><span class="comment">#connection &lt;name&gt;</span></div><div class="line"><span class="comment">#address &lt;host&gt;[:&lt;port&gt;]</span></div><div class="line"><span class="comment">#topic &lt;topic&gt; [[[out | in | both] qos-level] local-prefix remote-prefix]</span></div><div class="line"><span class="comment"># 设置桥接的客户端ID</span></div><div class="line"><span class="comment">#clientid</span></div><div class="line">  <span class="comment"># 桥接断开时，是否清除远程服务器中的消息</span></div><div class="line">  <span class="comment">#cleansession false</span></div><div class="line">  <span class="comment"># 是否发布桥接的状态信息</span></div><div class="line">  <span class="comment">#notifications true</span></div><div class="line">  <span class="comment"># 设置桥接模式下，消息将会发布到的话题地址</span></div><div class="line">  <span class="comment"># $SYS/broker/connection/&lt;clientid&gt;/state</span></div><div class="line">  <span class="comment">#notification_topic</span></div><div class="line">  <span class="comment"># 设置桥接的keepalive数值</span></div><div class="line">  <span class="comment">#keepalive_interval 60</span></div><div class="line">  <span class="comment"># 桥接模式，目前有三种：automatic、lazy、once</span></div><div class="line">  <span class="comment">#start_type automatic</span></div><div class="line">  <span class="comment"># 桥接模式automatic的超时时间</span></div><div class="line">  <span class="comment">#restart_timeout 30</span></div><div class="line">  <span class="comment"># 桥接模式lazy的超时时间</span></div><div class="line">  <span class="comment">#idle_timeout 60</span></div><div class="line">  <span class="comment"># 桥接客户端的用户名</span></div><div class="line">  <span class="comment">#username</span></div><div class="line">  <span class="comment"># 桥接客户端的密码</span></div><div class="line">  <span class="comment">#password</span></div><div class="line">  <span class="comment"># bridge_cafile：桥接客户端的CA证书文件</span></div><div class="line">  <span class="comment"># bridge_capath：桥接客户端的CA证书目录</span></div><div class="line">  <span class="comment"># bridge_certfile：桥接客户端的PEM证书文件</span></div><div class="line">  <span class="comment"># bridge_keyfile：桥接客户端的PEM密钥文件</span></div><div class="line">  <span class="comment">#bridge_cafile</span></div><div class="line">  <span class="comment">#bridge_capath</span></div><div class="line">  <span class="comment">#bridge_certfile</span></div><div class="line">  <span class="comment">#bridge_keyfile</span></div><div class="line">  <span class="comment"># 自己的配置可以放到以下目录中</span></div><div class="line">  include_dir /etc/mosquitto/conf.d</div></pre></td></tr></table></figure>
<h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mosquitto -c /etc/mosquitto/mosquitto.conf -d</div></pre></td></tr></table></figure>
<p>主要还是根据需求来配置好用户和加密，用的时候需要了解mqtt协议。 </p>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
            <tag> MQTT </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[心]]></title>
      <url>/heart00.html</url>
      <content type="html"><![CDATA[<p>不知道现在你过得到底怎么样，看到你的签名又换了“心比长相好，懂比爱重要”。</p>
<a id="more"></a>
<p>当一个假文艺青年、一个又对你敏感的人看到这句话的时候。我想你可能经历了这段失败的感情真的伤得很深吧。</p>
<p>想照顾你的人很多吧，真的本该消失的人不该再来出现了，我也迷茫了，感觉这段时间忘的东西好快，过的没感觉，没心没肺了。</p>
<p>但是姑娘，最懂你的是自己啊，自己想什么就勇敢做吧，不要记挂在别人身上，也不用太在意别人感受，即使再大的事情还是需要自己来抗，如果听到身边的人一句安慰就溃不成军的话，那还有什么意义了。希望你能坚强，冲动和任性的事情也要少做呀！</p>
<p>但是姑娘不要自我怀疑，不要慌张，你很优秀，一定会嫁给爱情的。越是着急，就越容易受伤。除了爸妈，不必在乎催促你的人，大多数的他们的知识随口问问而已，他们只关心你结没结婚，谈没谈恋爱，真的不必放在心上。</p>
<p>希望你能努力生活，丰富自己，愿生活有诗，有梦，有远方，还有一个懂你、爱你的可心人。</p>
<p>愿大家都越变越好。</p>
]]></content>
      
        <categories>
            
            <category> 碎碎念 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 心情 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Geotools做个最简单叠加分析]]></title>
      <url>/geotools-over-analyze.html</url>
      <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>最近需要利用<code>Geotools</code>开发一些业务需求，今天刚开始搞。本来说是跟跟最新版的<code>geoserver</code>中的geotools一个版本，我的geoserver版本如下<br><img src="http://ov62kaxkk.bkt.clouddn.com/TIM%E6%88%AA%E5%9B%BE20170907172642.png" alt="image">  <a id="more"></a><br><code>geotools</code>版本是<code>17.2</code><br>就屁颠的去项目的pom.xml配置了<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">geotools.version</span>&gt;</span>17.2<span class="tag">&lt;/<span class="name">geotools.version</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- Provides support for PostGIS. Note the different groupId --&gt;</span>  </div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span>  </div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.geotools.jdbc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gt-jdbc-postgis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;geotools.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>  </div><div class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.geotools<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gt-cql<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    		<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;geotools.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span> </div><div class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    	    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.geotools<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gt-opengis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;geotools.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="出了点×"><a href="#出了点×" class="headerlink" title="出了点×"></a>出了点×</h3><p>结果，一直报错这几个包下不下来，我使用的是国内的阿里云镜像。刚开始我还以为是阿里云仓库没这几个包，换成了国外的节点，结果也下不了。网上去看了下最新的17.2全有，不知道为什么突然下不了。弄了好半天，坑死了有木有啊。<br>后来想到我不是做了<code>geoserver</code>的开发了吗？也是maven项目，知道geoserver使用的geotools开发的，那它的jar包是从哪里来的。<br>打开geoserver 源码一看，结果一看人家用的是 <code>18-SNAPSHOT</code><br>做事还是冒失了点，我应该去仓库看下我的版本号，最后搞得一头包。<br>好了，解决了包得问题直接干活敲代码，很简单  </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.util.ArrayList;</div><div class="line"><span class="keyword">import</span> java.util.HashMap;</div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"><span class="keyword">import</span> java.util.Map;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.geotools.data.DataStore;</div><div class="line"><span class="keyword">import</span> org.geotools.data.DataStoreFinder;</div><div class="line"><span class="keyword">import</span> org.geotools.data.postgis.PostgisNGDataStoreFactory;</div><div class="line"><span class="keyword">import</span> org.geotools.data.simple.SimpleFeatureCollection;</div><div class="line"><span class="keyword">import</span> org.geotools.data.simple.SimpleFeatureSource;</div><div class="line"><span class="keyword">import</span> org.geotools.feature.FeatureIterator;</div><div class="line"><span class="keyword">import</span> org.geotools.filter.text.cql2.CQL;</div><div class="line"><span class="keyword">import</span> org.geotools.filter.text.cql2.CQLException;</div><div class="line"><span class="keyword">import</span> org.geotools.geometry.jts.JTSFactoryFinder;</div><div class="line"><span class="keyword">import</span> org.opengis.feature.simple.SimpleFeature;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.opengis.filter.Filter;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.vividsolutions.jts.geom.Geometry;</div><div class="line"><span class="keyword">import</span> com.vividsolutions.jts.geom.GeometryFactory;</div><div class="line"><span class="keyword">import</span> com.vividsolutions.jts.io.ParseException;</div><div class="line"><span class="keyword">import</span> com.vividsolutions.jts.io.WKTReader;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">/** </span></div><div class="line"><span class="comment">* <span class="doctag">@ClassName</span>: GeotoolsUtils </span></div><div class="line"><span class="comment">* <span class="doctag">@Description</span>:  Geotools tools solution</span></div><div class="line"><span class="comment">* <span class="doctag">@author</span> zhangkai </span></div><div class="line"><span class="comment">* <span class="doctag">@date</span> 2017年9月7日 下午3:15:53 </span></div><div class="line"><span class="comment">*  </span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GeotoolsUtils</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="keyword">private</span> <span class="keyword">static</span> DataStore pgDatastore;</div><div class="line">	</div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	 * 连接数据库</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> dbtype  postgresql</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> host 主机</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> port 端口</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> database 数据库</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> userName </span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> password</span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">conn</span><span class="params">(String dbtype, String host, String port,  </span></span></div><div class="line"><span class="function"><span class="params">            String database, String userName, String password)</span> </span>&#123;  </div><div class="line">        Map&lt;String, Object&gt; params = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</div><div class="line">        params.put(PostgisNGDataStoreFactory.DBTYPE.key, dbtype);  </div><div class="line">        params.put(PostgisNGDataStoreFactory.HOST.key, host);  </div><div class="line">        params.put(PostgisNGDataStoreFactory.PORT.key, <span class="keyword">new</span> Integer(port));  </div><div class="line">        params.put(PostgisNGDataStoreFactory.DATABASE.key, database);  </div><div class="line">        params.put(PostgisNGDataStoreFactory.SCHEMA.key, <span class="string">"public"</span>);  </div><div class="line">        params.put(PostgisNGDataStoreFactory.USER.key, userName);  </div><div class="line">        params.put(PostgisNGDataStoreFactory.PASSWD.key, password); </div><div class="line">        <span class="keyword">try</span> &#123;  </div><div class="line">            pgDatastore = DataStoreFinder.getDataStore(params);  </div><div class="line">            <span class="keyword">if</span> (pgDatastore != <span class="keyword">null</span>) &#123;  </div><div class="line">                System.out.println(<span class="string">"系统连接到位于："</span> + host + <span class="string">"的空间数据库"</span> + database  </div><div class="line">                        + <span class="string">"成功！"</span>);  </div><div class="line">            &#125; <span class="keyword">else</span> &#123;  </div><div class="line">                System.out.println(<span class="string">"系统连接到位于："</span> + host + <span class="string">"的空间数据库"</span> + database  </div><div class="line">                        + <span class="string">"失败！请检查相关参数"</span>);  </div><div class="line">            &#125;  </div><div class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;  </div><div class="line">            e.printStackTrace();  </div><div class="line">            System.out.println(<span class="string">"系统连接到位于："</span> + host + <span class="string">"的空间数据库"</span> + database  </div><div class="line">                    + <span class="string">"失败！请检查相关参数"</span>);  </div><div class="line">        &#125;  </div><div class="line">  </div><div class="line">    &#125;  </div><div class="line">	</div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	 * 条件查询</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> filterStr sql条件</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> layerName 图层名</span></div><div class="line"><span class="comment">	 * <span class="doctag">@return</span></span></div><div class="line"><span class="comment">	 * <span class="doctag">@throws</span> IOException</span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ArrayList&lt;SimpleFeature&gt; <span class="title">queryMethod</span><span class="params">(String filterStr,  </span></span></div><div class="line"><span class="function"><span class="params">            String layerName)</span> <span class="keyword">throws</span> IOException </span>&#123;  </div><div class="line">        SimpleFeatureSource featureSource =pgDatastore.getFeatureSource(layerName);   </div><div class="line">        ArrayList&lt;SimpleFeature&gt; featureList = <span class="keyword">new</span> ArrayList&lt;SimpleFeature&gt;();  </div><div class="line">        <span class="keyword">if</span>(featureSource==<span class="keyword">null</span>)  </div><div class="line">            <span class="keyword">return</span> featureList;  </div><div class="line">        <span class="keyword">try</span> &#123;  </div><div class="line">            SimpleFeatureCollection result = <span class="keyword">null</span>;</div><div class="line">        	<span class="keyword">if</span> (!StringUtils.isEmpty(filterStr)) &#123;</div><div class="line">        		 Filter filter;  </div><div class="line">                 <span class="comment">// filterStr : convert 'SQL' into 'CQL'</span></div><div class="line">                 filter = CQL.toFilter(filterStr);  </div><div class="line">                 result = featureSource.getFeatures(filter);  </div><div class="line">			&#125; <span class="keyword">else</span> &#123;</div><div class="line">				result = featureSource.getFeatures();</div><div class="line">			&#125;</div><div class="line">            FeatureIterator&lt;SimpleFeature&gt; itertor = result.features(); </div><div class="line">            <span class="keyword">while</span> (itertor.hasNext()) &#123;  </div><div class="line">                SimpleFeature feature = itertor.next();  </div><div class="line">                featureList.add(feature);  </div><div class="line">            &#125;  </div><div class="line">            itertor.close();  </div><div class="line">            <span class="keyword">return</span> featureList;  </div><div class="line">        &#125;  <span class="keyword">catch</span> (IOException e) &#123;  </div><div class="line">            e.printStackTrace();  </div><div class="line">        &#125; <span class="keyword">catch</span> (CQLException e) &#123;</div><div class="line">			e.printStackTrace();</div><div class="line">		&#125;  </div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;  </div><div class="line">    &#125; </div><div class="line">    </div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 判断一个点在一个面里</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> point</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> polygon</span></div><div class="line"><span class="comment">     * <span class="doctag">@return</span></span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">containsPonit</span><span class="params">(Geometry point, Geometry polygon)</span> </span>&#123;</div><div class="line">    	<span class="keyword">return</span> polygon.contains(point);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 查询地块，判断一个点是否在面里（可能多个面）</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> filterStr 查询条件</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> layerName 图层名</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> point 点位置</span></div><div class="line"><span class="comment">     * <span class="doctag">@return</span></span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">MultitudeContainsPonit</span><span class="params">(String filterStr, String layerName, Geometry point)</span> </span>&#123;</div><div class="line">		<span class="keyword">boolean</span> result = <span class="keyword">false</span>;</div><div class="line">		List&lt;Geometry&gt; listGeometry = getGeometryByCondition(filterStr, layerName);</div><div class="line">		<span class="keyword">for</span> (Geometry geometry : listGeometry) &#123;</div><div class="line">			result = containsPonit(point, geometry);</div><div class="line">			<span class="keyword">if</span> (result) &#123;</div><div class="line">				<span class="keyword">return</span> result;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> result;</div><div class="line">	&#125;</div><div class="line">    </div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 根据条件查询该图层中的geometry</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> filterStr 查询条件</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> layerName 图层名字</span></div><div class="line"><span class="comment">     * <span class="doctag">@return</span></span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;Geometry&gt; <span class="title">getGeometryByCondition</span><span class="params">(String filterStr, String layerName)</span> </span>&#123;</div><div class="line">    	List&lt;Geometry&gt; result = <span class="keyword">new</span> ArrayList&lt;Geometry&gt;();</div><div class="line">    	ArrayList&lt;SimpleFeature&gt; list = <span class="keyword">null</span>;</div><div class="line">    	<span class="keyword">try</span> &#123;</div><div class="line">			list = queryMethod(filterStr, layerName);</div><div class="line">		&#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">			e.printStackTrace();</div><div class="line">		&#125;</div><div class="line">    	<span class="keyword">for</span> (SimpleFeature feature : list) &#123;</div><div class="line">    		Geometry geo = (Geometry) feature.getDefaultGeometry();</div><div class="line">    		result.add(geo);</div><div class="line">		&#125;</div><div class="line">    	<span class="keyword">return</span> result;</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p> 简单测试下<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, ParseException </span>&#123;</div><div class="line">		conn(<span class="string">"postgis"</span>, <span class="string">"192.168.19.200"</span>, <span class="string">"5432"</span>, <span class="string">"agrigisdb"</span>, <span class="string">"postgres"</span>, <span class="string">"postgres"</span>);</div><div class="line">		<span class="comment">//String wktPoly = "MultiPOLYGON (((30 10, 40 40, 20 40, 10 20, 30 10)))"; //wkt格式  </span></div><div class="line">		 String wktPoint = <span class="string">"POINT (50 50)"</span>;    </div><div class="line">		WKTReader reader = <span class="keyword">new</span> WKTReader(JTSFactoryFinder.getGeometryFactory());  </div><div class="line">		        GeometryFactory geometryFactory = JTSFactoryFinder.getGeometryFactory(<span class="keyword">null</span>);  </div><div class="line">		Geometry point = reader.read(wktPoint);  </div><div class="line">		<span class="comment">//Geometry poly = reader.read(wktPoly); </span></div><div class="line">		<span class="keyword">if</span> (MultitudeContainsPonit(<span class="string">"\"mc\"='武汉市'"</span>, <span class="string">"xzqxian"</span>, point)) &#123;</div><div class="line">			System.out.println(<span class="string">"叠加了"</span>);</div><div class="line">		&#125; <span class="keyword">else</span> &#123;</div><div class="line">			System.out.println(<span class="string">"没叠加了"</span>);</div><div class="line">		&#125;</div><div class="line">		pgDatastore.dispose();</div><div class="line">	&#125;</div></pre></td></tr></table></figure></p>
<p>还是太心急，被个小问题差点Over了，我都准备最蠢的办法，直接下包，蠢哭了，我已经下下来了，80+M。<br>记录下。加油。</p>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> Geotools </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[关于难产孕妇跳楼事件]]></title>
      <url>/yunfu-event.html</url>
      <content type="html"><![CDATA[<p>看到新闻，难产孕妇跳楼身亡，真的很难想象，这个产妇经历了什么，才选择了这么个结果，一尸两命。</p>
<p>可能传统的文化，在大多数人眼里，顺产对孩子比较好吧。</p>
<p>整个事情我可能不是很了解，但是这是这个家庭的悲剧，也是社会的一个反射。一个女人，怀孕了都不能决定自己的命运，是在多么绝望的情况下，才跳下楼。</p>
<p>反思就不多说，每个人都清楚。</p>
<p>记录，改变就是最好的。</p>
]]></content>
      
        <categories>
            
            <category> 生活 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 心情 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[叫魂]]></title>
      <url>/jiao-hun-awakening.html</url>
      <content type="html"><![CDATA[<p>最近人的心很杂乱，总是回忆起以前的种种，加上今天是<code>中元节</code>，想起了以前的一件事，正式说法应该是<code>叫魂</code>。<a id="more"></a>  </p>
<p>大约十三四岁的时候，严冬，我记得冷得厉害，我生了一场重病，高烧39度，吊针了一周都没退下去，而且人还难受得厉害了。有时候还会呻吟。老人们都见的世道多，说我有可能见鬼了，弄不好小命都可能保不住了。很无奈，母亲带我去村里的一个老奶奶家里。当时我很奇怪，把我带到一个黑漆漆的屋子里，开了灯，被吓到，就是跟看恐怖片一样，满墙都是各种奇怪的字画、条幅。很快，老奶奶一算，说是我被鬼吓的，掉了魂，是被村里的池塘里淹死的小孩下的（那个池塘就在上学的路上，确实淹死过小孩），后来问我有没有在池塘边摔倒过，这个倒是记得太清楚了。随后，她烧起纸钱，让我去烧香、磕头，最后是喝水拌下纸钱留下的灰，晚上还得去池塘边烧纸。如此，第二天病真的基本好了。不过，却给我留下别的后遗症了，有时候会想，这世间真的有鬼神吗？</p>
<p>我也不知道这些奇奇怪怪的事情应该怎么解释，但是那位老奶奶确实帮助不少人治好了疑难杂症，不乏一些从城里专门过来拜访的人。但，我只知道这个应该是祖祖辈辈传下来的，也只要那些稀奇古怪的人在这些特殊的场合才会有人使用的吧。</p>
<p>虽然事情过了很长时间，但是我也从没忘记这些事情，后来在网上查到，说这个事情是–<code>叫魂</code>。</p>
<p>还说到这些人都要<code>受耻</code>，因为他们泄露了大秘密，需要忏悔，所有对别人的好，都要降罪到自己身上。</p>
<p>多年前，那位老奶奶也去世了，听说各地来的人很多。听我妈说，信佛的人不能跟他们走太近。</p>
<p>往事如风，生活中处处充满了不一样的故事，虽然这个事情没人能够解释它，但是它却是确确实实存在的啊。</p>
]]></content>
      
        <categories>
            
            <category> 碎碎念 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 奇异 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[枚举的封装设计]]></title>
      <url>/enumeration-package-design.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><code>enum</code> 的全称为 <code>enumeration</code>， 是 <code>JDK 1.5</code>  中引入的新特性，存放在 <code>java.lang</code> 包中。虽然功能少，但是实际开发中还是非常方便的。</p>
</blockquote>
<a id="more"></a>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">enum</span> MenuType &#123;</div><div class="line"><span class="comment">// 注意：枚举成员命名，请使用英文大写形式  </span></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 目录</span></div><div class="line"><span class="comment">     */</span></div><div class="line">	CATALOG(<span class="number">0</span>),</div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 菜单</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    MENU(<span class="number">1</span>),</div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 按钮</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    BUTTON(<span class="number">2</span>);</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> value;</div><div class="line">    <span class="comment">// 私有的构造方法</span></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="title">MenuType</span><span class="params">(<span class="keyword">int</span> value)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.value = value;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getValue</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> value;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">static</span> <span class="keyword">enum</span> Operation &#123;</div><div class="line">        GETCAPABILITIES &#123;</div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCode</span><span class="params">()</span> </span>&#123;</div><div class="line">                <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;,</div><div class="line">        DESCRIBEFEATURETYPE &#123;</div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCode</span><span class="params">()</span> </span>&#123;</div><div class="line">                <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;,</div><div class="line">        GETFEATURE&#123;</div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCode</span><span class="params">()</span> </span>&#123;</div><div class="line">                <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">            &#125;</div><div class="line">        &#125; ,</div><div class="line">        LOCKFEATURE&#123;</div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCode</span><span class="params">()</span> </span>&#123;</div><div class="line">                <span class="keyword">return</span> <span class="number">2</span>;</div><div class="line">            &#125;</div><div class="line">        &#125; ,</div><div class="line">        TRANSACTION_INSERT &#123;</div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCode</span><span class="params">()</span> </span>&#123;</div><div class="line">                <span class="keyword">return</span> <span class="number">4</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;,</div><div class="line">        TRANSACTION_UPDATE &#123;</div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCode</span><span class="params">()</span> </span>&#123;</div><div class="line">                <span class="keyword">return</span> <span class="number">8</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;,</div><div class="line">        TRANSACTION_DELETE &#123;</div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCode</span><span class="params">()</span> </span>&#123;</div><div class="line">                <span class="keyword">return</span> <span class="number">16</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;, </div><div class="line">        TRANSACTION_REPLACE &#123;</div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCode</span><span class="params">()</span> </span>&#123;</div><div class="line">                <span class="keyword">return</span> <span class="number">32</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">        </div><div class="line">        <span class="function"><span class="keyword">abstract</span> <span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCode</span><span class="params">()</span></span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">    	System.out.println(Operation.TRANSACTION_INSERT.getCode());</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> 枚举 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[分享：李开复：我的爱情故事]]></title>
      <url>/kaifu-love-story.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>最好的爱情，并不是终日互相对视，而是共同眺望远方，相伴而行。他们眺望着的，始终是同一个方向。</strong> </p>
</blockquote>
<a id="more"></a> 
<p><a rel="external nofollow" target="_blank" href="http://weibo.com/ttarticle/p/show?id=2309404145816167164260">李开复：我的爱情故事</a></p>
]]></content>
      
        <categories>
            
            <category> 分享 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 李开复 </tag>
            
            <tag> 感情 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[关于npm install hexo出错]]></title>
      <url>/hexo_install_error.html</url>
      <content type="html"><![CDATA[<h3 id="出现问题"><a href="#出现问题" class="headerlink" title="出现问题"></a>出现问题</h3><blockquote>
<p>最近跳槽换公司后，又要重新在公司电脑上搭个hexo blog环境，从github上拷贝下自己的源码后，执行<strong>npm install hexo</strong> 突然报错了。  </p>
</blockquote>
<a id="more"></a>  
<blockquote>
<p>node -v8.4.0x64</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">PS D:\zhangkai\WorkSpace\Git\hexo&gt; npm install hexo</div><div class="line"></div><div class="line">&gt; dtrace-provider@0.8.3 install D:\zhangkai\WorkSpace\Git\hexo\node_modules\dtrace-provider</div><div class="line">&gt; node scripts/install.js</div><div class="line"></div><div class="line">npm ERR! path D:\zhangkai\WorkSpace\Git\hexo\node_modules\fsevents\node_modules</div><div class="line">npm ERR! code EPERM</div><div class="line">npm ERR! errno -4048</div><div class="line">npm ERR! syscall scandir</div><div class="line">npm ERR! Error: EPERM: operation not permitted, scandir <span class="string">'D:\zhangkai\WorkSpace\Git\hexo\node_mod</span></div><div class="line"><span class="string">es'</span></div><div class="line">npm ERR!  &#123; Error: EPERM: operation not permitted, scandir <span class="string">'D:\zhangkai\WorkSpace\Git\hexo\node_</span></div><div class="line"><span class="string">dules'</span></div><div class="line">npm ERR!   stack: <span class="string">'Error: EPERM: operation not permitted, scandir \'</span>D:\\zhangkai\\WorkSpace\\Git</div><div class="line">events\\node_modules\<span class="string">''</span>,</div><div class="line">npm ERR!   errno: -4048,</div><div class="line">npm ERR!   code: <span class="string">'EPERM'</span>,</div><div class="line">npm ERR!   syscall: <span class="string">'scandir'</span>,</div><div class="line">npm ERR!   path: <span class="string">'D:\\zhangkai\\WorkSpace\\Git\\hexo\\node_modules\\fsevents\\node_modules'</span> &#125;</div><div class="line">npm ERR!</div><div class="line">npm ERR! Please try running this <span class="built_in">command</span> again as root/Administrator.</div><div class="line"></div><div class="line">npm ERR! A complete <span class="built_in">log</span> of this run can be found <span class="keyword">in</span>:</div><div class="line">npm ERR!     C:\Users\server\AppData\Roaming\npm-cache\_logs\2017-08-31T02_56_34_677Z-debug.log</div></pre></td></tr></table></figure>
<ul>
<li>看上面的问题就是path有问题，去电脑找这个目录找啊找，完全没有，坑爹啊。由于我目前完全不懂node.js和npm只好问候百度大爷。</li>
<li>找到问题<img src="http://ov62kaxkk.bkt.clouddn.com/TIM%E6%88%AA%E5%9B%BE20170831111112.png" alt="图片"></li>
</ul>
<h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>查看当前的npm版本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">PS D:\zhangkai\WorkSpace\Git\hexo&gt; npm -v</div><div class="line">5.3.0</div></pre></td></tr></table></figure></p>
<p>更新到最新版，使用taobao镜像<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">PS D:\zhangkai\WorkSpace\Git\hexo&gt; npm install -g cnpm --registry=http://registry.npm.taobao.org</div><div class="line">C:\Users\server\AppData\Roaming\npm\cnpm -&gt; C:\Users\server\AppData\Roaming\npm\node_modules\cnpm\bin\cnpm</div><div class="line">+ cnpm@5.1.1</div><div class="line">added 643 packages <span class="keyword">in</span> 84.276s</div></pre></td></tr></table></figure></p>
<blockquote>
<p>如果想更新到指定版本，运行指令</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm -g install npm@2.9.1</div></pre></td></tr></table></figure>
<p>重新查看npm版本号<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">PS D:\zhangkai\WorkSpace\Git\hexo&gt; npm -v</div><div class="line">5.3.0</div></pre></td></tr></table></figure></p>
<blockquote>
<p>ps:版本完全没变化，心凉了，还是试试吧。<br>重新执行，成功解决</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">PS D:\zhangkai\WorkSpace\Git\hexo&gt; npm install hexo</div><div class="line"></div><div class="line">&gt; dtrace-provider@0.8.5 install D:\zhangkai\WorkSpace\Git\hexo\node_modules\dtrace-provider</div><div class="line">&gt; node scripts/install.js</div><div class="line"></div><div class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.1.2 (node_modules\fsevents):</div><div class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform <span class="keyword">for</span> fsevents@1.1.2: wanted &#123;<span class="string">"os"</span>:<span class="string">"darwin"</span>,<span class="string">"arch"</span>:<span class="string">"any</span></div><div class="line"><span class="string">"</span>&#125; (current: &#123;<span class="string">"os"</span>:<span class="string">"win32"</span>,<span class="string">"arch"</span>:<span class="string">"x64"</span>&#125;)</div><div class="line"></div><div class="line">+ hexo@3.3.8</div><div class="line">added 122 packages and updated 9 packages <span class="keyword">in</span> 40.962s</div></pre></td></tr></table></figure>
<blockquote>
<p>ps:虽然版本号没变，但是起码解决了问题，ok，又可以愉快玩耍了（警告什么的都不是事）。</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> npm </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux下如何修改用户默认目录]]></title>
      <url>/linux_user_default_path.html</url>
      <content type="html"><![CDATA[<h3 id="提出问题"><a href="#提出问题" class="headerlink" title="提出问题"></a>提出问题</h3><blockquote>
<p>在<code>ftp</code>服务器中，ftp登陆的用户只能在自己的文件夹下活动，现在我需要改这个用户的所属文件位置。 </p>
</blockquote>
<a id="more"></a>  
<h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><ul>
<li><p>使用root用户，执行命令</p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># cat /etc/passwd</span></div><div class="line">root:x:0:0:root:/root:/bin/bash</div><div class="line">bin:x:1:1:bin:/bin:/sbin/nologin</div><div class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</div><div class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</div><div class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</div><div class="line">sync:x:5:0:sync:/sbin:/bin/sync</div><div class="line">shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</div><div class="line">halt:x:7:0:halt:/sbin:/sbin/halt</div><div class="line">mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</div><div class="line">operator:x:11:0:operator:/root:/sbin/nologin</div><div class="line">games:x:12:100:games:/usr/games:/sbin/nologin</div><div class="line">ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin</div><div class="line">nobody:x:99:99:Nobody:/:/sbin/nologin</div><div class="line">systemd-bus-proxy:x:999:997:systemd Bus Proxy:/:/sbin/nologin</div><div class="line">systemd-network:x:192:192:systemd Network Management:/:/sbin/nologin</div><div class="line">dbus:x:81:81:System message bus:/:/sbin/nologin</div><div class="line">polkitd:x:998:996:User <span class="keyword">for</span> polkitd:/:/sbin/nologin</div><div class="line">tss:x:59:59:Account used by the trousers package to sandbox the tcsd daemon:/dev/null:/sbin/nologin</div><div class="line">postfix:x:89:89::/var/spool/postfix:/sbin/nologin</div><div class="line">sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin</div><div class="line">kaim:x:1000:1000:kaim:/home/kaim:/bin/bash</div><div class="line">user1:x:1001:1001::/home/user1:/bin/bash</div><div class="line">rpc:x:32:32:Rpcbind Daemon:/var/lib/rpcbind:/sbin/nologin</div><div class="line">rpcuser:x:29:29:RPC Service User:/var/lib/nfs:/sbin/nologin</div><div class="line">nfsnobody:x:65534:65534:Anonymous NFS User:/var/lib/nfs:/sbin/nologin</div><div class="line">test2:x:1002:50::/opt/test_ftp:/sbin/nologin</div><div class="line">test1:x:1003:50::/opt/test_ftp:/sbin/nologin</div><div class="line">test3:x:1004:50::/opt/test_ftp:/sbin/nologin</div><div class="line">test4:x:1005:50::/opt/test_ftp:/sbin/nologin</div><div class="line">test5:x:1006:50::/opt/test5_ftp:/sbin/nologin</div></pre></td></tr></table></figure>
</li>
<li><p>直接修改目录名保存就可以，记得分配权限。</p>
</li>
</ul>
<hr>
<h3 id="附：添加，修改用户参数"><a href="#附：添加，修改用户参数" class="headerlink" title="附：添加，修改用户参数"></a>附：添加，修改用户参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">/usr/sbin/adduser -d /opt/test_ftp -g ftp -s /sbin/nologin test2</div><div class="line">上面的命令是添加一个 名称为 test2的用户。</div><div class="line"></div><div class="line">命令解析：使用命令(adduser)添加test2用户,不能登录系统(-s /sbin/nologin),自己的文件夹在(-d /opt/test_ftp)),属于组ftp(-g ftp).</div><div class="line"></div><div class="line">usermod -s /sbin/nologin <span class="built_in">test</span> //限定用户<span class="built_in">test</span>不能telnet</div><div class="line">usermod -s /sbin/bash <span class="built_in">test</span> //用户<span class="built_in">test</span>恢复正常</div><div class="line">usermod -d /<span class="built_in">test</span> <span class="built_in">test</span> //更改用户<span class="built_in">test</span>的主目录为/<span class="built_in">test</span></div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[linux上搭建ftp服务器]]></title>
      <url>/vsftpd.html</url>
      <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><blockquote>
<p><code>vsftpd</code> 是“very secure FTP daemon”的缩写，安全性是它的一个最大的特点。vsftpd 是一个 UNIX 类操作系统上运行的服务器的名字，它可以运行在诸如 Linux、BSD、Solaris、 HP-UNIX等系统上面，是一个完全免费的、开放源代码的ftp服务器软件，支持很多其他的 FTP 服务器所不支持的特征。比如：非常高的安全性需求、带宽限制、良好的可伸缩性、可创建虚拟用户、支持IPv6、速率高等。</p>
<p><code>vsftpd</code>是一款在<code>Linux</code>发行版中最受推崇的<code>FTP</code>服务器程序。特点是小巧轻快，安全易用。（来自百度百科）</p>
</blockquote>
<a id="more"></a>  
<h3 id="安装vsftpd"><a href="#安装vsftpd" class="headerlink" title="安装vsftpd"></a>安装vsftpd</h3><h4 id="检测是否已经安装vsftpd。"><a href="#检测是否已经安装vsftpd。" class="headerlink" title="检测是否已经安装vsftpd。"></a>检测是否已经安装vsftpd。</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># rpm -qa | grep vsftpd</span></div><div class="line">[root@localhost ~]<span class="comment">#</span></div></pre></td></tr></table></figure>
<p>什么都不显示就没有安装</p>
<h4 id="安装vsftpd-1"><a href="#安装vsftpd-1" class="headerlink" title="安装vsftpd"></a>安装vsftpd</h4><h5 id="使用yum安装"><a href="#使用yum安装" class="headerlink" title="使用yum安装"></a>使用yum安装</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># yum -y install vsftpd</span></div></pre></td></tr></table></figure>
<h5 id="使用rpm安装"><a href="#使用rpm安装" class="headerlink" title="使用rpm安装"></a>使用rpm安装</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost <span class="built_in">local</span>]<span class="comment"># rpm -ivh vsftpd-3.0.2-21.el7.x86_64.rpm</span></div></pre></td></tr></table></figure>
<h4 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@localhost <span class="built_in">local</span>]<span class="comment"># service vsftpd start</span></div><div class="line">Redirecting to /bin/systemctl start  vsftpd.service</div></pre></td></tr></table></figure>
<h4 id="查看服务状态"><a href="#查看服务状态" class="headerlink" title="查看服务状态"></a>查看服务状态</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">[root@localhost <span class="built_in">local</span>]<span class="comment"># service vsftpd status</span></div><div class="line">Redirecting to /bin/systemctl status  vsftpd.service</div><div class="line">● vsftpd.service - Vsftpd ftp daemon</div><div class="line">   Loaded: loaded (/usr/lib/systemd/system/vsftpd.service; disabled; vendor preset: disabled)</div><div class="line">   Active: active (running) since 三 2017-08-30 15:28:18 CST; 15min ago</div><div class="line">  Process: 4295 ExecStart=/usr/sbin/vsftpd /etc/vsftpd/vsftpd.conf (code=exited, status=0/SUCCESS)</div><div class="line"> Main PID: 4296 (vsftpd)</div><div class="line">   CGroup: /system.slice/vsftpd.service</div><div class="line">           └─4296 /usr/sbin/vsftpd /etc/vsftpd/vsftpd.conf</div><div class="line"></div><div class="line">8月 30 15:28:18 localhost.localdomain systemd[1]: Starting Vsftpd ftp daemon...</div><div class="line">8月 30 15:28:18 localhost.localdomain systemd[1]: Started Vsftpd ftp daemon.</div><div class="line">Hint: Some lines were ellipsized, use -l to show <span class="keyword">in</span> full.</div></pre></td></tr></table></figure>
<p> Active: active (running)  启动状态，可以使用</p>
<h4 id="现在我们就可以匿名访问了"><a href="#现在我们就可以匿名访问了" class="headerlink" title="现在我们就可以匿名访问了"></a>现在我们就可以匿名访问了</h4><h3 id="vsftpd添加用户"><a href="#vsftpd添加用户" class="headerlink" title="vsftpd添加用户"></a>vsftpd添加用户</h3><h4 id="vsftpd添加用户-1"><a href="#vsftpd添加用户-1" class="headerlink" title="vsftpd添加用户"></a>vsftpd添加用户</h4><p>FTP用户一般是不能登录系统的,只能进入FTP服务器自己的目录中,这是为了安全.这样的用户就叫做虚拟用户了.实际上并不是真正的虚拟用户,只是不能登录SHELL了而已,没能力登录系统.</p>
<p>添加用户命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/sbin/adduser -d /opt/test_ftp -g ftp -s /sbin/nologin test2</div></pre></td></tr></table></figure></p>
<p>上面的命令是添加一个 名称为 test2的用户。</p>
<p>命令解析：使用命令(adduser)添加test2用户,不能登录系统(-s /sbin/nologin),自己的文件夹在(-d /opt/test_ftp)),属于组ftp(-g ftp).</p>
<p>为该用户设置密码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost <span class="built_in">local</span>]<span class="comment"># passwd test2</span></div></pre></td></tr></table></figure></p>
<p>现在重启服务我们就可以使用test2直接访问我们的 /opttest_ftp目录了<br><img src="http://ov62kaxkk.bkt.clouddn.com/TIM%E6%88%AA%E5%9B%BE20170830155115.png" alt="ftp1"></p>
<h4 id="给用户权限上传下载，修改"><a href="#给用户权限上传下载，修改" class="headerlink" title="给用户权限上传下载，修改"></a>给用户权限上传下载，修改</h4><p>虽然用户能够进行查看，但是还没有权限上传、下载和修改</p>
<h4 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost <span class="built_in">local</span>]<span class="comment"># chmod 755 /opt/test_ftp</span></div></pre></td></tr></table></figure>
<h4 id="编辑配置文件"><a href="#编辑配置文件" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h4><p>一般创建一个ftp 用户，作为管理员只希望它只能访问其自己的所属目录的，是不会让他选择其他目录的。</p>
<p>####设置ftp用户的权限</p>
<p>在安装好ftp时，在 /etc/vsftpd目录下可以看到vsftpd的配置文件vsftpd.conf<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div></pre></td><td class="code"><pre><div class="line">[root@localhost vsftpd]<span class="comment"># vim vsftpd.conf       </span></div><div class="line"><span class="comment"># Example config file /etc/vsftpd/vsftpd.conf</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># The default compiled in settings are fairly paranoid. This sample file</span></div><div class="line"><span class="comment"># loosens things up a bit, to make the ftp daemon more usable.</span></div><div class="line"><span class="comment"># Please see vsftpd.conf.5 for all compiled in defaults.</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># READ THIS: This example file is NOT an exhaustive list of vsftpd options.</span></div><div class="line"><span class="comment"># Please read the vsftpd.conf.5 manual page to get a full idea of vsftpd's</span></div><div class="line"><span class="comment"># capabilities.</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Allow anonymous FTP? (Beware - allowed by default if you comment this out).</span></div><div class="line">anonymous_enable=YES</div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Uncomment this to allow local users to log in.</span></div><div class="line"><span class="comment"># When SELinux is enforcing check for SE bool ftp_home_dir</span></div><div class="line">local_enable=YES</div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Uncomment this to enable any form of FTP write command.</span></div><div class="line">write_enable=YES</div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Default umask for local users is 077. You may wish to change this to 022,</span></div><div class="line"><span class="comment"># if your users expect that (022 is used by most other ftpd's)</span></div><div class="line">local_umask=022</div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Uncomment this to allow the anonymous FTP user to upload files. This only</span></div><div class="line"><span class="comment"># has an effect if the above global write enable is activated. Also, you will</span></div><div class="line"><span class="comment"># obviously need to create a directory writable by the FTP user.</span></div><div class="line"><span class="comment"># When SELinux is enforcing check for SE bool allow_ftpd_anon_write, allow_ftpd_full_access</span></div><div class="line">anon_upload_enable=YES</div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Uncomment this if you want the anonymous FTP user to be able to create</span></div><div class="line"><span class="comment"># new directories.</span></div><div class="line">anon_mkdir_write_enable=YES</div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Activate directory messages - messages given to remote users when they</span></div><div class="line"><span class="comment"># go into a certain directory.</span></div><div class="line">dirmessage_enable=YES</div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Activate logging of uploads/downloads.</span></div><div class="line">xferlog_enable=YES</div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Make sure PORT transfer connections originate from port 20 (ftp-data).</span></div><div class="line">connect_from_port_20=YES</div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># If you want, you can arrange for uploaded anonymous files to be owned by</span></div><div class="line"><span class="comment"># a different user. Note! Using "root" for uploaded files is not</span></div><div class="line"><span class="comment"># recommended!</span></div><div class="line"><span class="comment">#chown_uploads=YES</span></div><div class="line"><span class="comment">#chown_username=whoever</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># You may override where the log file goes if you like. The default is shown</span></div><div class="line"><span class="comment"># below.</span></div><div class="line"><span class="comment">#xferlog_file=/var/log/xferlog</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># If you want, you can have your log file in standard ftpd xferlog format.</span></div><div class="line"><span class="comment"># Note that the default log file location is /var/log/xferlog in this case.</span></div><div class="line">xferlog_std_format=YES</div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># You may change the default value for timing out an idle session.</span></div><div class="line">idle_session_timeout=600</div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># You may change the default value for timing out a data connection.</span></div><div class="line">data_connection_timeout=120</div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># It is recommended that you define on your system a unique user which the</span></div><div class="line"><span class="comment"># ftp server can use as a totally isolated and unprivileged user.</span></div><div class="line"><span class="comment">#nopriv_user=ftpsecure</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Enable this and the server will recognise asynchronous ABOR requests. Not</span></div><div class="line"><span class="comment"># recommended for security (the code is non-trivial). Not enabling it,</span></div><div class="line"><span class="comment"># however, may confuse older FTP clients.</span></div><div class="line"><span class="comment">#async_abor_enable=YES</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># By default the server will pretend to allow ASCII mode but in fact ignore</span></div><div class="line"><span class="comment"># the request. Turn on the below options to have the server actually do ASCII</span></div><div class="line"><span class="comment"># mangling on files when in ASCII mode.</span></div><div class="line"><span class="comment"># Beware that on some FTP servers, ASCII support allows a denial of service</span></div><div class="line"><span class="comment"># attack (DoS) via the command "SIZE /big/file" in ASCII mode. vsftpd</span></div><div class="line"><span class="comment"># predicted this attack and has always been safe, reporting the size of the</span></div><div class="line"><span class="comment"># raw file.</span></div><div class="line"><span class="comment"># ASCII mangling is a horrible feature of the protocol.</span></div><div class="line">ascii_upload_enable=YES</div><div class="line">ascii_download_enable=YES</div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># You may fully customise the login banner string:</span></div><div class="line">ftpd_banner=Welcome to blah FTP service.</div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># You may specify a file of disallowed anonymous e-mail addresses. Apparently</span></div><div class="line"><span class="comment"># useful for combatting certain DoS attacks.</span></div><div class="line"><span class="comment">#deny_email_enable=YES</span></div><div class="line"><span class="comment"># (default follows)</span></div><div class="line"><span class="comment">#banned_email_file=/etc/vsftpd/banned_emails</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># You may specify an explicit list of local users to chroot() to their home</span></div><div class="line"><span class="comment"># directory. If chroot_local_user is YES, then this list becomes a list of</span></div><div class="line"><span class="comment"># users to NOT chroot().</span></div><div class="line"><span class="comment"># (Warning! chroot'ing can be very dangerous. If using chroot, make sure that</span></div><div class="line"><span class="comment"># the user does not have write access to the top level directory within the</span></div><div class="line"><span class="comment"># chroot)</span></div><div class="line">chroot_local_user=YES</div><div class="line">chroot_list_enable=YES</div><div class="line"><span class="comment"># (default follows)</span></div><div class="line">chroot_list_file=/etc/vsftpd/chroot_list</div><div class="line"><span class="comment"># vsftpd：500 OOPS: vsftpd: refusing to run with writable root inside chroot ()错误的解决方法</span></div><div class="line">allow_writeable_chroot=YES </div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># You may activate the "-R" option to the builtin ls. This is disabled by</span></div><div class="line"><span class="comment"># default to avoid remote users being able to cause excessive I/O on large</span></div><div class="line"><span class="comment"># sites. However, some broken FTP clients such as "ncftp" and "mirror" assume</span></div><div class="line"><span class="comment"># the presence of the "-R" option, so there is a strong case for enabling it.</span></div><div class="line"><span class="comment">#ls_recurse_enable=YES</span></div><div class="line"><span class="comment">#</span></div><div class="line">  When <span class="string">"listen"</span> directive is enabled, vsftpd runs <span class="keyword">in</span> standalone mode and</div><div class="line">▽ listens on IPv4 sockets. This directive cannot be used <span class="keyword">in</span> conjunction</div><div class="line"><span class="comment"># with the listen_ipv6 directive.</span></div><div class="line">listen=YES</div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># This directive enables listening on IPv6 sockets. By default, listening</span></div><div class="line"><span class="comment"># on the IPv6 "any" address (::) will accept connections from both IPv6</span></div><div class="line"><span class="comment"># and IPv4 clients. It is not necessary to listen on *both* IPv4 and IPv6</span></div><div class="line"><span class="comment"># sockets. If you want that (perhaps because you want to listen on specific</span></div><div class="line"><span class="comment"># addresses) then you must run two copies of vsftpd with two configuration</span></div><div class="line"><span class="comment"># files.</span></div><div class="line"><span class="comment"># Make sure, that one of the listen options is commented !!</span></div><div class="line"><span class="comment"># listen_ipv6=YES</span></div><div class="line"></div><div class="line">pam_service_name=vsftpd</div><div class="line">userlist_enable=YES</div><div class="line">tcp_wrappers=YES</div><div class="line">anon_other_write_enable=YES</div><div class="line"><span class="comment">#anon_root=/opt/test_ftp</span></div><div class="line"><span class="comment">#guest_enable=YES</span></div><div class="line"><span class="comment">#guest_username=test2</span></div><div class="line">virtual_use_local_privs=YES</div></pre></td></tr></table></figure></p>
<h4 id="用户访问权限及路径限制："><a href="#用户访问权限及路径限制：" class="headerlink" title="用户访问权限及路径限制："></a>用户访问权限及路径限制：</h4><p> 如果 userlist_deny=NO：只允许<code>userlist_file</code>文件中的用户可访问ftp；如果 <code>userlist_deny=YES</code>：<code>userlist_file</code>文件中列举的用户不能通过ftp访问系统。<code>userlist_enable</code>是该功能的开关。我们的系统配置如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">userlist_enable=YES</div><div class="line">userlist_deny=NO</div><div class="line">userlist_file=/etc/vsftpd/user_list</div></pre></td></tr></table></figure></p>
<p>把需要登录的用户加入到<code>/etc/vsftpd/user_list</code>文件中，一个用户一行。<br>如果我们不需要把登陆的用户限制在主目录下需要一下配置：<br>进入主配置文件中<code>chroot_list_enable=YES</code><br>创建用户文件<code>/etc/vsftpd/chroot_list</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /etc/vsftpd/chroot_list</div></pre></td></tr></table></figure></p>
<p>将不需要限制的用户添加进去，我们只有一个test2，一行一个用户名<br>ps: 这些用户将能访问全部有权限的文件。</p>
<h4 id="设置权限"><a href="#设置权限" class="headerlink" title="设置权限"></a>设置权限</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">[root@localhost vsftpd]<span class="comment"># getsebool -a|grep ftp</span></div><div class="line">ftpd_anon_write --&gt; off</div><div class="line">ftpd_connect_all_unreserved --&gt; off</div><div class="line">  pd_connect_db --&gt; off</div><div class="line">▽tpd_full_access --&gt; off</div><div class="line">ftpd_use_cifs --&gt; off</div><div class="line">ftpd_use_fusefs --&gt; off</div><div class="line">ftpd_use_nfs --&gt; off</div><div class="line">ftpd_use_passive_mode --&gt; off</div><div class="line">httpd_can_connect_ftp --&gt; off</div><div class="line">httpd_enable_ftp_server --&gt; off</div><div class="line">tftp_anon_write --&gt; off</div><div class="line">tftp_home_dir --&gt; off</div></pre></td></tr></table></figure>
<h5 id="开启-anon-write-和full-access"><a href="#开启-anon-write-和full-access" class="headerlink" title="开启 anon_write 和full_access"></a>开启 anon_write 和full_access</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@localhost vsftpd]<span class="comment"># setsebool allow_ftpd_anon_write  1</span></div><div class="line">[root@localhost vsftpd]<span class="comment"># setsebool allow_ftpd_full_access 1</span></div></pre></td></tr></table></figure>
<h4 id="重启ftp服务"><a href="#重启ftp服务" class="headerlink" title="重启ftp服务"></a>重启ftp服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost vsftpd]<span class="comment"># service vsftpd restart</span></div></pre></td></tr></table></figure>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p><img src="http://ov62kaxkk.bkt.clouddn.com/TIM%E6%88%AA%E5%9B%BE20170830160616.png" alt="ftp2"></p>
<p>注：测试连接软件是<code>FileZilla</code>，windows访问 ftp://[ip]</p>
<h3 id="update-20170901-使用FileZilla创建中文文件夹Linux乱码"><a href="#update-20170901-使用FileZilla创建中文文件夹Linux乱码" class="headerlink" title="update 20170901 使用FileZilla创建中文文件夹Linux乱码"></a>update 20170901 使用FileZilla创建中文文件夹Linux乱码</h3><p>首先出现这个问题的原因是WINDOWS采用的是<code>GBK</code>编码方式，而Linux采用的是<code>UTF-8</code><br>首先设置好FileZilla的编码方式为<code>zh_CN</code><br>在将 <code>/etc/locale.conf</code> 中的<code>LANG</code>修改为<code>&quot;zh_CN.UTF-8&quot;</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># vim /etc/locale.conf </span></div><div class="line">LANG=<span class="string">"zh_CN.UTF-8"</span></div></pre></td></tr></table></figure></p>
<p>这个修改可以有效解决windows客户端使用ftp协议上传中文文件到Linux乱码的问题。<br><strong>其实最根本的解决方法是客户端上传的文件经过ftp软件能与服务器统一编码方式</strong>，具体百度吧c#、java的都有。</p>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
            <tag> ftp </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS 7 静态IP设置]]></title>
      <url>/setting_static_ip.html</url>
      <content type="html"><![CDATA[<p><strong>最近使用<code>linux</code>做服务器共享，需要设置<code>静态IP</code>，整理了一下。</strong>  <a id="more"></a>  </p>
<h3 id="获取网卡信息"><a href="#获取网卡信息" class="headerlink" title="获取网卡信息"></a>获取网卡信息</h3><h4 id="在root用户下，输入命令ifconfig"><a href="#在root用户下，输入命令ifconfig" class="headerlink" title="在root用户下，输入命令ifconfig"></a>在root用户下，输入命令ifconfig</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># ifconfig</span></div><div class="line">ens33: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</div><div class="line">        inet 192.168.19.128  netmask 255.255.255.0  broadcast 192.168.19.255</div><div class="line">        inet6 fe80::2938:ef28:162e:9ffd  prefixlen 64  scopeid 0x20&lt;link&gt;</div><div class="line">        ether 00:0c:29:93:06:e9  txqueuelen 1000  (Ethernet)</div><div class="line">        RX packets 77  bytes 7911 (7.7 KiB)</div><div class="line">        RX errors 0  dropped 0  overruns 0  frame 0</div><div class="line">        TX packets 67  bytes 11943 (11.6 KiB)</div><div class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</div><div class="line"></div><div class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</div><div class="line">        inet 127.0.0.1  netmask 255.0.0.0</div><div class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</div><div class="line">        loop  txqueuelen 1  (Local Loopback)</div><div class="line">        RX packets 127  bytes 9199 (8.9 KiB)</div><div class="line">        RX errors 0  dropped 0  overruns 0  frame 0</div><div class="line">        TX packets 127  bytes 9199 (8.9 KiB)</div><div class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</div></pre></td></tr></table></figure>
<h3 id="更改配置信息"><a href="#更改配置信息" class="headerlink" title="更改配置信息"></a>更改配置信息</h3><h4 id="从上面可以看到我的网卡号是ens33"><a href="#从上面可以看到我的网卡号是ens33" class="headerlink" title="从上面可以看到我的网卡号是ens33"></a>从上面可以看到我的网卡号是ens33</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># vim /etc/sysconfig/network-scripts/ifcfg-ens33 </span></div><div class="line">TYPE=<span class="string">"Ethernet"</span></div><div class="line">BOOTPROTO=<span class="string">"static"</span></div><div class="line">IPADDR=192.168.19.128</div><div class="line">NETMASK=255.255.255.0</div><div class="line">GATEWAY=192.168.19.1</div><div class="line">DEFROUTE=<span class="string">"yes"</span></div><div class="line">PEERDNS=<span class="string">"yes"</span></div><div class="line">PEERROUTES=<span class="string">"yes"</span></div><div class="line">IPV4_FAILURE_FATAL=<span class="string">"no"</span></div><div class="line">IPV6INIT=<span class="string">"yes"</span></div><div class="line">IPV6_AUTOCONF=<span class="string">"yes"</span></div><div class="line">IPV6_DEFROUTE=<span class="string">"yes"</span></div><div class="line">IPV6_PEERDNS=<span class="string">"yes"</span></div><div class="line">IPV6_PEERROUTES=<span class="string">"yes"</span></div><div class="line">IPV6_FAILURE_FATAL=<span class="string">"no"</span></div><div class="line">IPV6_ADDR_GEN_MODE=<span class="string">"stable-privacy"</span></div><div class="line">NAME=<span class="string">"ens33"</span></div><div class="line">UUID=<span class="string">"f9e34fd2-c12f-4d4c-ad93-37d0b9cc43ce"</span></div><div class="line">DEVICE=<span class="string">"ens33"</span></div><div class="line">ONBOOT=<span class="string">"yes"</span></div></pre></td></tr></table></figure>
<ul>
<li><code>BOOTPROTO</code>代表的是获取ip方式（“dhcp”＝动态获取／“static”＝设置静态ip）</li>
<li><code>IPADDR</code>代表静态ip地址 （地址就用之前ifconfig获取的inet 192.168.19.128）</li>
<li><code>NETMASK</code>代表子网掩码（地址就用之前ifconfig获取的netmask 255.255.255.0）</li>
<li><code>GATEWAY</code>代表网关（由于你的ip是192.168.58网段的，所以使用192.168.19.1，注意：你是ip地址前三位是什么网段就在后面加个1就行了）</li>
<li><code>DNS1</code>就是dns了（需要你知道你的网络的dns，一般在路由器管理后台有配置，可以不设置dns）<h3 id="最后重启下网络服务"><a href="#最后重启下网络服务" class="headerlink" title="最后重启下网络服务"></a>最后重启下网络服务</h3>注意，fail是有问题的配置<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># service network restart  </span></div><div class="line">Restarting network (via systemctl):                        [  OK  ]</div></pre></td></tr></table></figure></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SAMBA共享]]></title>
      <url>/samba.html</url>
      <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><blockquote>
<p><code>Samba</code>是在<code>Linux</code>和<code>UNIX</code>系统上实现<code>SMB协议</code>的一个免费软件，由服务器及客户端程序构成。<code>SMB</code>（Server Messages Block，信息服务块）是一种在局域网上共享文件和打印机的一种通信协议，它为局域网内的不同计算机之间提供文件及打印机等资源的共享服务。</p>
</blockquote>
<a id="more"></a>
<p>SMB协议是客户机/服务器型协议，客户机通过该协议可以访问服务器上的共享文件系统、打印机及其他资源。通过设置<code>NetBIOS over TCP/IP</code>使得Samba不但能与局域网络主机分享资源，还能与全世界的电脑分享资源。  </p>
<h3 id="安装samba"><a href="#安装samba" class="headerlink" title="安装samba"></a>安装samba</h3><ul>
<li>可以先检查下是否已经安装：<code>rpm -qa | grep samba</code><br>这里使用yum安装，可以不用担心一些依赖包的问题：<code>yum install samba</code>  </li>
<li>创建共享文件夹，这里就是<code>mkdir -m 777 /home/user1/share</code>  </li>
<li>修改<code>/etc/samba/smb.conf</code>，这里面的参数就比较多，主要是<br><code>workgroup = WORKGROUP</code>（这个就是windows工作组模式，还有一种是域模式，可以不改使用<code>MYGROUP</code>）<br><code>hosts allow = 192.168.19.207</code>（可以放问的IP地址，这里写的时windows地址，一般不填写）<br>然后在文件的结尾加上<br>[public]（共享名，就是windows访问时会显示的名称）<br>comment = Public Stuff（注释）<br>path = /home/user1/share（共享名）<br>public = yes（公开）<br>writable = yes（可写）<br>当然这里只是些基础的参数，还有其他的参数根据情况设置，比如会出现乱码，还要指定编码格式。  </li>
<li>重启smb服务：<code>service smb restart</code>、   <code>service smb status</code>  查看状态  </li>
<li>创建samba客户：<code>smbpasswd -a   user1</code>,回车后会提示输入密码。这个就是将来远程主机登录时需要的密码，这里的<code>user1</code>帐号必须是系统已经有的<br>帐号，没有的话会报错，然后新输的密码就是远程登录密码，这样做的好处就是自己的密码和远程登录的密码分开。  </li>
<li>windows下连接，启动运行，输入<code>\\192.168.19.185</code>,输入smb帐号密码就可以了  </li>
</ul>
<p>由于暂时还不会防火墙和SELINUX配置，而下面有些方法中的操作会受到他们的限制，因此先关闭这俩。<br>关闭防火墙的命令：<code>service iptables stop</code><br>关闭SELINUX命令：<code>setenforce 0</code>  </p>
<p>window下关闭网络共享连接  cmd &gt;&gt;<br><code>net use * /del /y</code></p>
<p>如果访问的是当前用户下的文件，不需要配置</p>
<p>如果访问的不是当前用户下的文件或者文件夹，需要配置<code>/etc/samba/smb.conf</code>，加入：  [Share] 为在共享中显示的文件夹名<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">[Share]</div><div class="line"></div><div class="line">comment = Shared Folder with username and password</div><div class="line"></div><div class="line">path = /data</div><div class="line"></div><div class="line">public = yes</div><div class="line"></div><div class="line">writable = yes</div><div class="line"></div><div class="line">valid users = user1</div><div class="line"></div><div class="line">available = yes</div><div class="line"></div><div class="line">browseable = yes</div></pre></td></tr></table></figure></p>
<p>启动 samba 服务<br><code>systemctl start smb.service</code>  </p>
<h3 id="测试服务"><a href="#测试服务" class="headerlink" title="测试服务"></a>测试服务</h3><p>我使用的是windows客户端连接，输入Ip <code>\\192.168.19.185</code><br>我使用的是user1账户</p>
<p><img src="http://ov62kaxkk.bkt.clouddn.com/TIM%E6%88%AA%E5%9B%BE20170905093409.png" alt="samba"></p>
<p><strong>账户有权限可以正常进入到文件中</strong>  </p>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Maven使用tomcat7-maven-plugin插件run时出现错误： A child container failed during start]]></title>
      <url>/maven-plugins-error.html</url>
      <content type="html"><![CDATA[<blockquote>
<p>eclipse上使用<code>maven</code>项目总是会爆各种奇怪的错误，看不懂哇看不懂。<br>这次又出现<code>A child container failed during start</code>…</p>
</blockquote>
<a id="more"></a>
<h3 id="环境"><a href="#环境" class="headerlink" title="环境:"></a>环境:</h3><ul>
<li>maven - 3.3.9</li>
<li>jdk1.8.0_144</li>
<li>eclipse - 4.6</li>
<li>os - win10-1703</li>
</ul>
<h3 id="出现错误："><a href="#出现错误：" class="headerlink" title="出现错误："></a>出现错误：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line">严重: A child container failed during start</div><div class="line">java.util.concurrent.ExecutionException: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Tomcat].StandardHost[localhost].StandardContext[]]</div><div class="line">	at java.util.concurrent.FutureTask.report(FutureTask.java:122)</div><div class="line">	at java.util.concurrent.FutureTask.get(FutureTask.java:192)</div><div class="line">	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:1123)</div><div class="line">	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:800)</div><div class="line">	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</div><div class="line">	at org.apache.catalina.core.ContainerBase<span class="variable">$StartChild</span>.call(ContainerBase.java:1559)</div><div class="line">	at org.apache.catalina.core.ContainerBase<span class="variable">$StartChild</span>.call(ContainerBase.java:1549)</div><div class="line">	at java.util.concurrent.FutureTask.run(FutureTask.java:266)</div><div class="line">	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)</div><div class="line">	at java.util.concurrent.ThreadPoolExecutor<span class="variable">$Worker</span>.run(ThreadPoolExecutor.java:624)</div><div class="line">	at java.lang.Thread.run(Thread.java:748)</div><div class="line">Caused by: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Tomcat].StandardHost[localhost].StandardContext[]]</div><div class="line">	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:154)</div><div class="line">	... 6 more</div><div class="line">Caused by: java.lang.ClassCastException: org.springframework.web.SpringServletContainerInitializer cannot be cast to javax.servlet.ServletContainerInitializer</div><div class="line">	at org.apache.catalina.startup.ContextConfig.getServletContainerInitializer(ContextConfig.java:1661)</div><div class="line">	at org.apache.catalina.startup.ContextConfig.processServletContainerInitializers(ContextConfig.java:1569)</div><div class="line">	at org.apache.catalina.startup.ContextConfig.webConfig(ContextConfig.java:1277)</div><div class="line">	at org.apache.catalina.startup.ContextConfig.configureStart(ContextConfig.java:878)</div><div class="line">	at org.apache.catalina.startup.ContextConfig.lifecycleEvent(ContextConfig.java:369)</div><div class="line">	at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)</div><div class="line">	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:90)</div><div class="line">	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5179)</div><div class="line">	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</div><div class="line">	... 6 more</div><div class="line"></div><div class="line">八月 24, 2017 5:26:11 下午 org.apache.catalina.core.ContainerBase startInternal</div><div class="line">严重: A child container failed during start</div><div class="line">java.util.concurrent.ExecutionException: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Tomcat].StandardHost[localhost]]</div><div class="line">	at java.util.concurrent.FutureTask.report(FutureTask.java:122)</div><div class="line">	at java.util.concurrent.FutureTask.get(FutureTask.java:192)</div><div class="line">	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:1123)</div><div class="line">	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:302)</div><div class="line">	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</div><div class="line">	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:443)</div><div class="line">	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</div><div class="line">	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:732)</div><div class="line">	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</div><div class="line">	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:335)</div><div class="line">	at org.apache.tomcat.maven.plugin.tomcat7.run.AbstractRunMojo.startContainer(AbstractRunMojo.java:1091)</div><div class="line">	at org.apache.tomcat.maven.plugin.tomcat7.run.AbstractRunMojo.execute(AbstractRunMojo.java:512)</div><div class="line">	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)</div><div class="line">	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207)</div><div class="line">	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)</div><div class="line">	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)</div><div class="line">	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)</div><div class="line">	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)</div><div class="line">	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)</div><div class="line">	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)</div><div class="line">	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)</div><div class="line">	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)</div><div class="line">	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)</div><div class="line">	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:863)</div><div class="line">	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:288)</div><div class="line">	at org.apache.maven.cli.MavenCli.main(MavenCli.java:199)</div><div class="line">	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</div><div class="line">	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)</div><div class="line">	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</div><div class="line">	at java.lang.reflect.Method.invoke(Method.java:498)</div><div class="line">	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)</div><div class="line">	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)</div><div class="line">	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)</div><div class="line">	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)</div><div class="line">Caused by: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Tomcat].StandardHost[localhost]]</div><div class="line">	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:154)</div><div class="line">	at org.apache.catalina.core.ContainerBase<span class="variable">$StartChild</span>.call(ContainerBase.java:1559)</div><div class="line">	at org.apache.catalina.core.ContainerBase<span class="variable">$StartChild</span>.call(ContainerBase.java:1549)</div><div class="line">	at java.util.concurrent.FutureTask.run(FutureTask.java:266)</div><div class="line">	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)</div><div class="line">	at java.util.concurrent.ThreadPoolExecutor<span class="variable">$Worker</span>.run(ThreadPoolExecutor.java:624)</div><div class="line">	at java.lang.Thread.run(Thread.java:748)</div><div class="line">Caused by: org.apache.catalina.LifecycleException: A child container failed during start</div><div class="line">	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:1131)</div><div class="line">	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:800)</div><div class="line">	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</div><div class="line">	... 6 more</div></pre></td></tr></table></figure>
<h3 id="尝试解决的方法："><a href="#尝试解决的方法：" class="headerlink" title="尝试解决的方法："></a>尝试解决的方法：</h3><ul>
<li>更换maven 至最新版本   - 结果：无效</li>
<li>网上搜索都说web版本太高 2.5 ,2.4都没效果</li>
<li>注意问题所在<code>org.springframework.web.SpringServletContainerInitializer cannot be cast to javax.servlet.ServletContainerInitializer</code> 这句话上，根本上就是jar包有问题。首先在项目排除这个<code>javax.servlet-api</code>包，可以运行成功;</li>
</ul>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">	<span class="comment">&lt;!-- 加上这句，作用域改成编译时使用，而打包时不使用 --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>但是也有可能<code>jdk</code>的问题，有人说是Jdk中毒了，我看到这个回答感觉自己中毒了 doge.jpg。</strong></p>
<p>感觉使用<code>idea</code>怎么没出错，嗯~，就是坑你，没商量~。</p>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> maven </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[关于辞职]]></title>
      <url>/first-quit-job.html</url>
      <content type="html"><![CDATA[<p>今天总算是把工作交接完了，又要开始一段新的职业生涯了。</p>
<a id="more"></a>
<p>记得是去年11月25号入职金拓维，当时面试我的还记得是友爱的周总，在金拓维很长的实习生活中，公司氛围很好，哈哈，第一位项目经理是光哥，当然，我现在跳槽也是来到光哥手下干事的，又回来了。</p>
<p>来公司认识第一位员工应该是我们的秦~，现在是我的室友，比我早来一天。</p>
<p>后来一位大学同学也来了，感觉这个世界真的小，工作的时候还有大学同学一起，还是很知足的，是不是。</p>
<p>后来还有饶~~，等等一些同事，真的庆幸遇到这些兄弟们，让工作历程，变得不再孤单。</p>
<p>即使目前跳槽了，也还在附近，仍然一起的。That`s ok! </p>
<p>具体跳槽原因，可能是我这个人不太安分吧，在这个公司刚签合同一个多月，就跑了，我也很窘迫的，鼓起勇气去辞职的，经理也谈了一堆道理，balabala,省略。。。</p>
<p>去了初创公司，可能会很累，但是为了梦想，总得向前迈出一小步。虽然最近发生的事情有点多，人也有点沉沦，但是不失本心，我想只会越来越好的。</p>
<p>也希望大家都能越来越好！</p>
<p>真的很晚了，今晚又要失眠了。</p>
<p>对自己说声，晚安！</p>
]]></content>
      
        <categories>
            
            <category> 碎碎念 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 辞职 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Java中位运算符]]></title>
      <url>/JAVA_Bitwise_Operators.html</url>
      <content type="html"><![CDATA[<p>1、 今天在读<code>ConcurrentHashMap</code>的源码中突然发现一段很好玩的代码，大概理解它的意思。不多说上代码：<a id="more"></a><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * Returns a power of two table size for the given desired capacity.</span></div><div class="line"><span class="comment"> * See Hackers Delight, sec 3.2</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> <span class="title">tableSizeFor</span><span class="params">(<span class="keyword">int</span> c)</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> n = c - <span class="number">1</span>;</div><div class="line">    n |= n &gt;&gt;&gt; <span class="number">1</span>;</div><div class="line">    n |= n &gt;&gt;&gt; <span class="number">2</span>;</div><div class="line">    n |= n &gt;&gt;&gt; <span class="number">4</span>;</div><div class="line">    n |= n &gt;&gt;&gt; <span class="number">8</span>;</div><div class="line">    n |= n &gt;&gt;&gt; <span class="number">16</span>;</div><div class="line">    <span class="keyword">return</span> (n &lt; <span class="number">0</span>) ? <span class="number">1</span> : (n &gt;= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + <span class="number">1</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p> <em>在 ConcurrentHashMap 源码的第688~700  line</em></p>
<ol>
<li>疑问<ol>
<li>见过<code>&gt;&gt;</code>、<code>&lt;&lt;</code>的位运算符，但没见过<code>&gt;&gt;&gt;</code>估计意思差不多；</li>
<li><code>|=</code>运算符，目测是或；</li>
</ol>
</li>
<li><p>不知道写段代码测试吧</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"15的二进制数是   "</span>+ Integer.toBinaryString(<span class="number">15</span>));</div><div class="line">		System.out.println(<span class="string">"-15的二进制数是   "</span>+ Integer.toBinaryString(-<span class="number">15</span>));</div><div class="line">		System.out.println(<span class="string">"15 &gt;&gt; 2 的运算结果是    "</span> + (<span class="number">15</span> &gt;&gt; <span class="number">2</span>));</div><div class="line">		System.out.println(<span class="string">"15 &lt;&lt; 2 的运算结果是    "</span> + (<span class="number">15</span> &lt;&lt; <span class="number">2</span>));</div><div class="line">		System.out.println(<span class="string">"15 &gt;&gt;&gt; 2 的运算结果是    "</span> + (<span class="number">15</span> &gt;&gt;&gt; <span class="number">2</span>));</div><div class="line">		<span class="comment">//遗憾的是没有&lt;&lt;&lt;运算符,我的jdk是jdk1.8.0_144</span></div><div class="line">		<span class="comment">//System.out.println(15 &lt;&lt;&lt; 2);</span></div><div class="line">		System.out.println(<span class="string">"-15 &gt;&gt; 2 的运算结果是    "</span> + (-<span class="number">15</span> &gt;&gt; <span class="number">2</span>));</div><div class="line">		System.out.println(<span class="string">"-15 &lt;&lt; 2 的运算结果是    "</span> + (-<span class="number">15</span> &lt;&lt; <span class="number">2</span>));</div><div class="line">		System.out.println(<span class="string">"-15 &gt;&gt;&gt; 2 的运算结果是    "</span> + (-<span class="number">15</span> &gt;&gt;&gt; <span class="number">2</span>));</div><div class="line">		<span class="keyword">int</span> index = <span class="number">8</span>;</div><div class="line">		System.out.println(index + <span class="string">" | 15 &gt;&gt;&gt; 2的运算结果是   "</span> + (index | <span class="number">15</span> &gt;&gt;&gt; <span class="number">2</span>));</div><div class="line">		System.out.println(index + <span class="string">" |= 15 &gt;&gt;&gt; 2 的运算结果是    "</span> + (index |= <span class="number">15</span> &gt;&gt;&gt; <span class="number">2</span>));</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>运行结果</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">15的二进制数是   1111</div><div class="line">-15的二进制数是   11111111111111111111111111110001</div><div class="line">15 &gt;&gt; 2 的运算结果是    3</div><div class="line">15 &lt;&lt; 2 的运算结果是    60</div><div class="line">15 &gt;&gt;&gt; 2 的运算结果是    3</div><div class="line">-15 &gt;&gt; 2 的运算结果是    -4</div><div class="line">-15 &lt;&lt; 2 的运算结果是    -60</div><div class="line">-15 &gt;&gt;&gt; 2 的运算结果是    1073741820</div><div class="line">8 | 3的运算结果是   11</div><div class="line">8 |= 15 &gt;&gt;&gt; 2 的运算结果是    11</div></pre></td></tr></table></figure>
</li>
<li><p>分析</p>
<ol>
<li><code>15 &gt;&gt; 2</code><br>15 的 二 进 制 表 示 00000000 00000000 00000000 00001111  正数补码反码都一样<br>得 -15的补码表示 11111111 11111111 11111111 11110001<br>将 15右移2位 00000000 00000000 00000000 00000011 得3  </li>
<li><code>-15 &gt;&gt; 2</code><br>将-15右移2位 11111111 11111111 11111111 11111100<br>在高位补1<br>保留符号位，然后按位取反<br>10000000 00000000 00000000 00000011<br>然后加1，即为所求数的原码：<br>10000000 00000000 00000000 00000100<br>所以 -15&gt;&gt;2 右移两位结果是 -4</li>
<li><code>&gt;&gt;&gt;</code> 符号结果是无符号规则右移  主要区别是在负数上面<br>-15的二进制表示 11111111 11111111 11111111 11110001<br>将-15右移2位， 在高位补0， 00111111 11111111 11111111 11111100<br>所得结果 1073741820  </li>
<li>从上面的结果可以看出 8|=15就是 8|15 就是或运算符，唯一的区别的就是temp = temp | temp1 等于 temp |= temp1，重新复习下与或非运算符：<ol>
<li><code>与运算</code>符用符号“&amp;”表示，其使用规律如下：<br>两个操作数中位都为1，结果才为1，否则结果为0，</li>
<li><code>或运算</code>符用符号“|”表示，其运算规律如下：<br>两个位只要有一个为1，那么结果就是1，否则就为0， </li>
<li><code>非运算</code>符用符号“~”表示，其运算规律如下：<br>如果位为0，结果是1，如果位为1，结果是0， </li>
<li><code>异或运算</code>是用符号“^”表示的，其运算规律是：<br>两个操作数的位中，相同则结果为0，不同则结果为1。</li>
</ol>
</li>
</ol>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[提升生活质量的日常方法]]></title>
      <url>/improve-lives-quality.html</url>
      <content type="html"><![CDATA[<h3 id="提升生活质量的日常方法"><a href="#提升生活质量的日常方法" class="headerlink" title="提升生活质量的日常方法"></a>提升生活质量的日常方法</h3><p>大方面那些什么学习、坚定梦想、诚恳、谦虚，进入大的圈子等等太大，在此记录下生活细节需要提升的。<br><img src="http://ov62kaxkk.bkt.clouddn.com/1ad5ad6eddc451dae80256afb6fd5266d11632f9.jpg" alt="image"></p>
<a id="more"></a>
<h5 id="每天整理桌子"><a href="#每天整理桌子" class="headerlink" title="每天整理桌子"></a>每天整理桌子</h5><p>// 坚持啊，桌子每次都乱 ，</p>
<h5 id="至少每周要彻底打扫次卫生"><a href="#至少每周要彻底打扫次卫生" class="headerlink" title="至少每周要彻底打扫次卫生"></a>至少每周要彻底打扫次卫生</h5><p>// 反正我要赤脚  </p>
<h5 id="床单、被子每个月最好洗一次，晒一次"><a href="#床单、被子每个月最好洗一次，晒一次" class="headerlink" title="床单、被子每个月最好洗一次，晒一次"></a>床单、被子每个月最好洗一次，晒一次</h5><p>// 作为个工科男，最不爱做的卫生就是这个了 恍惚恍惚  (逃:<br>//1708 没办到  </p>
<h5 id="理发，一个月一次"><a href="#理发，一个月一次" class="headerlink" title="理发，一个月一次"></a>理发，一个月一次</h5><p>// 哈哈，我的头发生长旺盛，一般一个月</p>
<h5 id="坚持锻炼"><a href="#坚持锻炼" class="headerlink" title="坚持锻炼"></a>坚持锻炼</h5><p>// 好的身体才能做其他的事情，最最重要的。。。</p>
<h5 id="出门最好带个伞"><a href="#出门最好带个伞" class="headerlink" title="出门最好带个伞"></a>出门最好带个伞</h5><p>// 结果回来伞就没了 。。。</p>
<h5 id="多读点书，多学习"><a href="#多读点书，多学习" class="headerlink" title="多读点书，多学习"></a>多读点书，多学习</h5><p>// 虽然经常去图书馆，但是读书不是我的目的啊，超难。。。  但是不得不说读书是有好处的，这个没有终点，需要保持才行，像我们这种IT男，好难坚持做这个，忙的要死。。。</p>
<p>// 学习是必须的，加油。 gdvl</p>
<h5 id="唱歌"><a href="#唱歌" class="headerlink" title="唱歌"></a>唱歌</h5><p>// mmp，像我这种五音不全得是不是没救了  </p>
<p>// 没打游戏了，可以练习下，有大神走过来，可以教我啊啊啊，请加我，联系，万分感谢。。</p>
<h5 id="做菜"><a href="#做菜" class="headerlink" title="做菜"></a>做菜</h5><p>// 大部分时候被大厨室友承包了，</p>
<p>// 感觉男同袍做菜，貌似只看能不能吃，哈哈 ，逃，不要打我我</p>
<p>// 是的要做得好点才行，不然就一尘不变了，没意义。。</p>
<h5 id="少打游戏"><a href="#少打游戏" class="headerlink" title="少打游戏"></a>少打游戏</h5><p>// 戒了，戒了，不要跟我谈游戏了。。 </p>
<p>不然我会跟一直谈下去的。。。 </p>
<p>// 不知道以前那么多年，怎么这么大的瘾在打游戏上面，现在，失去的太多，不知道我还能不能追回来。。加油boy…</p>
<h5 id="关于洗碗机"><a href="#关于洗碗机" class="headerlink" title="关于洗碗机"></a>关于洗碗机</h5><p>// 好东西啊啊，可惜现在好贵 最便宜也要3000大洋，要赚钱了  </p>
<h5 id="每天一个苹果吧"><a href="#每天一个苹果吧" class="headerlink" title="每天一个苹果吧"></a>每天一个苹果吧</h5><p>// 今年牙齿上做了手术，估计好长段时间不能吃啊，口水.jpg，<br>// 说到苹果，是不要个削苹果的，到时候淘宝吧。</p>
<blockquote>
<p>欢迎有人给我提意见，万分感谢！！！</p>
</blockquote>
<p>(To Be Continue:  </p>
]]></content>
      
        <categories>
            
            <category> 碎碎念 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[fastDFS与java整合文件上传下载]]></title>
      <url>/fsds-java.html</url>
      <content type="html"><![CDATA[<h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ol>
<li>下载<code>fastdfs-client-java</code>源码<br><a href="http://pan.baidu.com/s/1i5QQXcL" target="_blank" rel="external">源码地址</a> 密码：<code>s3sw</code></li>
<li><p>修改<code>pom.xml</code><br><strong>第一个plugins是必需要的，是maven用来编译的插件，第二个是maven打源码包的，可以不要。</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">source</span>&gt;</span>$&#123;jdk.version&#125;<span class="tag">&lt;/<span class="name">source</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">target</span>&gt;</span>$&#123;jdk.version&#125;<span class="tag">&lt;/<span class="name">target</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-source-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">executions</span>&gt;</span></div><div class="line">              <span class="tag">&lt;<span class="name">execution</span>&gt;</span></div><div class="line">                  <span class="tag">&lt;<span class="name">id</span>&gt;</span>attach-sources<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">                  <span class="tag">&lt;<span class="name">goals</span>&gt;</span></div><div class="line">                      <span class="tag">&lt;<span class="name">goal</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></div><div class="line">                  <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></div><div class="line">              <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></div><div class="line">          <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>将 <code>fastdfs-client-java</code> 打包<br>直接项目右键，run as maven install<br>install成功后，fastdfs-client-java就成功的被安装到本地仓库了。</p>
</li>
</ol>
<hr>
<h3 id="编写工具类："><a href="#编写工具类：" class="headerlink" title="编写工具类："></a>编写工具类：</h3><ul>
<li>把<code>fdfs_client.conf</code>文件复制一份放到自己项目的resource下面;修改里面的<code>tracker.server</code>,其它的都不用动：  </li>
<li>在项目的<code>pom.xml</code>中添加依赖<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.csource<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastdfs-client-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.27-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li>首先来实现文件上传，<code>fastdfs-client-java</code>的上传是通过传入一个byte[ ]来完成的，简单看一下源码：<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> String[] upload_file(<span class="keyword">byte</span>[] file_buff, String file_ext_name, </div><div class="line">           NameValuePair[] meta_list) <span class="keyword">throws</span> IOException, MyException&#123;</div><div class="line">    <span class="keyword">final</span> String group_name = <span class="keyword">null</span>;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.upload_file(group_name, file_buff, <span class="number">0</span>, file_buff.length, file_ext_name, meta_list);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="文件属性"><a href="#文件属性" class="headerlink" title="文件属性"></a>文件属性</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.wuwii.utils;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.Serializable;</div><div class="line"><span class="keyword">import</span> java.util.Arrays;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * <span class="doctag">@ClassName</span> FastDFSFile</span></div><div class="line"><span class="comment"> * <span class="doctag">@Description</span> FastDFS上传文件业务对象</span></div><div class="line"><span class="comment"> * <span class="doctag">@author</span> zhangkai</span></div><div class="line"><span class="comment"> * <span class="doctag">@date</span> 2017年7月18日</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FastDFSFile</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span>&#123;</div><div class="line"></div><div class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">2637755431406080379L</span>;</div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	 * 文件二进制</span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="keyword">private</span> <span class="keyword">byte</span>[] content;</div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	 * 文件名称</span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="keyword">private</span> String name;</div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	 * 文件长度</span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="keyword">private</span> Long size;</div><div class="line">	</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">FastDFSFile</span><span class="params">()</span></span>&#123;</div><div class="line">		</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">FastDFSFile</span><span class="params">(<span class="keyword">byte</span>[] content, String name, Long size)</span></span>&#123;</div><div class="line">		<span class="keyword">this</span>.content = content;</div><div class="line">		<span class="keyword">this</span>.name = name;</div><div class="line">		<span class="keyword">this</span>.size = size;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="keyword">public</span> <span class="keyword">byte</span>[] getContent() &#123;</div><div class="line">		<span class="keyword">return</span> content;</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setContent</span><span class="params">(<span class="keyword">byte</span>[] content)</span> </span>&#123;</div><div class="line">		<span class="keyword">this</span>.content = content;</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">return</span> name;</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</div><div class="line">		<span class="keyword">this</span>.name = name;</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">public</span> Long <span class="title">getSize</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">return</span> size;</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSize</span><span class="params">(Long size)</span> </span>&#123;</div><div class="line">		<span class="keyword">this</span>.size = size;</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">getSerialversionuid</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">return</span> serialVersionUID;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="编写FastDFS工具类"><a href="#编写FastDFS工具类" class="headerlink" title="编写FastDFS工具类"></a>编写FastDFS工具类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.wuwii.utils;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.Serializable;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.apache.commons.io.FilenameUtils;</div><div class="line"><span class="keyword">import</span> org.csource.common.NameValuePair;</div><div class="line"><span class="keyword">import</span> org.csource.fastdfs.ClientGlobal;</div><div class="line"><span class="keyword">import</span> org.csource.fastdfs.StorageClient1;</div><div class="line"><span class="keyword">import</span> org.csource.fastdfs.TrackerClient;</div><div class="line"><span class="keyword">import</span> org.csource.fastdfs.TrackerServer;</div><div class="line"><span class="keyword">import</span> org.jetbrains.annotations.NotNull;</div><div class="line"><span class="keyword">import</span> org.springframework.core.io.ClassPathResource;</div><div class="line"><span class="keyword">import</span> org.springframework.http.HttpHeaders;</div><div class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</div><div class="line"><span class="keyword">import</span> org.springframework.http.MediaType;</div><div class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * <span class="doctag">@ClassName</span> FastDFSUtils</span></div><div class="line"><span class="comment"> * <span class="doctag">@Description</span> FastDFS工具类</span></div><div class="line"><span class="comment"> * <span class="doctag">@author</span> zhangkai</span></div><div class="line"><span class="comment"> * <span class="doctag">@date</span> 2017年7月18日</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FastDFSUtils</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span>&#123;</div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	 * </span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">4462272673174266738L</span>;</div><div class="line">	<span class="keyword">private</span> <span class="keyword">static</span> TrackerClient trackerClient;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> TrackerServer trackerServer;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> StorageClient1 storageClient1;</div><div class="line">    </div><div class="line">    <span class="keyword">static</span> &#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">        	<span class="comment">//clientGloble读配置文件</span></div><div class="line">        	ClassPathResource resource = <span class="keyword">new</span> ClassPathResource(<span class="string">"fdfs_client.conf"</span>);</div><div class="line">        	ClientGlobal.init(resource.getClassLoader().getResource(<span class="string">"fdfs_client.conf"</span>).getPath());</div><div class="line">			<span class="comment">//trackerclient</span></div><div class="line">        	trackerClient = <span class="keyword">new</span> TrackerClient();</div><div class="line">			trackerServer = trackerClient.getConnection();</div><div class="line">			<span class="comment">//storageclient</span></div><div class="line">			storageClient1 = <span class="keyword">new</span> StorageClient1(trackerServer,<span class="keyword">null</span>); </div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">	</div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	 * fastDFS文件上传</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> file 上传的文件 FastDFSFile</span></div><div class="line"><span class="comment">	 * <span class="doctag">@return</span> String 返回文件的绝对路径</span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">uploadFile</span><span class="params">(FastDFSFile file)</span></span>&#123;</div><div class="line">		String path = <span class="keyword">null</span>;</div><div class="line">		<span class="keyword">try</span> &#123;</div><div class="line">			<span class="comment">//文件扩展名</span></div><div class="line">			String ext = FilenameUtils.getExtension(file.getName());</div><div class="line">			<span class="comment">//mata list是表文件的描述</span></div><div class="line">			NameValuePair[] mata_list = <span class="keyword">new</span> NameValuePair[<span class="number">3</span>];</div><div class="line">			mata_list[<span class="number">0</span>] = <span class="keyword">new</span> NameValuePair(<span class="string">"fileName"</span>,file.getName());</div><div class="line">			mata_list[<span class="number">1</span>] = <span class="keyword">new</span> NameValuePair(<span class="string">"fileExt"</span>,ext);</div><div class="line">			mata_list[<span class="number">2</span>] = <span class="keyword">new</span> NameValuePair(<span class="string">"fileSize"</span>,String.valueOf(file.getSize()));</div><div class="line">			path = storageClient1.upload_file1(file.getContent(), ext, mata_list);</div><div class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">			e.printStackTrace();</div><div class="line">		&#125; </div><div class="line">		<span class="keyword">return</span> path;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	 * fastDFS文件下载</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> groupName 组名</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> remoteFileName 文件名</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> specFileName 真实文件名</span></div><div class="line"><span class="comment">	 * <span class="doctag">@return</span> ResponseEntity&lt;byte[]&gt;</span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="meta">@org</span>.jetbrains.annotations.NotNull</div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> ResponseEntity&lt;<span class="keyword">byte</span>[]&gt; downloadFile(String groupName, String remoteFileName, String specFileName)&#123;</div><div class="line">		<span class="keyword">byte</span>[] content = <span class="keyword">null</span>;</div><div class="line">	    HttpHeaders headers = <span class="keyword">new</span> HttpHeaders();</div><div class="line">	    <span class="keyword">try</span> &#123;</div><div class="line">	        content = storageClient1.download_file(groupName, remoteFileName);</div><div class="line">	        headers.setContentDispositionFormData(<span class="string">"attachment"</span>,  <span class="keyword">new</span> String(specFileName.getBytes(<span class="string">"UTF-8"</span>),<span class="string">"iso-8859-1"</span>));</div><div class="line">	        headers.setContentType(MediaType.APPLICATION_OCTET_STREAM);</div><div class="line">	    &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">	        e.printStackTrace();</div><div class="line">	    &#125;</div><div class="line">	    <span class="keyword">return</span> <span class="keyword">new</span> ResponseEntity&lt;<span class="keyword">byte</span>[]&gt;(content, headers, HttpStatus.CREATED);</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	 * 根据fastDFS返回的path得到文件的组名</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> path fastDFS返回的path</span></div><div class="line"><span class="comment">	 * <span class="doctag">@return</span></span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getGroupFormFilePath</span><span class="params">(String path)</span></span>&#123;</div><div class="line">		<span class="keyword">return</span> path.split(<span class="string">"/"</span>)[<span class="number">0</span>];</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	 * 根据fastDFS返回的path得到文件名</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> path fastDFS返回的path</span></div><div class="line"><span class="comment">	 * <span class="doctag">@return</span></span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="meta">@NotNull</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getFileNameFormFilePath</span><span class="params">(String path)</span> </span>&#123;</div><div class="line">		<span class="keyword">return</span> path.substring(path.indexOf(<span class="string">"/"</span>)+<span class="number">1</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="测试Controller"><a href="#测试Controller" class="headerlink" title="测试Controller"></a>测试Controller</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.wuwii.controller;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</div><div class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.wuwii.utils.FastDFSFile;</div><div class="line"><span class="keyword">import</span> com.wuwii.utils.FastDFSUtils;</div><div class="line"><span class="keyword">import</span> com.wuwii.utils.PropertyUtil;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * FastFDS控制器</span></div><div class="line"><span class="comment"> * <span class="doctag">@author</span> zhangkai</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="meta">@Controller</span></div><div class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/fastdfs"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FastFDSController</span> </span>&#123;</div><div class="line">	 <span class="meta">@RequestMapping</span>(value = <span class="string">"/upload"</span>, method = RequestMethod.POST)</div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">upload</span> <span class="params">(MultipartFile file)</span></span>&#123;</div><div class="line">		<span class="keyword">try</span> &#123;</div><div class="line">			FastDFSFile fastDFSFile = <span class="keyword">new</span> FastDFSFile(file.getBytes(), file.getOriginalFilename(), file.getSize());</div><div class="line">			String path = FastDFSUtils.uploadFile(fastDFSFile);</div><div class="line">			<span class="keyword">return</span> <span class="string">"redirect:"</span>+ PropertyUtil.get(<span class="string">"fastFDS_server"</span>) + path;</div><div class="line">		&#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">			<span class="comment">// TODO Auto-generated catch block</span></div><div class="line">			e.printStackTrace();</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">	&#125;</div><div class="line">	 </div><div class="line">	 <span class="meta">@RequestMapping</span>(value = <span class="string">"/download"</span>)</div><div class="line">	 <span class="keyword">public</span> ResponseEntity&lt;<span class="keyword">byte</span>[]&gt; download (String path, String specFileName)&#123;</div><div class="line">		 String filename = FastDFSUtils.getFileNameFormFilePath(path);</div><div class="line">		 String group = FastDFSUtils.getGroupFormFilePath(path);</div><div class="line">		 <span class="keyword">return</span> FastDFSUtils.downloadFile(group, filename, specFileName);</div><div class="line">	 &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="最后附上读取配置文件的工具类PropertyUtil"><a href="#最后附上读取配置文件的工具类PropertyUtil" class="headerlink" title="最后附上读取配置文件的工具类PropertyUtil"></a>最后附上读取配置文件的工具类PropertyUtil</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.wuwii.utils;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.InputStream;</div><div class="line"><span class="keyword">import</span> java.util.Properties;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * <span class="doctag">@ClassName</span> PropertyUtil</span></div><div class="line"><span class="comment"> * <span class="doctag">@Description</span> 读取配置文件的内容（key，value）</span></div><div class="line"><span class="comment"> * <span class="doctag">@author</span> zhangkai</span></div><div class="line"><span class="comment"> * <span class="doctag">@date</span> 2017年7月18日</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PropertyUtil</span> </span>&#123;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Properties PROP = <span class="keyword">new</span> Properties();</div><div class="line"></div><div class="line">	<span class="comment">/** </span></div><div class="line"><span class="comment">	 * <span class="doctag">@Method</span>: get </span></div><div class="line"><span class="comment">	 * <span class="doctag">@Description</span>: 读取配置文件的内容（key，value）</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> key</span></div><div class="line"><span class="comment">	 * <span class="doctag">@return</span> String</span></div><div class="line"><span class="comment">	 * <span class="doctag">@throws</span> </span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">get</span><span class="params">(String key)</span> </span>&#123;</div><div class="line">		<span class="keyword">if</span> (PROP.isEmpty()) &#123;</div><div class="line">			<span class="keyword">try</span> &#123;</div><div class="line">				InputStream in = PropertyUtil.class.getResourceAsStream(<span class="string">"/config.properties"</span>);</div><div class="line">				PROP.load(in);</div><div class="line">				in.close();</div><div class="line">			&#125; <span class="keyword">catch</span> (Exception e) &#123;&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> PROP.getProperty(key);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><h4 id="上传"><a href="#上传" class="headerlink" title="上传!"></a>上传!</h4><p><a href="http://img.blog.csdn.net/20170917111957613?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzU5MTUzODQ=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" target="_blank" rel="external">猫咪</a></p>
<h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><p>下载就很简单了，因为直接获得到二进制流了，返回给客户端即可。<br>下载需要主要的是，要注意从FastDFS返回的文件名是这种随机码，因此我们需要在上传的时候将文件本身的名字存到数据库，再到下载的时候对文件头重新设置名字即可。</p>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> fastDFS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[念]]></title>
      <url>/fetter-tears.html</url>
      <content type="html"><![CDATA[<p>夜总是格外的静，月光就可以通过窗户观赏我这残酷的心情了。  </p>
<p>想想过去，我有好几年都没跟你见过面，即使是聊天也是随意的说说，心中确实有写隔阂，没有以前那么天真，忧伤了。现在节奏太快了现在做事都是太认真了，总是考虑会不会有结果，渐渐的失去了一些目标，一些梦想，一些人。</p>
<p>事情总是那么凑巧，这个时候室友都封闭开发去，需要一个人，偌大的房间留个我一个人享受，想可以慢慢的在这里疗伤了，是的，下班后，比往常安静了，没以前在一起讲段子的欢声，骂做的菜真难吃，米是不是又没有煮·····现在只剩下我每天做一个菜，煮一碗米，一个人在吃饭，夜真是寂静的无聊，只有这个残酷的月光能在一旁陪伴。</p>
<p>真的想，一个人静静的吃饭。得不到可能就是最好的结果，毕竟这么长时间都没有联系过的人，早就应该消失的人，为什么还要在她幸福的时刻出现。</p>
<p>难以启齿，大道理真的没几个人能说的清楚，但是我还是清楚心中所想，只是心底还是存在那么一些执念，不愿意放下罢了，估计今生也没那么容易放下吧。</p>
<p>但是，人总是要往前走的，也不能一直活在这个回忆里去放弃，要努力前行。有可能时间不会让我忘记，只是削弱它的程度，它的悲伤吧。</p>
<p>曾经看到你的签名，想要制造羁绊，就必须要承担流泪的风险，我不太清楚你心中所想，也不懂你，这么多年了没见，每个人都发生了无数的可能。这句话我看出来，你是真的想找到爱情，而且已经可能找到了对的人了，成了一段绚丽多彩的美丽故事。</p>
<p>我可能是个执着的傻瓜，总是伤害到人，最终也伤害到自己了；我也是追求完美的人，都只去接触身边符合自己的人。所以总是这个患得患失的状态。我想上面这句话来形容我最好的了，选择来到了这个世界，就应该住在这里，与它融合，影响它，不必去选择什么对与错。可能会很痛，可能会是错误的道路，但那样生活就会不一样的精彩，不是吗？我希望不在抗拒这个世界带来的美好，也不去害怕去开辟新的人生。</p>
<p>我查到这句话来自《小王子》，对啊，你就是我的世界里独一无二的，我对你来说，也将是你的世界的唯一了。虽然每个人都有可能成为路人甲，但是人生不就是这样的吗？ </p>
]]></content>
      
        <categories>
            
            <category> 碎碎念 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 心情 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[搭建fastDFS单实例服务器]]></title>
      <url>/centos-fastDFS.html</url>
      <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><blockquote>
<p><code>FastDFS</code>是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。</p>
</blockquote>
<a id="more"></a>  
<blockquote>
<p><code>FastDFS</code>为互联网量身定制，充分考虑了冗余备份、负载均衡、线性扩容等机制，并注重高可用、高性能等指标，使用FastDFS很容易搭建一套高性能的文件服务器集群提供文件上传、下载等服务。</p>
<p><code>FastDFS</code>服务端有两个角色：跟踪器<code>tracker</code>和存储节点<code>storage</code>。跟踪器主要做调度工作，在访问上起负载均衡的作用。</p>
</blockquote>
<h2 id="安装并配置FastDFS"><a href="#安装并配置FastDFS" class="headerlink" title="安装并配置FastDFS"></a>安装并配置FastDFS</h2><h3 id="运行环境及相关软件"><a href="#运行环境及相关软件" class="headerlink" title="运行环境及相关软件"></a>运行环境及相关软件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">CentOS 7.0</div><div class="line">FastDFS_v5.08.tar.gz</div><div class="line">nginx-1.8.1.tar.gz</div><div class="line">fastdfs-nginx-module_v1.16.tar.gz</div><div class="line">libfastcommon</div></pre></td></tr></table></figure>
<h3 id="服务器规划"><a href="#服务器规划" class="headerlink" title="服务器规划"></a>服务器规划</h3><table>
<thead>
<tr>
<th>服务器名称</th>
<th>IP地址及端口</th>
<th>备注 </th>
</tr>
</thead>
<tbody>
<tr>
<td>fastdfs-tracker</td>
<td>192.168.114.128:22122</td>
<td>跟踪服务器/调度服务器</td>
</tr>
<tr>
<td>fastdfs-storage</td>
<td>192.168.114.128:23000</td>
<td>存储服务器 </td>
</tr>
</tbody>
</table>
<h3 id="安装FastDFS"><a href="#安装FastDFS" class="headerlink" title="安装FastDFS"></a>安装FastDFS</h3><h4 id="首先创建工具目录（非必须）"><a href="#首先创建工具目录（非必须）" class="headerlink" title="首先创建工具目录（非必须）"></a>首先创建工具目录（非必须）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@fastdfs-storage ~]<span class="comment"># mkdir -p /home/oldcat/tools</span></div><div class="line">[root@fastdfs-storage ~]<span class="comment"># cd /home/oldcat/tools/</span></div></pre></td></tr></table></figure>
<h4 id="下载并安装FastDFS依赖包libfastcommon"><a href="#下载并安装FastDFS依赖包libfastcommon" class="headerlink" title="下载并安装FastDFS依赖包libfastcommon"></a>下载并安装FastDFS依赖包libfastcommon</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@fastdfs-storage tools]<span class="comment"># wget https://codeload.github.com/happyfish100/libfastcommon/zip/master</span></div><div class="line">[root@fastdfs-storage tools]<span class="comment"># unzip master</span></div><div class="line">[root@fastdfs-storage tools]<span class="comment"># cd libfastcommon-master/</span></div><div class="line">[root@fastdfs-storage libfastcommon-master]<span class="comment"># ls</span></div><div class="line">HISTORY  INSTALL  libfastcommon.spec  make.sh  php-fastcommon  README  src</div><div class="line">[root@fastdfs-storage libfastcommon-master]<span class="comment"># ./make.sh</span></div><div class="line">[root@fastdfs-storage libfastcommon-master]<span class="comment"># ./make.sh install</span></div></pre></td></tr></table></figure>
<h4 id="下载并安装FastDFS"><a href="#下载并安装FastDFS" class="headerlink" title="下载并安装FastDFS"></a>下载并安装FastDFS</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@fastdfs-tracker tools]<span class="comment"># wget http://jaist.dl.sourceforge.net/project/fastdfs/FastDFS%20Server%20Source%20Code/FastDFS%20Server%20with%20PHP%20Extension%20Source%20Code%20V5.08/FastDFS_v5.08.tar.gz</span></div><div class="line">[root@fastdfs-tracker tools]<span class="comment"># tar xf FastDFS_v5.08.tar.gz</span></div><div class="line">[root@fastdfs-tracker tools]<span class="comment"># cd FastDFS</span></div><div class="line">[root@fastdfs-tracker FastDFS]<span class="comment"># ./make.sh &amp;&amp; ./make.sh install</span></div></pre></td></tr></table></figure>
<h4 id="采用默认方式安装后的文件及目录："><a href="#采用默认方式安装后的文件及目录：" class="headerlink" title="采用默认方式安装后的文件及目录："></a>采用默认方式安装后的文件及目录：</h4><h5 id="服务脚本："><a href="#服务脚本：" class="headerlink" title="服务脚本："></a>服务脚本：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@fastdfs-tracker ~]<span class="comment"># ll /etc/init.d/ |grep fdfs</span></div><div class="line">-rwxr-xr-x. 1 root root   918 4月  22 22:08 fdfs_storaged</div><div class="line">-rwxr-xr-x. 1 root root   920 4月  22 22:08 fdfs_trackerd</div></pre></td></tr></table></figure>
<h5 id="样例配置文件"><a href="#样例配置文件" class="headerlink" title="样例配置文件"></a>样例配置文件</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@fastdfs-tracker ~]<span class="comment"># ll /etc/fdfs/</span></div><div class="line">总用量 20</div><div class="line">-rw-r--r--. 1 root root 1461 4月  22 22:08 client.conf.sample</div><div class="line">-rw-r--r--. 1 root root 7927 4月  22 22:08 storage.conf.sample</div><div class="line">-rw-r--r--. 1 root root 7200 4月  22 22:08 tracker.conf.sample</div></pre></td></tr></table></figure>
<h5 id="命令行工具"><a href="#命令行工具" class="headerlink" title="命令行工具"></a>命令行工具</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">[root@fastdfs-tracker ~]<span class="comment"># ll /usr/bin|grep fdfs</span></div><div class="line">-rwxr-xr-x.   1 root root     252272 4月  22 22:08 fdfs_appender_test</div><div class="line">-rwxr-xr-x.   1 root root     252225 4月  22 22:08 fdfs_appender_test1</div><div class="line">-rwxr-xr-x.   1 root root     242449 4月  22 22:08 fdfs_append_file</div><div class="line">-rwxr-xr-x.   1 root root     242013 4月  22 22:08 fdfs_crc32</div><div class="line">-rwxr-xr-x.   1 root root     242508 4月  22 22:08 fdfs_delete_file</div><div class="line">-rwxr-xr-x.   1 root root     243627 4月  22 22:08 fdfs_download_file</div><div class="line">-rwxr-xr-x.   1 root root     243369 4月  22 22:08 fdfs_file_info</div><div class="line">-rwxr-xr-x.   1 root root     255657 4月  22 22:08 fdfs_monitor</div><div class="line">-rwxr-xr-x.   1 root root     863913 4月  22 22:08 fdfs_storaged</div><div class="line">-rwxr-xr-x.   1 root root     258712 4月  22 22:08 fdfs_test</div><div class="line">-rwxr-xr-x.   1 root root     257881 4月  22 22:08 fdfs_test1</div><div class="line">-rwxr-xr-x.   1 root root     365232 4月  22 22:08 fdfs_trackerd</div><div class="line">-rwxr-xr-x.   1 root root     243547 4月  22 22:08 fdfs_upload_appender</div><div class="line">-rwxr-xr-x.   1 root root     244453 4月  22 22:08 fdfs_upload_file</div></pre></td></tr></table></figure>
<h3 id="配置跟踪服务器（tracker-server）"><a href="#配置跟踪服务器（tracker-server）" class="headerlink" title="配置跟踪服务器（tracker server）"></a>配置跟踪服务器（tracker server）</h3><h4 id="拷贝tracker-server和client端样例配置文件并重命名"><a href="#拷贝tracker-server和client端样例配置文件并重命名" class="headerlink" title="拷贝tracker server和client端样例配置文件并重命名"></a>拷贝tracker server和client端样例配置文件并重命名</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@fastdfs-tracker ~]<span class="comment"># cp /etc/fdfs/tracker.conf.sample /etc/fdfs/tracker.conf</span></div><div class="line">[root@fastdfs-storage ~]<span class="comment"># cp /etc/fdfs/client.conf.sample /etc/fdfs/client.conf</span></div></pre></td></tr></table></figure>
<h4 id="编辑tracker-server配置文件tracker-conf，需要修改内容如下："><a href="#编辑tracker-server配置文件tracker-conf，需要修改内容如下：" class="headerlink" title="编辑tracker server配置文件tracker.conf，需要修改内容如下："></a>编辑tracker server配置文件tracker.conf，需要修改内容如下：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">disabled=<span class="literal">false</span>（默认为<span class="literal">false</span>，表示是否无效）</div><div class="line">port=22122（默认为22122）</div><div class="line">base_path=/data/fastdfs/tracker</div></pre></td></tr></table></figure>
<h4 id="编辑client端的配置文件client-conf，需要修改内容如下"><a href="#编辑client端的配置文件client-conf，需要修改内容如下" class="headerlink" title="编辑client端的配置文件client.conf，需要修改内容如下"></a>编辑client端的配置文件client.conf，需要修改内容如下</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">base_path=/data/fastdfs/tracker</div><div class="line">tracker_server=172.18.10.232:22122</div></pre></td></tr></table></figure>
<h4 id="创建tracker-server数据目录"><a href="#创建tracker-server数据目录" class="headerlink" title="创建tracker server数据目录"></a>创建tracker server数据目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@fastdfs-tracker ~]<span class="comment"># mkdir -p /data/fastdfs/tracker</span></div></pre></td></tr></table></figure>
<h4 id="测试启动tracker-server，启动成功会自动在-data-fastdfs-tracker目录新建data和logs目录"><a href="#测试启动tracker-server，启动成功会自动在-data-fastdfs-tracker目录新建data和logs目录" class="headerlink" title="测试启动tracker server，启动成功会自动在/data/fastdfs/tracker目录新建data和logs目录"></a>测试启动tracker server，启动成功会自动在/data/fastdfs/tracker目录新建data和logs目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[root@fastdfs-tracker ~]<span class="comment"># cd /data/fastdfs/tracker/</span></div><div class="line">[root@fastdfs-tracker tracker]<span class="comment"># ls</span></div><div class="line">[root@fastdfs-tracker tracker]<span class="comment"># /etc/init.d/fdfs_trackerd start</span></div><div class="line">Starting FastDFS tracker server:</div><div class="line">[root@fastdfs-tracker tracker]<span class="comment"># ss -lntup|grep 22122</span></div><div class="line">tcp    LISTEN     0      128                    *:22122                 *:*      users:((<span class="string">"fdfs_trackerd"</span>,3785,5)) </div><div class="line">[root@fastdfs-tracker tracker]<span class="comment"># ls</span></div><div class="line">data  logs</div></pre></td></tr></table></figure>
<h4 id="关闭tracker-server-目前可以不使用"><a href="#关闭tracker-server-目前可以不使用" class="headerlink" title="关闭tracker server(目前可以不使用)"></a>关闭tracker server(目前可以不使用)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@fastdfs-tracker tracker]<span class="comment"># /etc/init.d/fdfs_trackerd stop</span></div><div class="line">waiting <span class="keyword">for</span> pid [3785] <span class="built_in">exit</span> ...</div><div class="line">pid [3785] <span class="built_in">exit</span>.</div></pre></td></tr></table></figure>
<h3 id="配置存储服务器（storage-server）"><a href="#配置存储服务器（storage-server）" class="headerlink" title="配置存储服务器（storage server）"></a>配置存储服务器（storage server）</h3><h4 id="拷贝storage-server样例配置文件并重命名"><a href="#拷贝storage-server样例配置文件并重命名" class="headerlink" title="拷贝storage server样例配置文件并重命名"></a>拷贝storage server样例配置文件并重命名</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@fastdfs-storage ~]<span class="comment"># cp /etc/fdfs/storage.conf.sample /etc/fdfs/storage.conf</span></div></pre></td></tr></table></figure>
<h4 id="编辑storage-server配置文件storage-conf，需要修改内容如下："><a href="#编辑storage-server配置文件storage-conf，需要修改内容如下：" class="headerlink" title="编辑storage server配置文件storage.conf，需要修改内容如下："></a>编辑storage server配置文件storage.conf，需要修改内容如下：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">disabled=<span class="literal">false</span>（默认为<span class="literal">false</span>，表示是否无效）</div><div class="line">port=23000（默认为23000）</div><div class="line">base_path=/data/fastdfs/storage</div><div class="line">tracker_server=172.18.10.232:22122</div><div class="line">store_path0=/data/fastdfs/storage</div><div class="line">http.server_port=8888（默认为8888，nginx中配置的监听端口那之一致）</div></pre></td></tr></table></figure>
<h4 id="创建storage-server数据目录"><a href="#创建storage-server数据目录" class="headerlink" title="创建storage server数据目录"></a>创建storage server数据目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@fastdfs-storage ~]<span class="comment"># mkdir -p /data/fastdfs/storage</span></div></pre></td></tr></table></figure>
<h4 id="测试启动storage-server，启动成功会自动在-data-fastdfs-tracker目录新建data和logs目录（启动storage-server的前提是tracker-server必须事先已启动）"><a href="#测试启动storage-server，启动成功会自动在-data-fastdfs-tracker目录新建data和logs目录（启动storage-server的前提是tracker-server必须事先已启动）" class="headerlink" title="测试启动storage server，启动成功会自动在/data/fastdfs/tracker目录新建data和logs目录（启动storage server的前提是tracker server必须事先已启动）"></a>测试启动storage server，启动成功会自动在/data/fastdfs/tracker目录新建data和logs目录（启动storage server的前提是tracker server必须事先已启动）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[root@fastdfs-storage ~]<span class="comment"># cd /data/fastdfs/storage/</span></div><div class="line">[root@fastdfs-storage storage]<span class="comment"># ls</span></div><div class="line">[root@fastdfs-storage storage]<span class="comment"># /etc/init.d/fdfs_storaged start</span></div><div class="line">Starting FastDFS storage server:</div><div class="line">[root@fastdfs-storage storage]<span class="comment"># ss -lntup|grep 23000</span></div><div class="line">tcp    LISTEN     0      128                    *:23000                 *:*      users:((<span class="string">"fdfs_storaged"</span>,3786,5))</div><div class="line">[root@fastdfs-storage storage]<span class="comment"># ls</span></div><div class="line">data  logs</div></pre></td></tr></table></figure>
<h4 id="验证storage是否登记到tracker服务器"><a href="#验证storage是否登记到tracker服务器" class="headerlink" title="验证storage是否登记到tracker服务器~"></a>验证storage是否登记到tracker服务器~</h4><ul>
<li>使用/usr/bin/fdfs_monitor /etc/fdfs/storage.conf，运行fdfs_monitor查看storage服务器是否已经登记到tracker服务器。</li>
<li>如果出现ip_addr = <ip> Active, 则表明storage服务器已经登记到tracker服务器~</ip></li>
<li>Storage 1:<br>  id = 192.168.0.1<br>  ip_addr = 192.168.0.1  ==ACTIVE==<h3 id="文件上传测试"><a href="#文件上传测试" class="headerlink" title="文件上传测试"></a>文件上传测试</h3><ul>
<li>执行如下上传命令：<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@fastdfs-tracker ~]<span class="comment"># /usr/bin/fdfs_upload_file /etc/fdfs/client.conf /etc/fdfs/client.conf</span></div><div class="line">group1/M00/00/00/rBIK6VcaP0aARXXvAAHrUgHEviQ394.conf</div><div class="line">返回文件ID即说明文件已经上传成功</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<hr>
<h2 id="存储服务器（storage-server）安装并配置nginx"><a href="#存储服务器（storage-server）安装并配置nginx" class="headerlink" title="存储服务器（storage server）安装并配置nginx"></a>存储服务器（storage server）安装并配置nginx</h2><h3 id="下载并安装fastdfs-nginx-module模块"><a href="#下载并安装fastdfs-nginx-module模块" class="headerlink" title="下载并安装fastdfs-nginx-module模块"></a>下载并安装fastdfs-nginx-module模块</h3><blockquote>
<p><code>FastDFS</code>通过<code>Tracker</code>服务器,将文件放在<code>Storage</code>服务器存储，但是同组存储服务器之间需要进入文件复制，有同步延迟的问题。假设Tracker服务器将文件上传到了192.168.4.125，上传成功后文件ID已经返回给客户端。此时FastDFS存储集群机制会将这个文件同步到同组存储192.168.4.126，在文件还没有复制完成的情况下，客户端如果用这个文件ID在192.168.4.126上取文件,就会出现文件无法访问的错误。而fastdfs-nginx-module可以重定向文件连接到源服务器取文件,避免客户端由于复制延迟导致的文件无法访问错误。</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@fastdfs-storage  tools]<span class="comment"># wget http://nchc.dl.sourceforge.net/project/fastdfs/FastDFS%20Nginx%20Module%20Source%20Code/fastdfs-nginx-module_v1.16.tar.gz</span></div><div class="line">[root@fastdfs-storage tools]<span class="comment"># tar xf fastdfs-nginx-module_v1.16.tar.gz </span></div><div class="line">[root@fastdfs-storage tools]<span class="comment"># cd fastdfs-nginx-module/src/</span></div><div class="line">[root@fastdfs-storage src]<span class="comment"># vim config</span></div><div class="line">编辑config文件，执行如下命令进行批量替换并保存退出</div><div class="line">:%s+/usr/<span class="built_in">local</span>/+/usr/+g</div></pre></td></tr></table></figure>
<h3 id="拷贝fastdfs-nginx-module模块中配置文件到-etc-fdfs目录中并编辑"><a href="#拷贝fastdfs-nginx-module模块中配置文件到-etc-fdfs目录中并编辑" class="headerlink" title="拷贝fastdfs-nginx-module模块中配置文件到/etc/fdfs目录中并编辑"></a>拷贝fastdfs-nginx-module模块中配置文件到/etc/fdfs目录中并编辑</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[root@fastdfs-storage ~]<span class="comment"># cp /home/oldcat/tools/fastdfs-nginx-module/src/mod_fastdfs.conf /etc/fdfs/</span></div><div class="line">[root@fastdfs-storage ~]<span class="comment"># vim /etc/fdfs/mod_fastdfs.conf</span></div><div class="line">修改内容如下：</div><div class="line">connect_timeout=10</div><div class="line">base_path=/tmp（默认为/tmp）</div><div class="line">tracker_server=172.18.10.232:22122</div><div class="line">storage_server_port=23000（默认配置为23000）</div><div class="line">url_have_group_name = <span class="literal">true</span></div><div class="line">store_path0=/data/fastdfs/storage</div><div class="line">group_name=group1（默认配置为group1）</div></pre></td></tr></table></figure>
<h3 id="安装nginx依赖库（必须要检查）"><a href="#安装nginx依赖库（必须要检查）" class="headerlink" title="安装nginx依赖库（必须要检查）"></a>安装nginx依赖库（必须要检查）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@fastdfs-storage nginx-1.8.1]<span class="comment"># yum install -y pcre-devel zlib-devel</span></div></pre></td></tr></table></figure>
<h3 id="下载并安装nginx"><a href="#下载并安装nginx" class="headerlink" title="下载并安装nginx"></a>下载并安装nginx</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@fastdfs-storage  tools]<span class="comment"># wget http://nginx.org/download/nginx-1.8.1.tar.gz</span></div><div class="line">[root@fastdfs-storage tools]<span class="comment"># tar xf nginx-1.8.1.tar.gz </span></div><div class="line">[root@fastdfs-storage tools]<span class="comment"># cd nginx-1.8.1</span></div><div class="line">[root@fastdfs-storage nginx-1.8.1]<span class="comment"># ./configure --prefix=/application/nginx/ --add-module=../fastdfs-nginx-module/src/</span></div><div class="line">[root@fastdfs-storage nginx-1.8.1]<span class="comment"># make &amp;&amp; make install</span></div></pre></td></tr></table></figure>
<h3 id="拷贝FastDFS中的部分配置文件到-etc-fdfs目录中"><a href="#拷贝FastDFS中的部分配置文件到-etc-fdfs目录中" class="headerlink" title="拷贝FastDFS中的部分配置文件到/etc/fdfs目录中"></a>拷贝FastDFS中的部分配置文件到/etc/fdfs目录中</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@fastdfs-storage ~]<span class="comment"># cp /home/oldcat/tools/FastDFS/conf/http.conf /etc/fdfs/</span></div><div class="line">[root@fastdfs-storage ~]<span class="comment"># cp /home/oldcat/tools/FastDFS/conf/mime.types /etc/fdfs/</span></div></pre></td></tr></table></figure>
<h3 id="配置nginx，如下所示："><a href="#配置nginx，如下所示：" class="headerlink" title="配置nginx，如下所示："></a>配置nginx，如下所示：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">[root@fastdfs-storage ~]<span class="comment"># vim /application/nginx/conf/nginx.conf</span></div><div class="line">    user  root;    </div><div class="line">    worker_processes  1;</div><div class="line">    events &#123;</div><div class="line">       worker_connections  1024;</div><div class="line">    &#125;</div><div class="line">    http &#123;</div><div class="line">        include       mime.types;</div><div class="line">        default_type  application/octet-stream;</div><div class="line">        sendfile        on;</div><div class="line">        keepalive_timeout  65;</div><div class="line">        server &#123;</div><div class="line">            listen       8888;</div><div class="line">            server_name  localhost;</div><div class="line">            location / &#123;</div><div class="line">                root   html;</div><div class="line">                index  index.html index.htm;</div><div class="line">            &#125;</div><div class="line">            location ~/group[0-9]/M00 &#123;</div><div class="line">                root /data/fastdfs/storage/data/;</div><div class="line">                ngx_fastdfs_module;</div><div class="line">            &#125;</div><div class="line">            error_page   500 502 503 504  /50x.html;</div><div class="line">            location = /50x.html &#123;</div><div class="line">            root   html;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h3 id="说明："><a href="#说明：" class="headerlink" title="说明："></a>说明：</h3><p>a、<code>user root</code>是解决下载操作时报404的问题<br>b、<code>8888</code>端口号与<code>/etc/fdfs/storage.conf</code>中的<code>http.server_port=8888</code>相对应<br>c、<code>storage</code>对应有多个group的情况下，访问路径带group名称，例如：<code>/group1/M00/00/00/**</code>，对应nginx配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">location ~/group[0-9]/ &#123;</div><div class="line">       ngx_fastdfs_module;</div><div class="line"> &#125;</div></pre></td></tr></table></figure></p>
<h3 id="创建M00至storage存储目录的符号连接："><a href="#创建M00至storage存储目录的符号连接：" class="headerlink" title="创建M00至storage存储目录的符号连接："></a>创建M00至storage存储目录的符号连接：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ln -sv /data/fastdfs/storage/data  /data/fastdfs/storage/data/M00</div></pre></td></tr></table></figure>
<h3 id="拷贝nginx服务到-etc-init-d-目录下并启动"><a href="#拷贝nginx服务到-etc-init-d-目录下并启动" class="headerlink" title="拷贝nginx服务到/etc/init.d/目录下并启动"></a>拷贝nginx服务到/etc/init.d/目录下并启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@fastdfs-storage ~]<span class="comment"># cp /application/nginx/sbin/nginx /etc/init.d/</span></div><div class="line">[root@fastdfs-storage ~]<span class="comment"># /etc/init.d/nginx</span></div><div class="line">[root@fastdfs-storage ~]<span class="comment"># ss -lntup|grep 8888</span></div><div class="line">tcp    LISTEN     0      128                    *:8888                  *:*      users:((<span class="string">"nginx"</span>,7308,6),(<span class="string">"nginx"</span>,7309,6))</div></pre></td></tr></table></figure>
<hr>
<h2 id="防火墙端口设置"><a href="#防火墙端口设置" class="headerlink" title="防火墙端口设置"></a>防火墙端口设置</h2><h3 id="查看已开启的端口："><a href="#查看已开启的端口：" class="headerlink" title="查看已开启的端口："></a>查看已开启的端口：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@localhost nginx-1.12.0]<span class="comment"># firewall-cmd --zone=public --list-ports</span></div><div class="line">20880/tcp 80/tcp 2181/tcp 23000/tcp 22122/tcp 9999/tcp</div><div class="line">[root@localhost nginx-1.12.0]<span class="comment">#</span></div></pre></td></tr></table></figure>
<h3 id="开放端口号命令：–permanent表示永久生效，不加的话，重启后不生效"><a href="#开放端口号命令：–permanent表示永久生效，不加的话，重启后不生效" class="headerlink" title="开放端口号命令：–permanent表示永久生效，不加的话，重启后不生效"></a>开放端口号命令：–permanent表示永久生效，不加的话，重启后不生效</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo firewall-cmd --zone=public --add-port=23000/tcp --permanent <span class="comment">#开户端口号</span></div><div class="line">sudo firewall-cmd --reload</div></pre></td></tr></table></figure>
<h3 id="CentOS7-防火墙相关命令："><a href="#CentOS7-防火墙相关命令：" class="headerlink" title="CentOS7 防火墙相关命令："></a>CentOS7 防火墙相关命令：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">systemctl <span class="built_in">enable</span> firewalld.service    <span class="comment">#开启防火墙</span></div><div class="line">systemctl stop firewalld.service     <span class="comment">#关闭防火墙(开机会仍会启动)</span></div><div class="line">systemctl <span class="built_in">disable</span> firewalld.service  <span class="comment">#禁用防火墙(开机后不再启动)</span></div></pre></td></tr></table></figure>
<hr>
<h2 id="添加开机自启"><a href="#添加开机自启" class="headerlink" title="添加开机自启"></a>添加开机自启</h2><h3 id="首先检查-etc-rc-d-rc-local-是否有执行权限"><a href="#首先检查-etc-rc-d-rc-local-是否有执行权限" class="headerlink" title="首先检查 /etc/rc.d/rc.local  是否有执行权限"></a>首先检查 <code>/etc/rc.d/rc.local</code>  是否有执行权限</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ll /etc/rc.d/rc.local</div><div class="line">-rwxr--r-x. 1 root root 550 8月  18 10:58 /etc/rc.d/rc.local</div><div class="line">user 有x有执行权限，没有则执行</div><div class="line">chmod u+x /etc/rc.d/rc.local</div></pre></td></tr></table></figure>
<h3 id="在-etc-rc-d-rc-local-最底下加上服务器启动命令"><a href="#在-etc-rc-d-rc-local-最底下加上服务器启动命令" class="headerlink" title="在 /etc/rc.d/rc.local 最底下加上服务器启动命令"></a>在 <code>/etc/rc.d/rc.local</code> 最底下加上服务器启动命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/fdfs_trackerd start  </div><div class="line">/etc/init.d/fdfs_storaged start  </div><div class="line">/etc/init.d/nginx</div></pre></td></tr></table></figure>
<h3 id="查看服务启动"><a href="#查看服务启动" class="headerlink" title="查看服务启动"></a>查看服务启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># netstat -unltp|grep fdfs</span></div><div class="line">tcp        0      0 0.0.0.0:22122           0.0.0.0:*               LISTEN      1239/fdfs_trackerd  </div><div class="line">tcp        0      0 0.0.0.0:23000           0.0.0.0:*               LISTEN      1245/fdfs_storaged  </div><div class="line">[root@localhost ~]<span class="comment"># netstat -unltp|grep nginx</span></div><div class="line">tcp        0      0 0.0.0.0:8888            0.0.0.0:*               LISTEN      1278/nginx: master</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
            <tag> fastDFS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[如何通过Maven的Jetty插件运行Web工程]]></title>
      <url>/maven-jetty.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><code>Jetty</code> 是一个开源的servlet容器，它为基于Java的web容器，例如JSP和servlet提供运行环境。Jetty是使用Java语言编写的，它的API以一组JAR包的形式发布。开发人员可以将Jetty容器实例化成一个对象，可以迅速为一些独立运行（stand-alone）的Java应用提供网络和web连接。</p>
</blockquote>
<a id="more"></a>
<p>在pom.xml文件的<build></build>标签中加入如下配置：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.eclipse.jetty<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jetty-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>9.4.4.v20170414<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">scanIntervalSeconds</span>&gt;</span>5<span class="tag">&lt;/<span class="name">scanIntervalSeconds</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">webApp</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">contextPath</span>&gt;</span>/<span class="tag">&lt;/<span class="name">contextPath</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">webApp</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">connectors</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">connector</span> <span class="attr">implementation</span>=<span class="string">"org.eclipse.jetty.server.nio.SelectChannelConnector"</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">port</span>&gt;</span>80<span class="tag">&lt;/<span class="name">port</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">connector</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">connectors</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>参数配置：</p>
<ol>
<li><code>configuration.scanIntervalSeconds</code> 配置表示新代码的扫描时间间隔（秒），值 <code>&lt;= 0</code> 表示不扫描。这里利用的是jetty 的定时重载代码的特性，做修改后不用重新启动项目，自动扫描出改动后会自动更新class文件的。</li>
<li><code>configuration.webApp.contextPath</code> 配置表示工程的虚拟目录名，如果配置为/，则届时访问路径为hostname:port/，如果配置为/jetty，则届时访问路径为hostname:port/jetty，有点相当于namespace的作用。</li>
</ol>
<p>用Maven Build启动，需在Goals栏中配置如下：<br> <code>jetty:run</code> 或者指定端口 <code>jetty:run -Djetty.port=80</code></p>
<p>直接在项目根目录下在命令行中用maven命令启动: <code>mvn jetty:run -Djetty.port=80</code></p>
<p>需要注意的是<strong>pom.xml文件中指定的端口优先级要比Goals中指定的端口的优先级要高</strong></p>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> maven </tag>
            
            <tag> jetty </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[如何通过Maven的Tomcat插件运行Web工程]]></title>
      <url>/maven-tomcat.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><code>Tomcat</code> 服务器是一个免费的开放源代码的Web 应用服务器，属于轻量级应用服务器，在中小型系统和并发访问用户不是很多的场合下被普遍使用，是开发和调试JSP 程序的首选。对于一个初学者来说，可以这样认为，当在一台机器上配置好Apache 服务器，可利用它响应HTML（标准通用标记语言下的一个应用）页面的访问请求。实际上Tomcat是Apache 服务器的扩展，但运行时它是独立运行的，所以当你运行tomcat 时，它实际上作为一个与Apache 独立的进程单独运行的。</p>
</blockquote>
<p><img src="https://gss1.bdstatic.com/-vo3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike60%2C5%2C5%2C60%2C20/sign=bf6d81464f90f60310bd9415587bd87e/b3b7d0a20cf431adfe004e4e4e36acaf2fdd98f2.jpg" alt="img"><br><a id="more"></a></p>
<p><code>maven</code>项目如何使用<code>Tomcat</code>插件运行项目，需要注意的是几个参数的设置，就可以灵活使用了。</p>
<ul>
<li>maven version - 3.3.9</li>
<li><p><code>pom.xml</code>的 <code>build -&gt; plugins</code> 标签下加上:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">         <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">path</span>&gt;</span>/<span class="tag">&lt;/<span class="name">path</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">port</span>&gt;</span>80<span class="tag">&lt;/<span class="name">port</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">uriEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">uriEncoding</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>最后是这样的：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">plugins</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">					<span class="comment">&lt;!-- 设置项目jdk --&gt;</span></div><div class="line">					<span class="tag">&lt;<span class="name">source</span>&gt;</span>$&#123;java-version&#125;<span class="tag">&lt;/<span class="name">source</span>&gt;</span></div><div class="line">					<span class="tag">&lt;<span class="name">target</span>&gt;</span>$&#123;java-version&#125;<span class="tag">&lt;/<span class="name">target</span>&gt;</span></div><div class="line">					<span class="comment">&lt;!-- true:跳过测试 --&gt;</span></div><div class="line">					<span class="tag">&lt;<span class="name">skip</span>&gt;</span>true<span class="tag">&lt;/<span class="name">skip</span>&gt;</span></div><div class="line">					<span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></div><div class="line">				<span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">					<span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></div><div class="line">				<span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">				    <span class="comment">&lt;!-- 访问应用的路径 '/xxx' 就是使用 http://[hosthome]:[port]/xxx --&gt;</span></div><div class="line">					<span class="tag">&lt;<span class="name">path</span>&gt;</span>/<span class="tag">&lt;/<span class="name">path</span>&gt;</span></div><div class="line">					<span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span></div><div class="line">					<span class="comment">&lt;!-- 配置端口号 --&gt;</span></div><div class="line">					<span class="tag">&lt;<span class="name">port</span>&gt;</span>80<span class="tag">&lt;/<span class="name">port</span>&gt;</span></div><div class="line">					<span class="tag">&lt;<span class="name">uriEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">uriEncoding</span>&gt;</span></div><div class="line">				<span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>总结:</p>
<ol>
<li>maven build 启动方式 <code>tomcat7:run</code></li>
<li><code>maven-compiler-plugin</code> 插件能解决 <strong> Dynamic Web Module 3.0 requires Java 1.6 or newer</strong> update maven 项目后的java版本不对的问题。</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> maven </tag>
            
            <tag> tomcat </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[关于博客改动]]></title>
      <url>/version.html</url>
      <content type="html"><![CDATA[<p>来到这个世界，被筛选，被挑剔，被赋予使命。我们被杀死，中途夭折，轻易放弃，多次失败，多次重头再来。变成暴躁的炸弹，变成美丽的花，我们恶心难堪，又美丽动人，充满希望，却又满是不堪。你用悲伤去看，这是一个充满死亡的地方。你用努力去看，这里充满了永不停歇的希望，人们都带着笑。诸君共勉<br><a id="more"></a></p>
<h4 id="关于改动"><a href="#关于改动" class="headerlink" title="关于改动"></a>关于改动</h4><p>于20170902将改成.com域名wuwii</p>
<p>update20171009以前这个用这个页面测试和调整一些样式，现在把它调整下，记录博客相关的设置改动。</p>
<p>博客图床使用的是<code>七牛云</code>，每月免费10G流量。我外链音乐也是放上面的，当然什么Js，css也可以使用它的CDN加速。</p>
]]></content>
      
        <categories>
            
            <category> 学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/hello-world.html</url>
      <content type="html"><![CDATA[<p>Welcome to <a rel="external nofollow" target="_blank" href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a rel="external nofollow" target="_blank" href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a rel="external nofollow" target="_blank" href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a rel="external nofollow" target="_blank" href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a rel="external nofollow" target="_blank" href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a rel="external nofollow" target="_blank" href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a rel="external nofollow" target="_blank" href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a rel="external nofollow" target="_blank" href="https://hexo.io/docs/deployment.html">Deployment</a></p>
]]></content>
      
        <categories>
            
            <category> 测试 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 测试下 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
